{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { EventTypes } from '../interfaces';\nimport EventManager from './EventManager';\nimport { PointerType } from '../../PointerType';\nexport default class KeyboardEventManager extends EventManager {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"activationKeys\", ['Enter', ' ']);\n    _defineProperty(this, \"cancelationKeys\", ['Tab']);\n    _defineProperty(this, \"isPressed\", false);\n    _defineProperty(this, \"keyDownCallback\", event => {\n      if (this.cancelationKeys.indexOf(event.key) !== -1 && this.isPressed) {\n        this.dispatchEvent(event, EventTypes.CANCEL);\n        return;\n      }\n      if (this.activationKeys.indexOf(event.key) === -1) {\n        return;\n      }\n      this.dispatchEvent(event, EventTypes.DOWN);\n    });\n    _defineProperty(this, \"keyUpCallback\", event => {\n      if (this.activationKeys.indexOf(event.key) === -1 || !this.isPressed) {\n        return;\n      }\n      this.dispatchEvent(event, EventTypes.UP);\n    });\n  }\n  dispatchEvent(event, eventType) {\n    if (!(event.target instanceof HTMLElement)) {\n      return;\n    }\n    const adaptedEvent = this.mapEvent(event, eventType);\n    switch (eventType) {\n      case EventTypes.UP:\n        this.isPressed = false;\n        this.onPointerUp(adaptedEvent);\n        break;\n      case EventTypes.DOWN:\n        this.isPressed = true;\n        this.onPointerDown(adaptedEvent);\n        break;\n      case EventTypes.CANCEL:\n        this.isPressed = false;\n        this.onPointerCancel(adaptedEvent);\n        break;\n    }\n  }\n  registerListeners() {\n    this.view.addEventListener('keydown', this.keyDownCallback);\n    this.view.addEventListener('keyup', this.keyUpCallback);\n  }\n  unregisterListeners() {\n    this.view.addEventListener('keydown', this.keyDownCallback);\n    this.view.addEventListener('keyup', this.keyUpCallback);\n  }\n  mapEvent(event, eventType) {\n    const viewRect = event.target.getBoundingClientRect();\n    const viewportPosition = {\n      x: (viewRect === null || viewRect === void 0 ? void 0 : viewRect.x) + (viewRect === null || viewRect === void 0 ? void 0 : viewRect.width) / 2,\n      y: (viewRect === null || viewRect === void 0 ? void 0 : viewRect.y) + (viewRect === null || viewRect === void 0 ? void 0 : viewRect.height) / 2\n    };\n    const relativePosition = {\n      x: (viewRect === null || viewRect === void 0 ? void 0 : viewRect.width) / 2,\n      y: (viewRect === null || viewRect === void 0 ? void 0 : viewRect.height) / 2\n    };\n    return {\n      x: viewportPosition.x,\n      y: viewportPosition.y,\n      offsetX: relativePosition.x,\n      offsetY: relativePosition.y,\n      pointerId: 0,\n      eventType: eventType,\n      pointerType: PointerType.KEY,\n      time: event.timeStamp\n    };\n  }\n}","map":{"version":3,"names":["EventTypes","EventManager","PointerType","KeyboardEventManager","constructor","args","_defineProperty","event","cancelationKeys","indexOf","key","isPressed","dispatchEvent","CANCEL","activationKeys","DOWN","UP","eventType","target","HTMLElement","adaptedEvent","mapEvent","onPointerUp","onPointerDown","onPointerCancel","registerListeners","view","addEventListener","keyDownCallback","keyUpCallback","unregisterListeners","viewRect","getBoundingClientRect","viewportPosition","x","width","y","height","relativePosition","offsetX","offsetY","pointerId","pointerType","KEY","time","timeStamp"],"sources":["C:\\Users\\user\\OneDrive\\Documents\\rn\\l\\node_modules\\react-native-gesture-handler\\lib\\module\\web\\tools\\KeyboardEventManager.ts"],"sourcesContent":["import { AdaptedEvent, EventTypes } from '../interfaces';\nimport EventManager from './EventManager';\nimport { PointerType } from '../../PointerType';\n\nexport default class KeyboardEventManager extends EventManager<HTMLElement> {\n  private activationKeys = ['Enter', ' '];\n  private cancelationKeys = ['Tab'];\n  private isPressed = false;\n\n  private keyDownCallback = (event: KeyboardEvent): void => {\n    if (this.cancelationKeys.indexOf(event.key) !== -1 && this.isPressed) {\n      this.dispatchEvent(event, EventTypes.CANCEL);\n      return;\n    }\n\n    if (this.activationKeys.indexOf(event.key) === -1) {\n      return;\n    }\n\n    this.dispatchEvent(event, EventTypes.DOWN);\n  };\n\n  private keyUpCallback = (event: KeyboardEvent): void => {\n    if (this.activationKeys.indexOf(event.key) === -1 || !this.isPressed) {\n      return;\n    }\n\n    this.dispatchEvent(event, EventTypes.UP);\n  };\n\n  private dispatchEvent(event: KeyboardEvent, eventType: EventTypes) {\n    if (!(event.target instanceof HTMLElement)) {\n      return;\n    }\n\n    const adaptedEvent = this.mapEvent(event, eventType);\n\n    switch (eventType) {\n      case EventTypes.UP:\n        this.isPressed = false;\n        this.onPointerUp(adaptedEvent);\n        break;\n      case EventTypes.DOWN:\n        this.isPressed = true;\n        this.onPointerDown(adaptedEvent);\n        break;\n      case EventTypes.CANCEL:\n        this.isPressed = false;\n        this.onPointerCancel(adaptedEvent);\n        break;\n    }\n  }\n\n  public registerListeners(): void {\n    this.view.addEventListener('keydown', this.keyDownCallback);\n    this.view.addEventListener('keyup', this.keyUpCallback);\n  }\n\n  public unregisterListeners(): void {\n    this.view.addEventListener('keydown', this.keyDownCallback);\n    this.view.addEventListener('keyup', this.keyUpCallback);\n  }\n\n  protected mapEvent(\n    event: KeyboardEvent,\n    eventType: EventTypes\n  ): AdaptedEvent {\n    const viewRect = (event.target as HTMLElement).getBoundingClientRect();\n\n    const viewportPosition = {\n      x: viewRect?.x + viewRect?.width / 2,\n      y: viewRect?.y + viewRect?.height / 2,\n    };\n\n    const relativePosition = {\n      x: viewRect?.width / 2,\n      y: viewRect?.height / 2,\n    };\n\n    return {\n      x: viewportPosition.x,\n      y: viewportPosition.y,\n      offsetX: relativePosition.x,\n      offsetY: relativePosition.y,\n      pointerId: 0,\n      eventType: eventType,\n      pointerType: PointerType.KEY,\n      time: event.timeStamp,\n    };\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}