{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axiosInstance from '../../../../Security/helpers/axios';\nexport const createVisitor = createAsyncThunk('visitor/createVisitor', async (formData, {\n  rejectWithValue\n}) => {\n  try {\n    console.log(formData);\n    const response = await axiosInstance.post('/createVisitors', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst visitorSlice = createSlice({\n  name: 'visitor',\n  initialState: {\n    loading: false,\n    error: null,\n    success: false\n  },\n  reducers: {\n    resetState: state => {\n      state.loading = false;\n      state.error = null;\n      state.success = false;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(createVisitor.pending, state => {\n      state.loading = true;\n      state.error = null;\n      state.success = false;\n    }).addCase(createVisitor.fulfilled, state => {\n      state.loading = false;\n      state.success = true;\n    }).addCase(createVisitor.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  resetState\n} = visitorSlice.actions;\nexport default visitorSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axiosInstance","createVisitor","formData","rejectWithValue","console","log","response","post","headers","data","error","visitorSlice","name","initialState","loading","success","reducers","resetState","state","extraReducers","builder","addCase","pending","fulfilled","rejected","action","payload","actions","reducer"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/src/panel/User/Redux/Slice/Security_Panel/VisitorsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axiosInstance from '../../../../Security/helpers/axios';\r\n\r\n// Async thunk for creating a visitor\r\nexport const createVisitor = createAsyncThunk(\r\n  'visitor/createVisitor',\r\n  async (formData, { rejectWithValue }) => {\r\n    try {\r\n      console.log(formData)\r\n      const response = await axiosInstance.post('/createVisitors', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      console.log(response)\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nconst visitorSlice = createSlice({\r\n  name: 'visitor',\r\n  initialState: {\r\n    loading: false,\r\n    error: null,\r\n    success: false,\r\n  },\r\n  reducers: {\r\n    resetState: (state) => {\r\n      state.loading = false;\r\n      state.error = null;\r\n      state.success = false;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(createVisitor.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n        state.success = false;\r\n      })\r\n      .addCase(createVisitor.fulfilled, (state) => {\r\n        state.loading = false;\r\n        state.success = true;\r\n      })\r\n      .addCase(createVisitor.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { resetState } = visitorSlice.actions;\r\nexport default visitorSlice.reducer;\r\n\r\n\r\n// import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n// import axiosInstance from '../../../../Security/helpers/axios';\r\n\r\n// // Async thunk for creating a visitor\r\n// export const createVisitor = createAsyncThunk(\r\n//   'visitor/createVisitor',\r\n//   async (visitorData, { rejectWithValue }) => {\r\n//     try {\r\n//       const formData = new FormData();\r\n//       for (const key in visitorData) {\r\n//         if (visitorData[key] instanceof Array) {\r\n//         } else if (key === 'pictures' && visitorData[key]) {\r\n//           formData.append('pictures', {\r\n//             uri: visitorData[key].uri,\r\n//             type: visitorData[key].type || 'image/jpeg', // Adjust MIME type as needed\r\n//             name: visitorData[key].fileName || 'photo.jpg',\r\n//           });\r\n//         } else {\r\n//           formData.append(key, visitorData[key]);\r\n//         }\r\n//       }\r\n\r\n//       const response = await axiosInstance.post('/createVisitors', formData, {\r\n//         headers: {\r\n//           'Content-Type': 'multipart/form-data',\r\n//         },\r\n//       });\r\n\r\n//       return response.data;\r\n//     } catch (error) {\r\n//       console.log(error)\r\n//       return rejectWithValue(error.response.data);\r\n//     }\r\n//   }\r\n// );\r\n\r\n// const visitorSlice = createSlice({\r\n//   name: 'visitor',\r\n//   initialState: {\r\n//     loading: false,\r\n//     error: null,\r\n//     success: false,\r\n//   },\r\n//   reducers: {\r\n//     resetState: (state) => {\r\n//       state.loading = false;\r\n//       state.error = null;\r\n//       state.success = false;\r\n//     },\r\n//   },\r\n//   extraReducers: (builder) => {\r\n//     builder\r\n//       .addCase(createVisitor.pending, (state) => {\r\n//         state.loading = true;\r\n//         state.error = null;\r\n//         state.success = false;\r\n//       })\r\n//       .addCase(createVisitor.fulfilled, (state) => {\r\n//         state.loading = false;\r\n//         state.success = true;\r\n//       })\r\n//       .addCase(createVisitor.rejected, (state, action) => {\r\n//         state.loading = false;\r\n//         state.error = action.payload;\r\n//       });\r\n//   },\r\n// });\r\n\r\n// export const { resetState } = visitorSlice.actions;\r\n// export default visitorSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,aAAa,MAAM,oCAAoC;AAG9D,OAAO,MAAMC,aAAa,GAAGF,gBAAgB,CAC3C,uBAAuB,EACvB,OAAOG,QAAQ,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACvC,IAAI;IACFC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;IACrB,MAAMI,QAAQ,GAAG,MAAMN,aAAa,CAACO,IAAI,CAAC,iBAAiB,EAAEL,QAAQ,EAAE;MACrEM,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACFJ,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;IACrB,OAAOA,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAOP,eAAe,CAACO,KAAK,CAACJ,QAAQ,CAACG,IAAI,CAAC;EAC7C;AACF,CACF,CAAC;AAED,MAAME,YAAY,GAAGb,WAAW,CAAC;EAC/Bc,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACZC,OAAO,EAAE,KAAK;IACdJ,KAAK,EAAE,IAAI;IACXK,OAAO,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAU,EAAGC,KAAK,IAAK;MACrBA,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACR,KAAK,GAAG,IAAI;MAClBQ,KAAK,CAACH,OAAO,GAAG,KAAK;IACvB;EACF,CAAC;EACDI,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACpB,aAAa,CAACqB,OAAO,EAAGJ,KAAK,IAAK;MACzCA,KAAK,CAACJ,OAAO,GAAG,IAAI;MACpBI,KAAK,CAACR,KAAK,GAAG,IAAI;MAClBQ,KAAK,CAACH,OAAO,GAAG,KAAK;IACvB,CAAC,CAAC,CACDM,OAAO,CAACpB,aAAa,CAACsB,SAAS,EAAGL,KAAK,IAAK;MAC3CA,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACH,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC,CACDM,OAAO,CAACpB,aAAa,CAACuB,QAAQ,EAAE,CAACN,KAAK,EAAEO,MAAM,KAAK;MAClDP,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACR,KAAK,GAAGe,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAET;AAAW,CAAC,GAAGN,YAAY,CAACgB,OAAO;AAClD,eAAehB,YAAY,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}