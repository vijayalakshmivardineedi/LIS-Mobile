{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\src\\\\panel\\\\User\\\\Navigations\\\\Screens\\\\Community\\\\IndividualChat.js\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Avatar } from \"react-native-elements\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport socketServices from \"../../../Socket/SocketServices\";\nimport people from \"../../../../../assets/User/Avatar/user.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IndividualChat = () => {\n  const navigation = useNavigation();\n  const [chatList, setChatList] = useState([]);\n  const societyId = \"6683b57b073739a31e8350d0\";\n  const id = \"6694f1e2fef273737d9196c7\";\n  useEffect(() => {\n    socketServices.initializeSocket();\n    socketServices.emit('get_resident_individual_chat_list', {\n      id\n    });\n    socketServices.on('error', error => {\n      console.error('Socket error:', error);\n    });\n    socketServices.on('chat_list_Residents', chatList => {\n      setChatList(chatList);\n    });\n    return () => {\n      socketServices.removeListener('chat_list_Residents');\n      socketServices.removeListener('error');\n    };\n  }, [societyId]);\n  const renderItem = ({\n    item\n  }) => {\n    const isSingleParticipant = item.participants.length === 1 && item.participants[0]._id === id;\n    const otherParticipant = item.participants.find(participant => participant._id !== id);\n    return _jsxDEV(TouchableOpacity, {\n      onPress: () => navigation.navigate(\"IndividualChatRoom\", {\n        item\n      }),\n      children: _jsxDEV(View, {\n        style: styles.itemContainer,\n        children: [_jsxDEV(Avatar, {\n          source: people,\n          rounded: true,\n          size: 50,\n          containerStyle: styles.avatarContainer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), _jsxDEV(View, {\n          style: styles.textContainer,\n          children: [_jsxDEV(Text, {\n            style: styles.name,\n            children: isSingleParticipant ? \"Admin\" : otherParticipant ? otherParticipant.name : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), _jsxDEV(Text, {\n            style: styles.person,\n            children: item.participants.length === 2 ? otherParticipant.mobileNumber : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), _jsxDEV(MaterialIcons, {\n          name: \"arrow-forward-ios\",\n          size: 24,\n          color: \"black\",\n          style: styles.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  };\n  const ItemSeparator = () => _jsxDEV(View, {\n    style: styles.separator\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 33\n  }, this);\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: _jsxDEV(FlatList, {\n      data: chatList,\n      keyExtractor: item => item._id,\n      renderItem: renderItem,\n      ItemSeparatorComponent: ItemSeparator\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#F8F8F8\",\n    padding: 10\n  },\n  itemContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: 15,\n    backgroundColor: \"#fff\",\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: \"lightgray\"\n  },\n  textContainer: {\n    marginLeft: 10,\n    flex: 1\n  },\n  name: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    marginLeft: 15\n  },\n  person: {\n    fontSize: 14,\n    color: \"#666\",\n    marginLeft: 15\n  },\n  avatarContainer: {\n    borderWidth: 1,\n    borderColor: \"white\"\n  },\n  icon: {\n    marginLeft: \"auto\"\n  },\n  separator: {\n    height: 10\n  }\n});\nexport default IndividualChat;","map":{"version":3,"names":["React","useEffect","useState","View","StyleSheet","FlatList","Text","TouchableOpacity","Avatar","MaterialIcons","useNavigation","socketServices","people","jsxDEV","_jsxDEV","IndividualChat","navigation","chatList","setChatList","societyId","id","initializeSocket","emit","on","error","console","removeListener","renderItem","item","isSingleParticipant","participants","length","_id","otherParticipant","find","participant","onPress","navigate","children","style","styles","itemContainer","source","rounded","size","containerStyle","avatarContainer","fileName","_jsxFileName","lineNumber","columnNumber","textContainer","name","person","mobileNumber","color","icon","ItemSeparator","separator","container","data","keyExtractor","ItemSeparatorComponent","create","flex","backgroundColor","padding","flexDirection","alignItems","justifyContent","borderRadius","borderWidth","borderColor","marginLeft","fontSize","fontWeight","height"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/src/panel/User/Navigations/Screens/Community/IndividualChat.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    View,\r\n    StyleSheet,\r\n    FlatList,\r\n    Text,\r\n    TouchableOpacity,\r\n} from \"react-native\";\r\nimport { Avatar } from \"react-native-elements\";\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport socketServices from \"../../../Socket/SocketServices\"\r\nimport people from \"../../../../../assets/User/Avatar/user.png\";\r\nconst IndividualChat = () => {\r\n    const navigation = useNavigation();\r\n    const [chatList, setChatList] = useState([]);\r\n    const societyId = \"6683b57b073739a31e8350d0\";\r\n    const id = \"6694f1e2fef273737d9196c7\";\r\n    useEffect(() => {\r\n        // Ensure socket initialization\r\n        socketServices.initializeSocket();\r\n        socketServices.emit('get_resident_individual_chat_list', { id });\r\n        // Handle any errors\r\n        socketServices.on('error', (error) => {\r\n            console.error('Socket error:', error);\r\n        });\r\n        socketServices.on('chat_list_Residents', (chatList) => {\r\n            setChatList(chatList);\r\n        });\r\n        return () => {\r\n            socketServices.removeListener('chat_list_Residents');\r\n            socketServices.removeListener('error');\r\n        };\r\n    }, [societyId])\r\n    const renderItem = ({ item }) => {\r\n        const isSingleParticipant = item.participants.length === 1 && item.participants[0]._id === id;\r\n        const otherParticipant = item.participants.find(participant => participant._id !== id);\r\n        return (\r\n            <TouchableOpacity onPress={() => navigation.navigate(\"IndividualChatRoom\", { item })}>\r\n                <View style={styles.itemContainer}>\r\n                    <Avatar\r\n                        source={people}\r\n                        rounded\r\n                        size={50}\r\n                        containerStyle={styles.avatarContainer}\r\n                    />\r\n                    <View style={styles.textContainer}>\r\n                        <Text style={styles.name}>\r\n                            {isSingleParticipant ? \"Admin\" : (otherParticipant ? otherParticipant.name : \"\")}\r\n                        </Text>\r\n                        <Text style={styles.person}>\r\n                            {item.participants.length === 2 ? otherParticipant.mobileNumber : \"\"}\r\n                        </Text>\r\n                    </View>\r\n                    <MaterialIcons\r\n                        name=\"arrow-forward-ios\"\r\n                        size={24}\r\n                        color=\"black\"\r\n                        style={styles.icon}\r\n                    />\r\n                </View>\r\n            </TouchableOpacity>\r\n        );\r\n    };\r\n    const ItemSeparator = () => <View style={styles.separator} />;\r\n    return (\r\n        <View style={styles.container}>\r\n            <FlatList\r\n                data={chatList}\r\n                keyExtractor={(item) => item._id}\r\n                renderItem={renderItem}\r\n                ItemSeparatorComponent={ItemSeparator}\r\n            />\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"#F8F8F8\",\r\n        padding: 10,\r\n    },\r\n    itemContainer: {\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        padding: 15,\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: 10,\r\n        borderWidth: 1,\r\n        borderColor: \"lightgray\",\r\n    },\r\n    textContainer: {\r\n        marginLeft: 10,\r\n        flex: 1,\r\n    },\r\n    name: {\r\n        fontSize: 18,\r\n        fontWeight: \"bold\",\r\n        marginLeft: 15,\r\n    },\r\n    person: {\r\n        fontSize: 14,\r\n        color: \"#666\",\r\n        marginLeft: 15,\r\n    },\r\n    avatarContainer: {\r\n        borderWidth: 1,\r\n        borderColor: \"white\",\r\n    },\r\n    icon: {\r\n        marginLeft: \"auto\",\r\n    },\r\n    separator: {\r\n        height: 10,\r\n    },\r\n});\r\n\r\nexport default IndividualChat;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAQnD,SAASC,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,MAAM,MAAM,4CAA4C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChE,MAAMC,cAAc,GAAGA,CAAA,KAAM;EACzB,MAAMC,UAAU,GAAGN,aAAa,CAAC,CAAC;EAClC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMiB,SAAS,GAAG,0BAA0B;EAC5C,MAAMC,EAAE,GAAG,0BAA0B;EACrCnB,SAAS,CAAC,MAAM;IAEZU,cAAc,CAACU,gBAAgB,CAAC,CAAC;IACjCV,cAAc,CAACW,IAAI,CAAC,mCAAmC,EAAE;MAAEF;IAAG,CAAC,CAAC;IAEhET,cAAc,CAACY,EAAE,CAAC,OAAO,EAAGC,KAAK,IAAK;MAClCC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACzC,CAAC,CAAC;IACFb,cAAc,CAACY,EAAE,CAAC,qBAAqB,EAAGN,QAAQ,IAAK;MACnDC,WAAW,CAACD,QAAQ,CAAC;IACzB,CAAC,CAAC;IACF,OAAO,MAAM;MACTN,cAAc,CAACe,cAAc,CAAC,qBAAqB,CAAC;MACpDf,cAAc,CAACe,cAAc,CAAC,OAAO,CAAC;IAC1C,CAAC;EACL,CAAC,EAAE,CAACP,SAAS,CAAC,CAAC;EACf,MAAMQ,UAAU,GAAGA,CAAC;IAAEC;EAAK,CAAC,KAAK;IAC7B,MAAMC,mBAAmB,GAAGD,IAAI,CAACE,YAAY,CAACC,MAAM,KAAK,CAAC,IAAIH,IAAI,CAACE,YAAY,CAAC,CAAC,CAAC,CAACE,GAAG,KAAKZ,EAAE;IAC7F,MAAMa,gBAAgB,GAAGL,IAAI,CAACE,YAAY,CAACI,IAAI,CAACC,WAAW,IAAIA,WAAW,CAACH,GAAG,KAAKZ,EAAE,CAAC;IACtF,OACIN,OAAA,CAACP,gBAAgB;MAAC6B,OAAO,EAAEA,CAAA,KAAMpB,UAAU,CAACqB,QAAQ,CAAC,oBAAoB,EAAE;QAAET;MAAK,CAAC,CAAE;MAAAU,QAAA,EACjFxB,OAAA,CAACX,IAAI;QAACoC,KAAK,EAAEC,MAAM,CAACC,aAAc;QAAAH,QAAA,GAC9BxB,OAAA,CAACN,MAAM;UACHkC,MAAM,EAAE9B,MAAO;UACf+B,OAAO;UACPC,IAAI,EAAE,EAAG;UACTC,cAAc,EAAEL,MAAM,CAACM;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC,EACFpC,OAAA,CAACX,IAAI;UAACoC,KAAK,EAAEC,MAAM,CAACW,aAAc;UAAAb,QAAA,GAC9BxB,OAAA,CAACR,IAAI;YAACiC,KAAK,EAAEC,MAAM,CAACY,IAAK;YAAAd,QAAA,EACpBT,mBAAmB,GAAG,OAAO,GAAII,gBAAgB,GAAGA,gBAAgB,CAACmB,IAAI,GAAG;UAAG;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9E,CAAC,EACPpC,OAAA,CAACR,IAAI;YAACiC,KAAK,EAAEC,MAAM,CAACa,MAAO;YAAAf,QAAA,EACtBV,IAAI,CAACE,YAAY,CAACC,MAAM,KAAK,CAAC,GAAGE,gBAAgB,CAACqB,YAAY,GAAG;UAAE;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,EACPpC,OAAA,CAACL,aAAa;UACV2C,IAAI,EAAC,mBAAmB;UACxBR,IAAI,EAAE,EAAG;UACTW,KAAK,EAAC,OAAO;UACbhB,KAAK,EAAEC,MAAM,CAACgB;QAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC;EAE3B,CAAC;EACD,MAAMO,aAAa,GAAGA,CAAA,KAAM3C,OAAA,CAACX,IAAI;IAACoC,KAAK,EAAEC,MAAM,CAACkB;EAAU;IAAAX,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAC7D,OACIpC,OAAA,CAACX,IAAI;IAACoC,KAAK,EAAEC,MAAM,CAACmB,SAAU;IAAArB,QAAA,EAC1BxB,OAAA,CAACT,QAAQ;MACLuD,IAAI,EAAE3C,QAAS;MACf4C,YAAY,EAAGjC,IAAI,IAAKA,IAAI,CAACI,GAAI;MACjCL,UAAU,EAAEA,UAAW;MACvBmC,sBAAsB,EAAEL;IAAc;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEf,CAAC;AAED,MAAMV,MAAM,GAAGpC,UAAU,CAAC2D,MAAM,CAAC;EAC7BJ,SAAS,EAAE;IACPK,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,SAAS;IAC1BC,OAAO,EAAE;EACb,CAAC;EACDzB,aAAa,EAAE;IACX0B,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,eAAe;IAC/BH,OAAO,EAAE,EAAE;IACXD,eAAe,EAAE,MAAM;IACvBK,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE;EACjB,CAAC;EACDrB,aAAa,EAAE;IACXsB,UAAU,EAAE,EAAE;IACdT,IAAI,EAAE;EACV,CAAC;EACDZ,IAAI,EAAE;IACFsB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBF,UAAU,EAAE;EAChB,CAAC;EACDpB,MAAM,EAAE;IACJqB,QAAQ,EAAE,EAAE;IACZnB,KAAK,EAAE,MAAM;IACbkB,UAAU,EAAE;EAChB,CAAC;EACD3B,eAAe,EAAE;IACbyB,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE;EACjB,CAAC;EACDhB,IAAI,EAAE;IACFiB,UAAU,EAAE;EAChB,CAAC;EACDf,SAAS,EAAE;IACPkB,MAAM,EAAE;EACZ;AACJ,CAAC,CAAC;AAEF,eAAe7D,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}