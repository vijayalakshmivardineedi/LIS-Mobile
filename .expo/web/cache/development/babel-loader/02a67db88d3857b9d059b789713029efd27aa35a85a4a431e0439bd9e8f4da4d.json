{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axiosInstance from '../../../../Security/helpers/axios';\nexport const fetchStaffVisitors = createAsyncThunk('staffVisitors/fetchStaffVisitors', async societyId => {\n  try {\n    const response = await axiosInstance.get(`/getAllStaffRecords/${societyId}`);\n    return response.data.staffRecords;\n  } catch (error) {\n    throw Error('Failed to fetch visitors: ' + error.message);\n  }\n});\nconst staffVisitorsSlice = createSlice({\n  name: 'staffVisitors',\n  initialState: {\n    staffVisitors: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {\n    resetState: state => {\n      state.loading = false;\n      state.error = null;\n      state.success = false;\n      state.successMessage = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchStaffVisitors.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchStaffVisitors.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.staffVisitors = action.payload;\n    }).addCase(fetchStaffVisitors.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport const {\n  resetState\n} = staffVisitorsSlice.actions;\nexport default staffVisitorsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axiosInstance","fetchStaffVisitors","societyId","response","get","data","staffRecords","error","Error","message","staffVisitorsSlice","name","initialState","staffVisitors","status","reducers","resetState","state","loading","success","successMessage","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/src/panel/User/Redux/Slice/Security_Panel/StaffInandOutSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axiosInstance from '../../../../Security/helpers/axios';\r\n\r\nexport const fetchStaffVisitors = createAsyncThunk(\r\n    'staffVisitors/fetchStaffVisitors',\r\n    async (societyId) => {\r\n        try {\r\n            const response = await axiosInstance.get(`/getAllStaffRecords/${societyId}`);\r\n            return response.data.staffRecords;\r\n        } catch (error) {\r\n            throw Error('Failed to fetch visitors: ' + error.message);\r\n        }\r\n    }\r\n);\r\n\r\nconst staffVisitorsSlice = createSlice({\r\n    name: 'staffVisitors',\r\n    initialState: {\r\n        staffVisitors: [],\r\n        status: 'idle',\r\n        error: null,\r\n    },\r\n    reducers: {\r\n        resetState: (state) => {\r\n            state.loading = false;\r\n            state.error = null;\r\n            state.success = false;\r\n            state.successMessage = null;\r\n        },\r\n    },\r\n\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchStaffVisitors.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(fetchStaffVisitors.fulfilled, (state, action) => {\r\n                state.status = 'succeeded';\r\n                state.staffVisitors = action.payload;\r\n            })\r\n            .addCase(fetchStaffVisitors.rejected, (state, action) => {\r\n                state.status = 'failed';\r\n                state.error = action.error.message;\r\n            });\r\n    },\r\n});\r\n\r\nexport const { resetState } = staffVisitorsSlice.actions;\r\nexport default staffVisitorsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,aAAa,MAAM,oCAAoC;AAE9D,OAAO,MAAMC,kBAAkB,GAAGF,gBAAgB,CAC9C,kCAAkC,EAClC,MAAOG,SAAS,IAAK;EACjB,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMH,aAAa,CAACI,GAAG,CAAC,uBAAuBF,SAAS,EAAE,CAAC;IAC5E,OAAOC,QAAQ,CAACE,IAAI,CAACC,YAAY;EACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMC,KAAK,CAAC,4BAA4B,GAAGD,KAAK,CAACE,OAAO,CAAC;EAC7D;AACJ,CACJ,CAAC;AAED,MAAMC,kBAAkB,GAAGZ,WAAW,CAAC;EACnCa,IAAI,EAAE,eAAe;EACrBC,YAAY,EAAE;IACVC,aAAa,EAAE,EAAE;IACjBC,MAAM,EAAE,MAAM;IACdP,KAAK,EAAE;EACX,CAAC;EACDQ,QAAQ,EAAE;IACNC,UAAU,EAAGC,KAAK,IAAK;MACnBA,KAAK,CAACC,OAAO,GAAG,KAAK;MACrBD,KAAK,CAACV,KAAK,GAAG,IAAI;MAClBU,KAAK,CAACE,OAAO,GAAG,KAAK;MACrBF,KAAK,CAACG,cAAc,GAAG,IAAI;IAC/B;EACJ,CAAC;EAEDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACtB,kBAAkB,CAACuB,OAAO,EAAGP,KAAK,IAAK;MAC5CA,KAAK,CAACH,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDS,OAAO,CAACtB,kBAAkB,CAACwB,SAAS,EAAE,CAACR,KAAK,EAAES,MAAM,KAAK;MACtDT,KAAK,CAACH,MAAM,GAAG,WAAW;MAC1BG,KAAK,CAACJ,aAAa,GAAGa,MAAM,CAACC,OAAO;IACxC,CAAC,CAAC,CACDJ,OAAO,CAACtB,kBAAkB,CAAC2B,QAAQ,EAAE,CAACX,KAAK,EAAES,MAAM,KAAK;MACrDT,KAAK,CAACH,MAAM,GAAG,QAAQ;MACvBG,KAAK,CAACV,KAAK,GAAGmB,MAAM,CAACnB,KAAK,CAACE,OAAO;IACtC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEO;AAAW,CAAC,GAAGN,kBAAkB,CAACmB,OAAO;AACxD,eAAenB,kBAAkB,CAACoB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}