{"ast":null,"code":"import Platform from \"react-native-web/dist/exports/Platform\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nconst isString = str => Object.prototype.toString.call(str) === '[object String]';\nconst isBool = bool => Object.prototype.toString.call(bool) === '[object Boolean]';\nconst createError = (msg = '') => Promise.reject(new Error(msg));\nconst openLink = (url, skipCanOpen = false) => {\n  if (skipCanOpen) {\n    return Linking.openURL(url);\n  }\n  return Linking.canOpenURL(url).then(canOpen => {\n    if (!canOpen) {\n      return createError(`invalid URL provided: ${url}`);\n    } else {\n      return Linking.openURL(url);\n    }\n  });\n};\nconst call = (args = {}) => {\n  const settings = Object.assign({\n    skipCanOpen: false,\n    prompt: true\n  }, args);\n  if (!settings.number) {\n    return createError('no number provided');\n  }\n  if (!isString(settings.number)) {\n    return createError('number should be string');\n  }\n  if (!isBool(settings.prompt)) {\n    return createError('prompt should be boolean');\n  }\n  if (!isBool(settings.skipCanOpen)) {\n    return createError('skipCanOpen should be boolean');\n  }\n  const url = `${Platform.OS === 'ios' && settings.prompt ? 'telprompt:' : 'tel:'}${settings.number}`;\n  return openLink(url, settings.skipCanOpen);\n};\nexport default call;","map":{"version":3,"names":["isString","str","Object","prototype","toString","call","isBool","bool","createError","msg","Promise","reject","Error","openLink","url","skipCanOpen","Linking","openURL","canOpenURL","then","canOpen","args","settings","assign","prompt","number","Platform","OS"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/node_modules/react-native-phone-call/index.js"],"sourcesContent":["import { Platform, Linking } from 'react-native'\n\nconst isString = (str) => Object.prototype.toString.call(str) === '[object String]'\nconst isBool = (bool) => Object.prototype.toString.call(bool) === '[object Boolean]'\n\nconst createError = (msg = '') => Promise.reject(new Error(msg))\n\nconst openLink = (url, skipCanOpen = false) => {\n  if (skipCanOpen) {\n    return Linking.openURL(url)\n  }\n\n  return Linking.canOpenURL(url).then(canOpen => {\n    if (!canOpen) {\n      return createError(`invalid URL provided: ${url}`)\n    } else {\n      return Linking.openURL(url)\n    }\n  })\n}\n\nconst call = (args = {}) => {\n  const settings = Object.assign({\n    skipCanOpen: false,\n    prompt: true\n  }, args)\n\n  if (!settings.number) { return createError('no number provided') }\n  if (!isString(settings.number)) { return createError('number should be string') }\n  if (!isBool(settings.prompt)) { return createError('prompt should be boolean') }\n  if (!isBool(settings.skipCanOpen)) { return createError('skipCanOpen should be boolean') }\n\n  const url = `${Platform.OS === 'ios' && settings.prompt ? 'telprompt:' : 'tel:'}${settings.number}`\n\n  return openLink(url, settings.skipCanOpen)\n}\n\nexport default call\n"],"mappings":";;AAEA,MAAMA,QAAQ,GAAIC,GAAG,IAAKC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACJ,GAAG,CAAC,KAAK,iBAAiB;AACnF,MAAMK,MAAM,GAAIC,IAAI,IAAKL,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACE,IAAI,CAAC,KAAK,kBAAkB;AAEpF,MAAMC,WAAW,GAAGA,CAACC,GAAG,GAAG,EAAE,KAAKC,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAACH,GAAG,CAAC,CAAC;AAEhE,MAAMI,QAAQ,GAAGA,CAACC,GAAG,EAAEC,WAAW,GAAG,KAAK,KAAK;EAC7C,IAAIA,WAAW,EAAE;IACf,OAAOC,OAAO,CAACC,OAAO,CAACH,GAAG,CAAC;EAC7B;EAEA,OAAOE,OAAO,CAACE,UAAU,CAACJ,GAAG,CAAC,CAACK,IAAI,CAACC,OAAO,IAAI;IAC7C,IAAI,CAACA,OAAO,EAAE;MACZ,OAAOZ,WAAW,CAAC,yBAAyBM,GAAG,EAAE,CAAC;IACpD,CAAC,MAAM;MACL,OAAOE,OAAO,CAACC,OAAO,CAACH,GAAG,CAAC;IAC7B;EACF,CAAC,CAAC;AACJ,CAAC;AAED,MAAMT,IAAI,GAAGA,CAACgB,IAAI,GAAG,CAAC,CAAC,KAAK;EAC1B,MAAMC,QAAQ,GAAGpB,MAAM,CAACqB,MAAM,CAAC;IAC7BR,WAAW,EAAE,KAAK;IAClBS,MAAM,EAAE;EACV,CAAC,EAAEH,IAAI,CAAC;EAER,IAAI,CAACC,QAAQ,CAACG,MAAM,EAAE;IAAE,OAAOjB,WAAW,CAAC,oBAAoB,CAAC;EAAC;EACjE,IAAI,CAACR,QAAQ,CAACsB,QAAQ,CAACG,MAAM,CAAC,EAAE;IAAE,OAAOjB,WAAW,CAAC,yBAAyB,CAAC;EAAC;EAChF,IAAI,CAACF,MAAM,CAACgB,QAAQ,CAACE,MAAM,CAAC,EAAE;IAAE,OAAOhB,WAAW,CAAC,0BAA0B,CAAC;EAAC;EAC/E,IAAI,CAACF,MAAM,CAACgB,QAAQ,CAACP,WAAW,CAAC,EAAE;IAAE,OAAOP,WAAW,CAAC,+BAA+B,CAAC;EAAC;EAEzF,MAAMM,GAAG,GAAG,GAAGY,QAAQ,CAACC,EAAE,KAAK,KAAK,IAAIL,QAAQ,CAACE,MAAM,GAAG,YAAY,GAAG,MAAM,GAAGF,QAAQ,CAACG,MAAM,EAAE;EAEnG,OAAOZ,QAAQ,CAACC,GAAG,EAAEQ,QAAQ,CAACP,WAAW,CAAC;AAC5C,CAAC;AAED,eAAeV,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}