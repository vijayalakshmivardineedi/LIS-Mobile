{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const verifyOTP = createAsyncThunk('otpVerification/verifyOTP', async ({\n  email,\n  otp\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(`http://192.168.29.226:2000/api/user/VerifyUserProfile`, {\n      email,\n      otp\n    });\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst initialState = {\n  loading: false,\n  error: null,\n  verificationStatus: false,\n  data: []\n};\nconst otpSlice = createSlice({\n  name: 'otp',\n  initialState,\n  reducers: {\n    verifyOTPSuccess(state) {\n      state.loading = false;\n      state.error = null;\n      state.verificationStatus = true;\n    },\n    verifyOTPFailure(state, action) {\n      state.loading = false;\n      state.error = action.payload;\n      state.verificationStatus = false;\n    },\n    resetVerification(state) {\n      state.loading = false;\n      state.error = null;\n      state.verificationStatus = false;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(verifyOTP.pending, state => {\n      console.log('Verify OTP pending...');\n      state.loading = true;\n      state.error = null;\n    }).addCase(verifyOTP.fulfilled, (state, action) => {\n      console.log('slice  code Verify OTP fulfilled:', action.payload);\n      state.loading = false;\n      state.data = action.payload;\n      state.error = null;\n      state.verificationStatus = true;\n    }).addCase(verifyOTP.rejected, (state, action) => {\n      console.log('Verify OTP rejected:', action.payload);\n      state.loading = false;\n      state.error = action.error.message;\n    });\n  }\n});\nexport const {\n  verifyOTPSuccess,\n  verifyOTPFailure,\n  resetVerification\n} = otpSlice.actions;\nexport const selectLoadingStatus = state => state.otp.loading;\nexport const selectError = state => state.otp.error;\nexport const selectVerificationStatus = state => state.otp.verificationStatus;\nexport default otpSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","verifyOTP","email","otp","rejectWithValue","response","post","console","log","data","error","initialState","loading","verificationStatus","otpSlice","name","reducers","verifyOTPSuccess","state","verifyOTPFailure","action","payload","resetVerification","extraReducers","builder","addCase","pending","fulfilled","rejected","message","actions","selectLoadingStatus","selectError","selectVerificationStatus","reducer"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/src/panel/User/Redux/Slice/AuthSlice/Signup/otpSlice.js"],"sourcesContent":["// otpSlice.js\r\n\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nexport const verifyOTP = createAsyncThunk(\r\n    'otpVerification/verifyOTP',\r\n    async ({ email, otp }, { rejectWithValue }) => {\r\n        try {\r\n            const response = await axios.post(`http://192.168.29.226:2000/api/user/VerifyUserProfile`, { email, otp });\r\n            console.log(response.data)\r\n            return response.data;\r\n\r\n        } catch (error) {\r\n            return rejectWithValue(error.response.data);\r\n        }\r\n    }\r\n);\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: null,\r\n    verificationStatus: false,\r\n    data: []\r\n};\r\n\r\nconst otpSlice = createSlice({\r\n    name: 'otp',\r\n    initialState,\r\n    reducers: {\r\n        verifyOTPSuccess(state) {\r\n            state.loading = false;\r\n            state.error = null;\r\n            state.verificationStatus = true;\r\n        },\r\n        verifyOTPFailure(state, action) {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n            state.verificationStatus = false;\r\n        },\r\n        resetVerification(state) {\r\n            state.loading = false;\r\n            state.error = null;\r\n            state.verificationStatus = false;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(verifyOTP.pending, (state) => {\r\n                console.log('Verify OTP pending...');\r\n                state.loading = true;\r\n                state.error = null;\r\n            })\r\n            .addCase(verifyOTP.fulfilled, (state, action) => {\r\n                console.log('slice  code Verify OTP fulfilled:', action.payload);\r\n                state.loading = false;\r\n                state.data = action.payload;\r\n                state.error = null;\r\n                state.verificationStatus = true;\r\n            })\r\n            .addCase(verifyOTP.rejected, (state, action) => {\r\n                console.log('Verify OTP rejected:', action.payload);\r\n                state.loading = false;\r\n                state.error = action.error.message;\r\n            });\r\n    },\r\n});\r\n\r\nexport const { verifyOTPSuccess, verifyOTPFailure, resetVerification } = otpSlice.actions;\r\n\r\nexport const selectLoadingStatus = (state) => state.otp.loading;\r\nexport const selectError = (state) => state.otp.error;\r\nexport const selectVerificationStatus = (state) => state.otp.verificationStatus;\r\n\r\nexport default otpSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}