{"ast":null,"code":"import { CALLBACK_TYPE } from '../gesture';\nimport { Reanimated } from '../reanimatedWrapper';\nimport { GestureStateManager } from '../gestureStateManager';\nimport { State } from '../../../State';\nimport { TouchEventType } from '../../../TouchEventType';\nimport { tagMessage } from '../../../utils';\nconst _worklet_14910448568644_init_data = {\n  code: \"function getHandler_useAnimatedGestureJs1(type,gesture){const{CALLBACK_TYPE}=this.__closure;switch(type){case CALLBACK_TYPE.BEGAN:return gesture.onBegin;case CALLBACK_TYPE.START:return gesture.onStart;case CALLBACK_TYPE.UPDATE:return gesture.onUpdate;case CALLBACK_TYPE.CHANGE:return gesture.onChange;case CALLBACK_TYPE.END:return gesture.onEnd;case CALLBACK_TYPE.FINALIZE:return gesture.onFinalize;case CALLBACK_TYPE.TOUCHES_DOWN:return gesture.onTouchesDown;case CALLBACK_TYPE.TOUCHES_MOVE:return gesture.onTouchesMove;case CALLBACK_TYPE.TOUCHES_UP:return gesture.onTouchesUp;case CALLBACK_TYPE.TOUCHES_CANCELLED:return gesture.onTouchesCancelled;}}\",\n  location: \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\handlers\\\\gestures\\\\GestureDetector\\\\useAnimatedGesture.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"getHandler_useAnimatedGestureJs1\\\",\\\"type\\\",\\\"gesture\\\",\\\"CALLBACK_TYPE\\\",\\\"__closure\\\",\\\"BEGAN\\\",\\\"onBegin\\\",\\\"START\\\",\\\"onStart\\\",\\\"UPDATE\\\",\\\"onUpdate\\\",\\\"CHANGE\\\",\\\"onChange\\\",\\\"END\\\",\\\"onEnd\\\",\\\"FINALIZE\\\",\\\"onFinalize\\\",\\\"TOUCHES_DOWN\\\",\\\"onTouchesDown\\\",\\\"TOUCHES_MOVE\\\",\\\"onTouchesMove\\\",\\\"TOUCHES_UP\\\",\\\"onTouchesUp\\\",\\\"TOUCHES_CANCELLED\\\",\\\"onTouchesCancelled\\\"],\\\"sources\\\":[\\\"C:/Users/user/OneDrive/Documents/rn/l/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/GestureDetector/useAnimatedGesture.js\\\"],\\\"mappings\\\":\\\"AAOA,SAAAA,gCAAmCA,CAAAC,IAAA,CAAAC,OAAA,QAAAC,aAAA,OAAAC,SAAA,CAGjC,OAAQH,IAAI,EACV,IAAK,CAAAE,aAAa,CAACE,KAAK,CACtB,MAAO,CAAAH,OAAO,CAACI,OAAO,CAExB,IAAK,CAAAH,aAAa,CAACI,KAAK,CACtB,MAAO,CAAAL,OAAO,CAACM,OAAO,CAExB,IAAK,CAAAL,aAAa,CAACM,MAAM,CACvB,MAAO,CAAAP,OAAO,CAACQ,QAAQ,CAEzB,IAAK,CAAAP,aAAa,CAACQ,MAAM,CACvB,MAAO,CAAAT,OAAO,CAACU,QAAQ,CAEzB,IAAK,CAAAT,aAAa,CAACU,GAAG,CACpB,MAAO,CAAAX,OAAO,CAACY,KAAK,CAEtB,IAAK,CAAAX,aAAa,CAACY,QAAQ,CACzB,MAAO,CAAAb,OAAO,CAACc,UAAU,CAE3B,IAAK,CAAAb,aAAa,CAACc,YAAY,CAC7B,MAAO,CAAAf,OAAO,CAACgB,aAAa,CAE9B,IAAK,CAAAf,aAAa,CAACgB,YAAY,CAC7B,MAAO,CAAAjB,OAAO,CAACkB,aAAa,CAE9B,IAAK,CAAAjB,aAAa,CAACkB,UAAU,CAC3B,MAAO,CAAAnB,OAAO,CAACoB,WAAW,CAE5B,IAAK,CAAAnB,aAAa,CAACoB,iBAAiB,CAClC,MAAO,CAAArB,OAAO,CAACsB,kBAAkB,CACrC,CACF\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.15.1\"\n};\nconst getHandler = function () {\n  const _e = [new global.Error(), -2, -27];\n  const getHandler = function (type, gesture) {\n    switch (type) {\n      case CALLBACK_TYPE.BEGAN:\n        return gesture.onBegin;\n      case CALLBACK_TYPE.START:\n        return gesture.onStart;\n      case CALLBACK_TYPE.UPDATE:\n        return gesture.onUpdate;\n      case CALLBACK_TYPE.CHANGE:\n        return gesture.onChange;\n      case CALLBACK_TYPE.END:\n        return gesture.onEnd;\n      case CALLBACK_TYPE.FINALIZE:\n        return gesture.onFinalize;\n      case CALLBACK_TYPE.TOUCHES_DOWN:\n        return gesture.onTouchesDown;\n      case CALLBACK_TYPE.TOUCHES_MOVE:\n        return gesture.onTouchesMove;\n      case CALLBACK_TYPE.TOUCHES_UP:\n        return gesture.onTouchesUp;\n      case CALLBACK_TYPE.TOUCHES_CANCELLED:\n        return gesture.onTouchesCancelled;\n    }\n  };\n  getHandler.__closure = {\n    CALLBACK_TYPE\n  };\n  getHandler.__workletHash = 14910448568644;\n  getHandler.__initData = _worklet_14910448568644_init_data;\n  getHandler.__stackDetails = _e;\n  return getHandler;\n}();\nconst _worklet_16609692393031_init_data = {\n  code: \"function touchEventTypeToCallbackType_useAnimatedGestureJs2(eventType){const{TouchEventType,CALLBACK_TYPE}=this.__closure;switch(eventType){case TouchEventType.TOUCHES_DOWN:return CALLBACK_TYPE.TOUCHES_DOWN;case TouchEventType.TOUCHES_MOVE:return CALLBACK_TYPE.TOUCHES_MOVE;case TouchEventType.TOUCHES_UP:return CALLBACK_TYPE.TOUCHES_UP;case TouchEventType.TOUCHES_CANCELLED:return CALLBACK_TYPE.TOUCHES_CANCELLED;}return CALLBACK_TYPE.UNDEFINED;}\",\n  location: \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\handlers\\\\gestures\\\\GestureDetector\\\\useAnimatedGesture.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"touchEventTypeToCallbackType_useAnimatedGestureJs2\\\",\\\"eventType\\\",\\\"TouchEventType\\\",\\\"CALLBACK_TYPE\\\",\\\"__closure\\\",\\\"TOUCHES_DOWN\\\",\\\"TOUCHES_MOVE\\\",\\\"TOUCHES_UP\\\",\\\"TOUCHES_CANCELLED\\\",\\\"UNDEFINED\\\"],\\\"sources\\\":[\\\"C:/Users/user/OneDrive/Documents/rn/l/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/GestureDetector/useAnimatedGesture.js\\\"],\\\"mappings\\\":\\\"AA2CA,SAAAA,kDAAiDA,CAAAC,SAAA,QAAAC,cAAA,CAAAC,aAAA,OAAAC,SAAA,CAG/C,OAAQH,SAAS,EACf,IAAK,CAAAC,cAAc,CAACG,YAAY,CAC9B,MAAO,CAAAF,aAAa,CAACE,YAAY,CAEnC,IAAK,CAAAH,cAAc,CAACI,YAAY,CAC9B,MAAO,CAAAH,aAAa,CAACG,YAAY,CAEnC,IAAK,CAAAJ,cAAc,CAACK,UAAU,CAC5B,MAAO,CAAAJ,aAAa,CAACI,UAAU,CAEjC,IAAK,CAAAL,cAAc,CAACM,iBAAiB,CACnC,MAAO,CAAAL,aAAa,CAACK,iBAAiB,CAC1C,CAEA,MAAO,CAAAL,aAAa,CAACM,SAAS,CAChC\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.15.1\"\n};\nconst touchEventTypeToCallbackType = function () {\n  const _e = [new global.Error(), -3, -27];\n  const touchEventTypeToCallbackType = function (eventType) {\n    switch (eventType) {\n      case TouchEventType.TOUCHES_DOWN:\n        return CALLBACK_TYPE.TOUCHES_DOWN;\n      case TouchEventType.TOUCHES_MOVE:\n        return CALLBACK_TYPE.TOUCHES_MOVE;\n      case TouchEventType.TOUCHES_UP:\n        return CALLBACK_TYPE.TOUCHES_UP;\n      case TouchEventType.TOUCHES_CANCELLED:\n        return CALLBACK_TYPE.TOUCHES_CANCELLED;\n    }\n    return CALLBACK_TYPE.UNDEFINED;\n  };\n  touchEventTypeToCallbackType.__closure = {\n    TouchEventType,\n    CALLBACK_TYPE\n  };\n  touchEventTypeToCallbackType.__workletHash = 16609692393031;\n  touchEventTypeToCallbackType.__initData = _worklet_16609692393031_init_data;\n  touchEventTypeToCallbackType.__stackDetails = _e;\n  return touchEventTypeToCallbackType;\n}();\nconst _worklet_7414508538409_init_data = {\n  code: \"function runWorklet_useAnimatedGestureJs3(type,gesture,event,...args){const{getHandler,tagMessage}=this.__closure;const handler=getHandler(type,gesture);if(gesture.isWorklet[type]){handler===null||handler===void 0?void 0:handler(event,...args);}else if(handler){console.warn(tagMessage('Animated gesture callback must be a worklet'));}}\",\n  location: \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\handlers\\\\gestures\\\\GestureDetector\\\\useAnimatedGesture.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"runWorklet_useAnimatedGestureJs3\\\",\\\"type\\\",\\\"gesture\\\",\\\"event\\\",\\\"args\\\",\\\"getHandler\\\",\\\"tagMessage\\\",\\\"__closure\\\",\\\"handler\\\",\\\"isWorklet\\\",\\\"console\\\",\\\"warn\\\"],\\\"sources\\\":[\\\"C:/Users/user/OneDrive/Documents/rn/l/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/GestureDetector/useAnimatedGesture.js\\\"],\\\"mappings\\\":\\\"AA+DA,SAAAA,gCAAwCA,CAAAC,IAAK,CAAAC,OAAM,CAAAC,KAAA,IAAAC,IAAA,QAAAC,UAAA,CAAAC,UAAA,OAAAC,SAAA,CAGjD,KAAM,CAAAC,OAAO,CAAGH,UAAU,CAACJ,IAAI,CAAEC,OAAO,CAAC,CAEzC,GAAIA,OAAO,CAACO,SAAS,CAACR,IAAI,CAAC,CAAE,CAG3BO,OAAO,GAAK,IAAI,EAAIA,OAAO,GAAK,IAAK,EAAC,CAAG,IAAK,EAAC,CAAGA,OAAO,CAACL,KAAK,CAAE,GAAGC,IAAI,CAAC,CAC3E,CAAC,IAAM,IAAII,OAAO,CAAE,CAClBE,OAAO,CAACC,IAAI,CAACL,UAAU,CAAC,6CAA6C,CAAC,CAAC,CACzE,CACF\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.15.1\"\n};\nconst runWorklet = function () {\n  const _e = [new global.Error(), -3, -27];\n  const runWorklet = function (type, gesture, event, ...args) {\n    const handler = getHandler(type, gesture);\n    if (gesture.isWorklet[type]) {\n      handler === null || handler === void 0 ? void 0 : handler(event, ...args);\n    } else if (handler) {\n      console.warn(tagMessage('Animated gesture callback must be a worklet'));\n    }\n  };\n  runWorklet.__closure = {\n    getHandler,\n    tagMessage\n  };\n  runWorklet.__workletHash = 7414508538409;\n  runWorklet.__initData = _worklet_7414508538409_init_data;\n  runWorklet.__stackDetails = _e;\n  return runWorklet;\n}();\nconst _worklet_12439180546276_init_data = {\n  code: \"function isStateChangeEvent_useAnimatedGestureJs4(event){return event.oldState!=null;}\",\n  location: \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\handlers\\\\gestures\\\\GestureDetector\\\\useAnimatedGesture.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"isStateChangeEvent_useAnimatedGestureJs4\\\",\\\"event\\\",\\\"oldState\\\"],\\\"sources\\\":[\\\"C:/Users/user/OneDrive/Documents/rn/l/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/GestureDetector/useAnimatedGesture.js\\\"],\\\"mappings\\\":\\\"AA6EA,SAAAA,wCAAmCA,CAAAC,KAAA,EAGjC,MAAO,CAAAA,KAAK,CAACC,QAAQ,EAAI,IAAI,CAC/B\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.15.1\"\n};\nconst isStateChangeEvent = function () {\n  const _e = [new global.Error(), 1, -27];\n  const isStateChangeEvent = function (event) {\n    return event.oldState != null;\n  };\n  isStateChangeEvent.__closure = {};\n  isStateChangeEvent.__workletHash = 12439180546276;\n  isStateChangeEvent.__initData = _worklet_12439180546276_init_data;\n  isStateChangeEvent.__stackDetails = _e;\n  return isStateChangeEvent;\n}();\nconst _worklet_2038954310453_init_data = {\n  code: \"function isTouchEvent_useAnimatedGestureJs5(event){return event.eventType!=null;}\",\n  location: \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\handlers\\\\gestures\\\\GestureDetector\\\\useAnimatedGesture.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"isTouchEvent_useAnimatedGestureJs5\\\",\\\"event\\\",\\\"eventType\\\"],\\\"sources\\\":[\\\"C:/Users/user/OneDrive/Documents/rn/l/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/GestureDetector/useAnimatedGesture.js\\\"],\\\"mappings\\\":\\\"AAmFA,SAAAA,kCAA6BA,CAAAC,KAAA,EAG3B,MAAO,CAAAA,KAAK,CAACC,SAAS,EAAI,IAAI,CAChC\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.15.1\"\n};\nconst isTouchEvent = function () {\n  const _e = [new global.Error(), 1, -27];\n  const isTouchEvent = function (event) {\n    return event.eventType != null;\n  };\n  isTouchEvent.__closure = {};\n  isTouchEvent.__workletHash = 2038954310453;\n  isTouchEvent.__initData = _worklet_2038954310453_init_data;\n  isTouchEvent.__stackDetails = _e;\n  return isTouchEvent;\n}();\nconst _worklet_2760912163768_init_data = {\n  code: \"function useAnimatedGestureJs6(event){const{sharedHandlersCallbacks,isStateChangeEvent,State,runWorklet,CALLBACK_TYPE,lastUpdateEvent,isTouchEvent,stateControllers,GestureStateManager,TouchEventType,touchEventTypeToCallbackType}=this.__closure;const currentCallback=sharedHandlersCallbacks.value;if(!currentCallback){return;}for(let i=0;i<currentCallback.length;i++){const gesture=currentCallback[i];if(event.handlerTag!==gesture.handlerTag){continue;}if(isStateChangeEvent(event)){if(event.oldState===State.UNDETERMINED&&event.state===State.BEGAN){runWorklet(CALLBACK_TYPE.BEGAN,gesture,event);}else if((event.oldState===State.BEGAN||event.oldState===State.UNDETERMINED)&&event.state===State.ACTIVE){runWorklet(CALLBACK_TYPE.START,gesture,event);lastUpdateEvent.value[gesture.handlerTag]=undefined;}else if(event.oldState!==event.state&&event.state===State.END){if(event.oldState===State.ACTIVE){runWorklet(CALLBACK_TYPE.END,gesture,event,true);}runWorklet(CALLBACK_TYPE.FINALIZE,gesture,event,true);}else if((event.state===State.FAILED||event.state===State.CANCELLED)&&event.state!==event.oldState){if(event.oldState===State.ACTIVE){runWorklet(CALLBACK_TYPE.END,gesture,event,false);}runWorklet(CALLBACK_TYPE.FINALIZE,gesture,event,false);}}else if(isTouchEvent(event)){if(!stateControllers[i]){stateControllers[i]=GestureStateManager.create(event.handlerTag);}if(event.eventType!==TouchEventType.UNDETERMINED){runWorklet(touchEventTypeToCallbackType(event.eventType),gesture,event,stateControllers[i]);}}else{runWorklet(CALLBACK_TYPE.UPDATE,gesture,event);if(gesture.onChange&&gesture.changeEventCalculator){var _gesture$changeEventC;runWorklet(CALLBACK_TYPE.CHANGE,gesture,(_gesture$changeEventC=gesture.changeEventCalculator)===null||_gesture$changeEventC===void 0?void 0:_gesture$changeEventC.call(gesture,event,lastUpdateEvent.value[gesture.handlerTag]));lastUpdateEvent.value[gesture.handlerTag]=event;}}}}\",\n  location: \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\handlers\\\\gestures\\\\GestureDetector\\\\useAnimatedGesture.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"useAnimatedGestureJs6\\\",\\\"event\\\",\\\"sharedHandlersCallbacks\\\",\\\"isStateChangeEvent\\\",\\\"State\\\",\\\"runWorklet\\\",\\\"CALLBACK_TYPE\\\",\\\"lastUpdateEvent\\\",\\\"isTouchEvent\\\",\\\"stateControllers\\\",\\\"GestureStateManager\\\",\\\"TouchEventType\\\",\\\"touchEventTypeToCallbackType\\\",\\\"__closure\\\",\\\"currentCallback\\\",\\\"value\\\",\\\"i\\\",\\\"length\\\",\\\"gesture\\\",\\\"handlerTag\\\",\\\"oldState\\\",\\\"UNDETERMINED\\\",\\\"state\\\",\\\"BEGAN\\\",\\\"ACTIVE\\\",\\\"START\\\",\\\"undefined\\\",\\\"END\\\",\\\"FINALIZE\\\",\\\"FAILED\\\",\\\"CANCELLED\\\",\\\"create\\\",\\\"eventType\\\",\\\"UPDATE\\\",\\\"onChange\\\",\\\"changeEventCalculator\\\",\\\"_gesture$changeEventC\\\",\\\"CHANGE\\\",\\\"call\\\"],\\\"sources\\\":[\\\"C:/Users/user/OneDrive/Documents/rn/l/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/GestureDetector/useAnimatedGesture.js\\\"],\\\"mappings\\\":\\\"AAuGmB,SAAAA,qBAASA,CAAAC,KAAA,QAAAC,uBAAA,CAAAC,kBAAA,CAAAC,KAAA,CAAAC,UAAA,CAAAC,aAAA,CAAAC,eAAA,CAAAC,YAAA,CAAAC,gBAAA,CAAAC,mBAAA,CAAAC,cAAA,CAAAC,4BAAA,OAAAC,SAAA,CAGxB,KAAM,CAAAC,eAAe,CAAGZ,uBAAuB,CAACa,KAAK,CAErD,GAAI,CAACD,eAAe,CAAE,CACpB,OACF,CAEA,IAAK,GAAI,CAAAE,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGF,eAAe,CAACG,MAAM,CAAED,CAAC,EAAE,CAAE,CAC/C,KAAM,CAAAE,OAAO,CAAGJ,eAAe,CAACE,CAAC,CAAC,CAElC,GAAIf,KAAK,CAACkB,UAAU,GAAKD,OAAO,CAACC,UAAU,CAAE,CAC3C,SACF,CAEA,GAAIhB,kBAAkB,CAACF,KAAK,CAAC,CAAE,CAC7B,GAAIA,KAAK,CAACmB,QAAQ,GAAKhB,KAAK,CAACiB,YAAY,EAAIpB,KAAK,CAACqB,KAAK,GAAKlB,KAAK,CAACmB,KAAK,CAAE,CACxElB,UAAU,CAACC,aAAa,CAACiB,KAAK,CAAEL,OAAO,CAAEjB,KAAK,CAAC,CACjD,CAAC,IAAM,IAAI,CAACA,KAAK,CAACmB,QAAQ,GAAKhB,KAAK,CAACmB,KAAK,EAAItB,KAAK,CAACmB,QAAQ,GAAKhB,KAAK,CAACiB,YAAY,GAAKpB,KAAK,CAACqB,KAAK,GAAKlB,KAAK,CAACoB,MAAM,CAAE,CACpHnB,UAAU,CAACC,aAAa,CAACmB,KAAK,CAAEP,OAAO,CAAEjB,KAAK,CAAC,CAC/CM,eAAe,CAACQ,KAAK,CAACG,OAAO,CAACC,UAAU,CAAC,CAAGO,SAAS,CACvD,CAAC,IAAM,IAAIzB,KAAK,CAACmB,QAAQ,GAAKnB,KAAK,CAACqB,KAAK,EAAIrB,KAAK,CAACqB,KAAK,GAAKlB,KAAK,CAACuB,GAAG,CAAE,CACtE,GAAI1B,KAAK,CAACmB,QAAQ,GAAKhB,KAAK,CAACoB,MAAM,CAAE,CACnCnB,UAAU,CAACC,aAAa,CAACqB,GAAG,CAAET,OAAO,CAAEjB,KAAK,CAAE,IAAI,CAAC,CACrD,CAEAI,UAAU,CAACC,aAAa,CAACsB,QAAQ,CAAEV,OAAO,CAAEjB,KAAK,CAAE,IAAI,CAAC,CAC1D,CAAC,IAAM,IAAI,CAACA,KAAK,CAACqB,KAAK,GAAKlB,KAAK,CAACyB,MAAM,EAAI5B,KAAK,CAACqB,KAAK,GAAKlB,KAAK,CAAC0B,SAAS,GAAK7B,KAAK,CAACqB,KAAK,GAAKrB,KAAK,CAACmB,QAAQ,CAAE,CAC9G,GAAInB,KAAK,CAACmB,QAAQ,GAAKhB,KAAK,CAACoB,MAAM,CAAE,CACnCnB,UAAU,CAACC,aAAa,CAACqB,GAAG,CAAET,OAAO,CAAEjB,KAAK,CAAE,KAAK,CAAC,CACtD,CAEAI,UAAU,CAACC,aAAa,CAACsB,QAAQ,CAAEV,OAAO,CAAEjB,KAAK,CAAE,KAAK,CAAC,CAC3D,CACF,CAAC,IAAM,IAAIO,YAAY,CAACP,KAAK,CAAC,CAAE,CAC9B,GAAI,CAACQ,gBAAgB,CAACO,CAAC,CAAC,CAAE,CACxBP,gBAAgB,CAACO,CAAC,CAAC,CAAGN,mBAAmB,CAACqB,MAAM,CAAC9B,KAAK,CAACkB,UAAU,CAAC,CACpE,CAEA,GAAIlB,KAAK,CAAC+B,SAAS,GAAKrB,cAAc,CAACU,YAAY,CAAE,CACnDhB,UAAU,CAACO,4BAA4B,CAACX,KAAK,CAAC+B,SAAS,CAAC,CAAEd,OAAO,CAAEjB,KAAK,CAAEQ,gBAAgB,CAACO,CAAC,CAAC,CAAC,CAChG,CACF,CAAC,IAAM,CACLX,UAAU,CAACC,aAAa,CAAC2B,MAAM,CAAEf,OAAO,CAAEjB,KAAK,CAAC,CAEhD,GAAIiB,OAAO,CAACgB,QAAQ,EAAIhB,OAAO,CAACiB,qBAAqB,CAAE,CACrD,GAAI,CAAAC,qBAAqB,CAEzB/B,UAAU,CAACC,aAAa,CAAC+B,MAAM,CAAEnB,OAAO,CAAE,CAACkB,qBAAqB,CAAGlB,OAAO,CAACiB,qBAAqB,IAAM,IAAI,EAAIC,qBAAqB,GAAK,IAAK,EAAC,CAAG,IAAK,EAAC,CAAGA,qBAAqB,CAACE,IAAI,CAACpB,OAAO,CAAEjB,KAAK,CAAEM,eAAe,CAACQ,KAAK,CAACG,OAAO,CAACC,UAAU,CAAC,CAAC,CAAC,CAChPZ,eAAe,CAACQ,KAAK,CAACG,OAAO,CAACC,UAAU,CAAC,CAAGlB,KAAK,CACnD,CACF,CACF,CACF\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.15.1\"\n};\nexport function useAnimatedGesture(preparedGesture, needsRebuild) {\n  if (!Reanimated) {\n    return;\n  }\n  const sharedHandlersCallbacks = Reanimated.useSharedValue(null);\n  const lastUpdateEvent = Reanimated.useSharedValue([]);\n  const stateControllers = [];\n  const callback = function () {\n    const _e = [new global.Error(), -12, -27];\n    const useAnimatedGestureJs6 = function (event) {\n      const currentCallback = sharedHandlersCallbacks.value;\n      if (!currentCallback) {\n        return;\n      }\n      for (let i = 0; i < currentCallback.length; i++) {\n        const gesture = currentCallback[i];\n        if (event.handlerTag !== gesture.handlerTag) {\n          continue;\n        }\n        if (isStateChangeEvent(event)) {\n          if (event.oldState === State.UNDETERMINED && event.state === State.BEGAN) {\n            runWorklet(CALLBACK_TYPE.BEGAN, gesture, event);\n          } else if ((event.oldState === State.BEGAN || event.oldState === State.UNDETERMINED) && event.state === State.ACTIVE) {\n            runWorklet(CALLBACK_TYPE.START, gesture, event);\n            lastUpdateEvent.value[gesture.handlerTag] = undefined;\n          } else if (event.oldState !== event.state && event.state === State.END) {\n            if (event.oldState === State.ACTIVE) {\n              runWorklet(CALLBACK_TYPE.END, gesture, event, true);\n            }\n            runWorklet(CALLBACK_TYPE.FINALIZE, gesture, event, true);\n          } else if ((event.state === State.FAILED || event.state === State.CANCELLED) && event.state !== event.oldState) {\n            if (event.oldState === State.ACTIVE) {\n              runWorklet(CALLBACK_TYPE.END, gesture, event, false);\n            }\n            runWorklet(CALLBACK_TYPE.FINALIZE, gesture, event, false);\n          }\n        } else if (isTouchEvent(event)) {\n          if (!stateControllers[i]) {\n            stateControllers[i] = GestureStateManager.create(event.handlerTag);\n          }\n          if (event.eventType !== TouchEventType.UNDETERMINED) {\n            runWorklet(touchEventTypeToCallbackType(event.eventType), gesture, event, stateControllers[i]);\n          }\n        } else {\n          runWorklet(CALLBACK_TYPE.UPDATE, gesture, event);\n          if (gesture.onChange && gesture.changeEventCalculator) {\n            var _gesture$changeEventC;\n            runWorklet(CALLBACK_TYPE.CHANGE, gesture, (_gesture$changeEventC = gesture.changeEventCalculator) === null || _gesture$changeEventC === void 0 ? void 0 : _gesture$changeEventC.call(gesture, event, lastUpdateEvent.value[gesture.handlerTag]));\n            lastUpdateEvent.value[gesture.handlerTag] = event;\n          }\n        }\n      }\n    };\n    useAnimatedGestureJs6.__closure = {\n      sharedHandlersCallbacks,\n      isStateChangeEvent,\n      State,\n      runWorklet,\n      CALLBACK_TYPE,\n      lastUpdateEvent,\n      isTouchEvent,\n      stateControllers,\n      GestureStateManager,\n      TouchEventType,\n      touchEventTypeToCallbackType\n    };\n    useAnimatedGestureJs6.__workletHash = 2760912163768;\n    useAnimatedGestureJs6.__initData = _worklet_2760912163768_init_data;\n    useAnimatedGestureJs6.__stackDetails = _e;\n    return useAnimatedGestureJs6;\n  }();\n  const event = Reanimated.useEvent(callback, ['onGestureHandlerStateChange', 'onGestureHandlerEvent'], needsRebuild);\n  preparedGesture.animatedEventHandler = event;\n  preparedGesture.animatedHandlers = sharedHandlersCallbacks;\n}","map":{"version":3,"names":["CALLBACK_TYPE","Reanimated","GestureStateManager","State","TouchEventType","tagMessage","_worklet_14910448568644_init_data","code","location","sourceMap","version","getHandler","_e","global","Error","type","gesture","BEGAN","onBegin","START","onStart","UPDATE","onUpdate","CHANGE","onChange","END","onEnd","FINALIZE","onFinalize","TOUCHES_DOWN","onTouchesDown","TOUCHES_MOVE","onTouchesMove","TOUCHES_UP","onTouchesUp","TOUCHES_CANCELLED","onTouchesCancelled","__closure","__workletHash","__initData","__stackDetails","_worklet_16609692393031_init_data","touchEventTypeToCallbackType","eventType","UNDEFINED","_worklet_7414508538409_init_data","runWorklet","event","args","handler","isWorklet","console","warn","_worklet_12439180546276_init_data","isStateChangeEvent","oldState","_worklet_2038954310453_init_data","isTouchEvent","_worklet_2760912163768_init_data","useAnimatedGesture","preparedGesture","needsRebuild","sharedHandlersCallbacks","useSharedValue","lastUpdateEvent","stateControllers","callback","useAnimatedGestureJs6","currentCallback","value","i","length","handlerTag","UNDETERMINED","state","ACTIVE","undefined","FAILED","CANCELLED","create","changeEventCalculator","_gesture$changeEventC","call","useEvent","animatedEventHandler","animatedHandlers"],"sources":["C:\\Users\\user\\OneDrive\\Documents\\rn\\l\\node_modules\\react-native-gesture-handler\\lib\\module\\handlers\\gestures\\GestureDetector\\useAnimatedGesture.ts"],"sourcesContent":["import { HandlerCallbacks, CALLBACK_TYPE } from '../gesture';\nimport { Reanimated } from '../reanimatedWrapper';\nimport {\n  GestureTouchEvent,\n  GestureUpdateEvent,\n  GestureStateChangeEvent,\n} from '../../gestureHandlerCommon';\nimport {\n  GestureStateManager,\n  GestureStateManagerType,\n} from '../gestureStateManager';\nimport { State } from '../../../State';\nimport { TouchEventType } from '../../../TouchEventType';\nimport { tagMessage } from '../../../utils';\nimport { AttachedGestureState } from './types';\n\nfunction getHandler(\n  type: CALLBACK_TYPE,\n  gesture: HandlerCallbacks<Record<string, unknown>>\n) {\n  'worklet';\n  switch (type) {\n    case CALLBACK_TYPE.BEGAN:\n      return gesture.onBegin;\n    case CALLBACK_TYPE.START:\n      return gesture.onStart;\n    case CALLBACK_TYPE.UPDATE:\n      return gesture.onUpdate;\n    case CALLBACK_TYPE.CHANGE:\n      return gesture.onChange;\n    case CALLBACK_TYPE.END:\n      return gesture.onEnd;\n    case CALLBACK_TYPE.FINALIZE:\n      return gesture.onFinalize;\n    case CALLBACK_TYPE.TOUCHES_DOWN:\n      return gesture.onTouchesDown;\n    case CALLBACK_TYPE.TOUCHES_MOVE:\n      return gesture.onTouchesMove;\n    case CALLBACK_TYPE.TOUCHES_UP:\n      return gesture.onTouchesUp;\n    case CALLBACK_TYPE.TOUCHES_CANCELLED:\n      return gesture.onTouchesCancelled;\n  }\n}\n\nfunction touchEventTypeToCallbackType(\n  eventType: TouchEventType\n): CALLBACK_TYPE {\n  'worklet';\n  switch (eventType) {\n    case TouchEventType.TOUCHES_DOWN:\n      return CALLBACK_TYPE.TOUCHES_DOWN;\n    case TouchEventType.TOUCHES_MOVE:\n      return CALLBACK_TYPE.TOUCHES_MOVE;\n    case TouchEventType.TOUCHES_UP:\n      return CALLBACK_TYPE.TOUCHES_UP;\n    case TouchEventType.TOUCHES_CANCELLED:\n      return CALLBACK_TYPE.TOUCHES_CANCELLED;\n  }\n  return CALLBACK_TYPE.UNDEFINED;\n}\n\nfunction runWorklet(\n  type: CALLBACK_TYPE,\n  gesture: HandlerCallbacks<Record<string, unknown>>,\n  event: GestureStateChangeEvent | GestureUpdateEvent | GestureTouchEvent,\n  ...args: unknown[]\n) {\n  'worklet';\n  const handler = getHandler(type, gesture);\n  if (gesture.isWorklet[type]) {\n    // @ts-ignore Logic below makes sure the correct event is send to the\n    // correct handler.\n    handler?.(event, ...args);\n  } else if (handler) {\n    console.warn(tagMessage('Animated gesture callback must be a worklet'));\n  }\n}\n\nfunction isStateChangeEvent(\n  event: GestureUpdateEvent | GestureStateChangeEvent | GestureTouchEvent\n): event is GestureStateChangeEvent {\n  'worklet';\n  // @ts-ignore Yes, the oldState prop is missing on GestureTouchEvent, that's the point\n  return event.oldState != null;\n}\n\nfunction isTouchEvent(\n  event: GestureUpdateEvent | GestureStateChangeEvent | GestureTouchEvent\n): event is GestureTouchEvent {\n  'worklet';\n  return event.eventType != null;\n}\n\nexport function useAnimatedGesture(\n  preparedGesture: AttachedGestureState,\n  needsRebuild: boolean\n) {\n  if (!Reanimated) {\n    return;\n  }\n\n  // Hooks are called conditionally, but the condition is whether the\n  // react-native-reanimated is installed, which shouldn't change while running\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const sharedHandlersCallbacks = Reanimated.useSharedValue<\n    HandlerCallbacks<Record<string, unknown>>[] | null\n  >(null);\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const lastUpdateEvent = Reanimated.useSharedValue<\n    (GestureUpdateEvent | undefined)[]\n  >([]);\n\n  // not every gesture needs a state controller, init them lazily\n  const stateControllers: GestureStateManagerType[] = [];\n\n  const callback = (\n    event: GestureStateChangeEvent | GestureUpdateEvent | GestureTouchEvent\n  ) => {\n    'worklet';\n\n    const currentCallback = sharedHandlersCallbacks.value;\n    if (!currentCallback) {\n      return;\n    }\n\n    for (let i = 0; i < currentCallback.length; i++) {\n      const gesture = currentCallback[i];\n\n      if (event.handlerTag !== gesture.handlerTag) {\n        continue;\n      }\n\n      if (isStateChangeEvent(event)) {\n        if (\n          event.oldState === State.UNDETERMINED &&\n          event.state === State.BEGAN\n        ) {\n          runWorklet(CALLBACK_TYPE.BEGAN, gesture, event);\n        } else if (\n          (event.oldState === State.BEGAN ||\n            event.oldState === State.UNDETERMINED) &&\n          event.state === State.ACTIVE\n        ) {\n          runWorklet(CALLBACK_TYPE.START, gesture, event);\n          lastUpdateEvent.value[gesture.handlerTag] = undefined;\n        } else if (\n          event.oldState !== event.state &&\n          event.state === State.END\n        ) {\n          if (event.oldState === State.ACTIVE) {\n            runWorklet(CALLBACK_TYPE.END, gesture, event, true);\n          }\n          runWorklet(CALLBACK_TYPE.FINALIZE, gesture, event, true);\n        } else if (\n          (event.state === State.FAILED || event.state === State.CANCELLED) &&\n          event.state !== event.oldState\n        ) {\n          if (event.oldState === State.ACTIVE) {\n            runWorklet(CALLBACK_TYPE.END, gesture, event, false);\n          }\n          runWorklet(CALLBACK_TYPE.FINALIZE, gesture, event, false);\n        }\n      } else if (isTouchEvent(event)) {\n        if (!stateControllers[i]) {\n          stateControllers[i] = GestureStateManager.create(event.handlerTag);\n        }\n\n        if (event.eventType !== TouchEventType.UNDETERMINED) {\n          runWorklet(\n            touchEventTypeToCallbackType(event.eventType),\n            gesture,\n            event,\n            stateControllers[i]\n          );\n        }\n      } else {\n        runWorklet(CALLBACK_TYPE.UPDATE, gesture, event);\n\n        if (gesture.onChange && gesture.changeEventCalculator) {\n          runWorklet(\n            CALLBACK_TYPE.CHANGE,\n            gesture,\n            gesture.changeEventCalculator?.(\n              event,\n              lastUpdateEvent.value[gesture.handlerTag]\n            )\n          );\n\n          lastUpdateEvent.value[gesture.handlerTag] = event;\n        }\n      }\n    }\n  };\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const event = Reanimated.useEvent(\n    callback,\n    ['onGestureHandlerStateChange', 'onGestureHandlerEvent'],\n    needsRebuild\n  );\n\n  preparedGesture.animatedEventHandler = event;\n  preparedGesture.animatedHandlers = sharedHandlersCallbacks;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}