{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\src\\\\panel\\\\User\\\\Navigations\\\\Screens\\\\Profile\\\\ResetPassword.js\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchUserData } from '../../../Redux/Slice/ProfileSlice/resetSlice';\nimport { TextInput } from \"react-native-paper\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { fetchUserProfiles } from \"../../../Redux/Slice/ProfileSlice/ProfileSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = ({\n  navigation\n}) => {\n  const dispatch = useDispatch();\n  const {\n    status,\n    error\n  } = useSelector(state => state.userResetPassword);\n  const [password, setPassword] = useState(\"\");\n  const [societyId, setSocietyId] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [currentPassword, setCurrentPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [confirmPasswordError, setConfirmPasswordError] = useState(\"\");\n  useEffect(() => {\n    const getUserName = async () => {\n      try {\n        const userString = await AsyncStorage.getItem(\"user\");\n        if (userString !== null) {\n          const user = JSON.parse(userString);\n          setSocietyId(user.societyId);\n          setUserId(user.userId);\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch the user from async storage\", error);\n      }\n    };\n    getUserName();\n  }, []);\n  const handleSave = async () => {\n    try {\n      console.log(userId, currentPassword, password);\n      const userData = {\n        userId,\n        currentPassword,\n        password\n      };\n      const result = await dispatch(fetchUserData(userData));\n      console.log(result.type);\n      if (result.type === \"password/fetchUserData/fulfilled\") {\n        dispatch(fetchUserProfiles({\n          userId,\n          societyId\n        }));\n        navigation.navigate('Profile');\n      } else {\n        Alert.alert(\"Unable to Reset Password\", result);\n      }\n    } catch (error) {\n      console.error('Error retrieving userId from AsyncStorage:', error);\n    }\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(ScrollView, {\n      children: [_jsxDEV(TextInput, {\n        mode: \"outlined\",\n        label: \"Current Password\",\n        secureTextEntry: true,\n        value: currentPassword,\n        onChangeText: setCurrentPassword,\n        style: styles.input,\n        outlineColor: \"#CCC\",\n        theme: {\n          colors: {\n            primary: \"#27272A\"\n          }\n        },\n        error: error !== null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), error && _jsxDEV(Text, {\n        style: styles.errorText,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), _jsxDEV(TextInput, {\n        mode: \"outlined\",\n        label: \"New Password\",\n        secureTextEntry: true,\n        value: password,\n        onChangeText: setPassword,\n        style: styles.input,\n        outlineColor: \"#CCC\",\n        theme: {\n          colors: {\n            primary: \"#27272A\"\n          }\n        },\n        error: passwordError !== \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), passwordError !== \"\" && _jsxDEV(Text, {\n        style: styles.errorText,\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), _jsxDEV(TextInput, {\n        mode: \"outlined\",\n        label: \"Confirm Password\",\n        secureTextEntry: true,\n        value: confirmPassword,\n        onChangeText: setConfirmPassword,\n        style: styles.input,\n        outlineColor: \"#CCC\",\n        theme: {\n          colors: {\n            primary: \"#27272A\"\n          }\n        },\n        error: confirmPasswordError !== \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), confirmPasswordError !== \"\" && _jsxDEV(Text, {\n        style: styles.errorText,\n        children: confirmPasswordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), _jsxDEV(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleSave,\n      children: _jsxDEV(Text, {\n        style: {\n          color: \"white\",\n          fontSize: 24,\n          fontWeight: \"700\"\n        },\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 20,\n    backgroundColor: \"#fbf5f1\",\n    justifyContent: \"space-between\"\n  },\n  button: {\n    width: \"100%\",\n    backgroundColor: \"#7D0431\",\n    padding: 12,\n    alignItems: \"center\",\n    borderRadius: 10\n  },\n  input: {\n    marginTop: 20\n  },\n  errorText: {\n    color: \"red\",\n    marginTop: 5\n  }\n});\nexport default ResetPassword;","map":{"version":3,"names":["React","useState","useEffect","View","TouchableOpacity","StyleSheet","Text","ScrollView","Alert","useDispatch","useSelector","fetchUserData","TextInput","AsyncStorage","fetchUserProfiles","jsxDEV","_jsxDEV","ResetPassword","navigation","dispatch","status","error","state","userResetPassword","password","setPassword","societyId","setSocietyId","userId","setUserId","currentPassword","setCurrentPassword","confirmPassword","setConfirmPassword","passwordError","setPasswordError","confirmPasswordError","setConfirmPasswordError","getUserName","userString","getItem","user","JSON","parse","console","handleSave","log","userData","result","type","navigate","alert","style","styles","container","children","mode","label","secureTextEntry","value","onChangeText","input","outlineColor","theme","colors","primary","fileName","_jsxFileName","lineNumber","columnNumber","errorText","button","onPress","color","fontSize","fontWeight","create","flex","paddingHorizontal","backgroundColor","justifyContent","width","padding","alignItems","borderRadius","marginTop"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/src/panel/User/Navigations/Screens/Profile/ResetPassword.js"],"sourcesContent":["// src/ResetPassword.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { View, TouchableOpacity, StyleSheet, Text, ScrollView, Alert } from \"react-native\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchUserData } from '../../../Redux/Slice/ProfileSlice/resetSlice';\r\nimport { TextInput } from \"react-native-paper\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { fetchUserProfiles } from \"../../../Redux/Slice/ProfileSlice/ProfileSlice\";\r\n\r\nconst ResetPassword = ({ navigation }) => {\r\n  const dispatch = useDispatch();\r\n  const { status, error } = useSelector(state => state.userResetPassword);\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [societyId, setSocietyId] = useState(\"\");\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [currentPassword, setCurrentPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n  const [confirmPasswordError, setConfirmPasswordError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const getUserName = async () => {\r\n      try {\r\n        const userString = await AsyncStorage.getItem(\"user\");\r\n        if (userString !== null) {\r\n          const user = JSON.parse(userString);\r\n          setSocietyId(user.societyId);\r\n          setUserId(user.userId);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch the user from async storage\", error);\r\n      }\r\n    };\r\n\r\n    getUserName();\r\n  }, []);\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      console.log( userId,\r\n        currentPassword,\r\n        password)\r\n      const userData = {\r\n        userId,\r\n        currentPassword,\r\n        password\r\n      };\r\n      const result = await dispatch(fetchUserData(userData));\r\n      console.log(result.type)\r\n      if (result.type === \"password/fetchUserData/fulfilled\") {\r\n        dispatch(fetchUserProfiles({ userId, societyId }));\r\n        navigation.navigate('Profile')\r\n      }\r\n      else{\r\n       Alert.alert(\"Unable to Reset Password\",result);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error retrieving userId from AsyncStorage:', error);\r\n    }\r\n  };\r\n  return (\r\n    <View style={styles.container}>\r\n      <ScrollView>\r\n        <TextInput\r\n          mode=\"outlined\"\r\n          label=\"Current Password\"\r\n          secureTextEntry\r\n          value={currentPassword}\r\n          onChangeText={setCurrentPassword}\r\n          style={styles.input}\r\n          outlineColor=\"#CCC\"\r\n          theme={{ colors: { primary: \"#27272A\" } }}\r\n          error={error !== null}\r\n        />\r\n        {error && (\r\n          <Text style={styles.errorText}>{error}</Text>\r\n        )}\r\n        <TextInput\r\n          mode=\"outlined\"\r\n          label=\"New Password\"\r\n          secureTextEntry\r\n          value={password}\r\n          onChangeText={setPassword}\r\n          style={styles.input}\r\n          outlineColor=\"#CCC\"\r\n          theme={{ colors: { primary: \"#27272A\" } }}\r\n          error={passwordError !== \"\"}\r\n        />\r\n        {passwordError !== \"\" && (\r\n          <Text style={styles.errorText}>{passwordError}</Text>\r\n        )}\r\n        <TextInput\r\n          mode=\"outlined\"\r\n          label=\"Confirm Password\"\r\n          secureTextEntry\r\n          value={confirmPassword}\r\n          onChangeText={setConfirmPassword}\r\n          style={styles.input}\r\n          outlineColor=\"#CCC\"\r\n          theme={{ colors: { primary: \"#27272A\" } }}\r\n          error={confirmPasswordError !== \"\"}\r\n        />\r\n        {confirmPasswordError !== \"\" && (\r\n          <Text style={styles.errorText}>{confirmPasswordError}</Text>\r\n        )}\r\n      </ScrollView>\r\n      <TouchableOpacity style={styles.button} onPress={handleSave}>\r\n        <Text style={{ color: \"white\", fontSize: 24, fontWeight: \"700\" }}>Save</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingHorizontal: 20,\r\n    backgroundColor: \"#fbf5f1\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    backgroundColor: \"#7D0431\",\r\n    padding: 12,\r\n    alignItems: \"center\",\r\n    borderRadius: 10,\r\n  },\r\n  input: {\r\n    marginTop: 20,\r\n  },\r\n  errorText: {\r\n    color: \"red\",\r\n    marginTop: 5,\r\n  },\r\n});\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}