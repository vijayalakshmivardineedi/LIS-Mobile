{"ast":null,"code":"import createHandler from './createHandler';\nimport { baseGestureHandlerProps } from './gestureHandlerCommon';\nexport const longPressGestureHandlerProps = ['minDurationMs', 'maxDist', 'numberOfPointers'];\nexport const longPressHandlerName = 'LongPressGestureHandler';\nexport const LongPressGestureHandler = createHandler({\n  name: longPressHandlerName,\n  allowedProps: [...baseGestureHandlerProps, ...longPressGestureHandlerProps],\n  config: {\n    shouldCancelWhenOutside: true\n  }\n});","map":{"version":3,"names":["createHandler","baseGestureHandlerProps","longPressGestureHandlerProps","longPressHandlerName","LongPressGestureHandler","name","allowedProps","config","shouldCancelWhenOutside"],"sources":["C:\\Users\\user\\OneDrive\\Documents\\rn\\l\\node_modules\\react-native-gesture-handler\\lib\\module\\handlers\\LongPressGestureHandler.ts"],"sourcesContent":["import { LongPressGestureHandlerEventPayload } from './GestureHandlerEventPayload';\nimport createHandler from './createHandler';\nimport {\n  BaseGestureHandlerProps,\n  baseGestureHandlerProps,\n} from './gestureHandlerCommon';\n\nexport const longPressGestureHandlerProps = [\n  'minDurationMs',\n  'maxDist',\n  'numberOfPointers',\n] as const;\n\nexport interface LongPressGestureConfig {\n  /**\n   * Minimum time, expressed in milliseconds, that a finger must remain pressed on\n   * the corresponding view. The default value is 500.\n   */\n  minDurationMs?: number;\n\n  /**\n   * Maximum distance, expressed in points, that defines how far the finger is\n   * allowed to travel during a long press gesture. If the finger travels\n   * further than the defined distance and the handler hasn't yet activated, it\n   * will fail to recognize the gesture. The default value is 10.\n   */\n  maxDist?: number;\n\n  /**\n   * Determine exact number of points required to handle the long press gesture.\n   */\n  numberOfPointers?: number;\n}\n\nexport interface LongPressGestureHandlerProps\n  extends BaseGestureHandlerProps<LongPressGestureHandlerEventPayload>,\n    LongPressGestureConfig {}\n\nexport const longPressHandlerName = 'LongPressGestureHandler';\n\nexport type LongPressGestureHandler = typeof LongPressGestureHandler;\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\nexport const LongPressGestureHandler = createHandler<\n  LongPressGestureHandlerProps,\n  LongPressGestureHandlerEventPayload\n>({\n  name: longPressHandlerName,\n  allowedProps: [\n    ...baseGestureHandlerProps,\n    ...longPressGestureHandlerProps,\n  ] as const,\n  config: {\n    shouldCancelWhenOutside: true,\n  },\n});\n"],"mappings":"AACA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,SAEEC,uBAFF,QAGO,wBAHP;AAKA,OAAO,MAAMC,4BAA4B,GAAG,CAC1C,eAD0C,EAE1C,SAF0C,EAG1C,kBAH0C,CAArC;AA+BP,OAAO,MAAMC,oBAAoB,GAAG,yBAA7B;AAIP,OAAO,MAAMC,uBAAuB,GAAGJ,aAAa,CAGlD;EACAK,IAAI,EAAEF,oBADN;EAEAG,YAAY,EAAE,CACZ,GAAGL,uBADS,EAEZ,GAAGC,4BAFS,CAFd;EAMAK,MAAM,EAAE;IACNC,uBAAuB,EAAE;EADnB;AANR,CAHkD,CAA7C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}