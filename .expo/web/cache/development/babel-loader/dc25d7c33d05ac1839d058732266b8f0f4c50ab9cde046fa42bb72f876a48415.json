{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axiosInstance from \"../../../../Security/helpers/axios\";\nexport const fetchDocumentsById = createAsyncThunk(\"documents/fetchDocumentsById\", async ({\n  societyId,\n  blockNumber,\n  flatNumber\n}, {\n  rejectWithValue\n}) => {\n  console.log(\"sgkgf\", societyId, blockNumber, flatNumber);\n  try {\n    const response = await axiosInstance.get(`/documents/${societyId}/${blockNumber}/${flatNumber}`);\n    console.log(\"hello\", response.data.documents);\n    return response.data.documents;\n  } catch (error) {\n    console.log(error.response.data);\n    return rejectWithValue(error.response.data);\n  }\n});\nconst getdocumentSlice = createSlice({\n  name: \"getdocuments\",\n  initialState: {\n    getdocuments: [],\n    status: \"idle\",\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchDocumentsById.pending, state => {\n      state.status = \"loading\";\n    }).addCase(fetchDocumentsById.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.getdocuments = action.payload;\n    }).addCase(fetchDocumentsById.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.payload;\n    });\n  }\n});\nexport default getdocumentSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axiosInstance","fetchDocumentsById","societyId","blockNumber","flatNumber","rejectWithValue","console","log","response","get","data","documents","error","getdocumentSlice","name","initialState","getdocuments","status","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/src/panel/User/Redux/Slice/ProfileSlice/GetDocumentSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../../../Security/helpers/axios\";\r\n\r\nexport const fetchDocumentsById = createAsyncThunk(\r\n    \"documents/fetchDocumentsById\",\r\n    async ({societyId, blockNumber, flatNumber}, { rejectWithValue }) => {\r\n      console.log(\"sgkgf\", societyId, blockNumber, flatNumber);\r\n      try {\r\n        // Ensure blockNumber and flatNumber are strings\r\n        const response = await axiosInstance.get(`/documents/${societyId}/${blockNumber}/${flatNumber}`);\r\n        console.log(\"hello\", response.data.documents);\r\n        return response.data.documents;\r\n      } catch (error) {\r\n        console.log(error.response.data);\r\n        return rejectWithValue(error.response.data);\r\n      }\r\n    }\r\n  );\r\n\r\n\r\nconst getdocumentSlice = createSlice({\r\n  name: \"getdocuments\",\r\n  initialState: {\r\n    getdocuments: [],\r\n    status: \"idle\",\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    // Add any non-async reducers here if needed\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchDocumentsById.pending, (state) => {\r\n        state.status = \"loading\";\r\n      })\r\n      .addCase(fetchDocumentsById.fulfilled, (state, action) => {\r\n        state.status = \"succeeded\";\r\n        state.getdocuments = action.payload;\r\n      })\r\n      .addCase(fetchDocumentsById.rejected, (state, action) => {\r\n        state.status = \"failed\";\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default getdocumentSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,aAAa,MAAM,oCAAoC;AAE9D,OAAO,MAAMC,kBAAkB,GAAGF,gBAAgB,CAC9C,8BAA8B,EAC9B,OAAO;EAACG,SAAS;EAAEC,WAAW;EAAEC;AAAU,CAAC,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACnEC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEL,SAAS,EAAEC,WAAW,EAAEC,UAAU,CAAC;EACxD,IAAI;IAEF,MAAMI,QAAQ,GAAG,MAAMR,aAAa,CAACS,GAAG,CAAC,cAAcP,SAAS,IAAIC,WAAW,IAAIC,UAAU,EAAE,CAAC;IAChGE,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEC,QAAQ,CAACE,IAAI,CAACC,SAAS,CAAC;IAC7C,OAAOH,QAAQ,CAACE,IAAI,CAACC,SAAS;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,OAAO,CAACC,GAAG,CAACK,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAAC;IAChC,OAAOL,eAAe,CAACO,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAAC;EAC7C;AACF,CACF,CAAC;AAGH,MAAMG,gBAAgB,GAAGf,WAAW,CAAC;EACnCgB,IAAI,EAAE,cAAc;EACpBC,YAAY,EAAE;IACZC,YAAY,EAAE,EAAE;IAChBC,MAAM,EAAE,MAAM;IACdL,KAAK,EAAE;EACT,CAAC;EACDM,QAAQ,EAAE,CAEV,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACpB,kBAAkB,CAACqB,OAAO,EAAGC,KAAK,IAAK;MAC9CA,KAAK,CAACN,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDI,OAAO,CAACpB,kBAAkB,CAACuB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACxDF,KAAK,CAACN,MAAM,GAAG,WAAW;MAC1BM,KAAK,CAACP,YAAY,GAAGS,MAAM,CAACC,OAAO;IACrC,CAAC,CAAC,CACDL,OAAO,CAACpB,kBAAkB,CAAC0B,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACvDF,KAAK,CAACN,MAAM,GAAG,QAAQ;MACvBM,KAAK,CAACX,KAAK,GAAGa,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeb,gBAAgB,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}