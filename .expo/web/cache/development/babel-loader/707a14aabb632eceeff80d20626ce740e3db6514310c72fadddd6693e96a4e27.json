{"ast":null,"code":"import { useCallback, useEffect } from 'react';\nexport default (props => {\n  const {\n    onChangeOffset,\n    scrollOffset,\n    scrollViewRef\n  } = props;\n  useEffect(() => {\n    if (scrollOffset !== undefined) {\n      scrollViewRef?.current?.scrollTo({\n        y: scrollOffset,\n        animated: false\n      });\n    }\n  }, [scrollOffset]);\n  const onScrollEndDrag = useCallback(event => {\n    const offset = event.nativeEvent.contentOffset.y;\n    const velocity = event.nativeEvent.velocity?.y;\n    if (velocity === 0) {\n      onChangeOffset?.(offset);\n    }\n  }, []);\n  const onMomentumScrollEnd = useCallback(event => {\n    onChangeOffset?.(event.nativeEvent.contentOffset.y);\n  }, []);\n  return {\n    scrollEvents: {\n      onScrollEndDrag,\n      onMomentumScrollEnd\n    }\n  };\n});","map":{"version":3,"names":["useCallback","useEffect","props","onChangeOffset","scrollOffset","scrollViewRef","undefined","current","scrollTo","y","animated","onScrollEndDrag","event","offset","nativeEvent","contentOffset","velocity","onMomentumScrollEnd","scrollEvents"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/node_modules/react-native-calendars/src/timeline/useTimelineOffset.js"],"sourcesContent":["import { useCallback, useEffect } from 'react';\nexport default (props) => {\n    const { onChangeOffset, scrollOffset, scrollViewRef } = props;\n    useEffect(() => {\n        // NOTE: The main reason for this feature is to sync the offset\n        // between all of the timelines in the TimelineList component\n        if (scrollOffset !== undefined) {\n            scrollViewRef?.current?.scrollTo({\n                y: scrollOffset,\n                animated: false\n            });\n        }\n    }, [scrollOffset]);\n    const onScrollEndDrag = useCallback((event) => {\n        const offset = event.nativeEvent.contentOffset.y;\n        const velocity = event.nativeEvent.velocity?.y;\n        if (velocity === 0) {\n            onChangeOffset?.(offset);\n        }\n    }, []);\n    const onMomentumScrollEnd = useCallback((event) => {\n        onChangeOffset?.(event.nativeEvent.contentOffset.y);\n    }, []);\n    return {\n        scrollEvents: {\n            onScrollEndDrag,\n            onMomentumScrollEnd\n        }\n    };\n};\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAC9C,gBAAgBC,KAAK,IAAK;EACtB,MAAM;IAAEC,cAAc;IAAEC,YAAY;IAAEC;EAAc,CAAC,GAAGH,KAAK;EAC7DD,SAAS,CAAC,MAAM;IAGZ,IAAIG,YAAY,KAAKE,SAAS,EAAE;MAC5BD,aAAa,EAAEE,OAAO,EAAEC,QAAQ,CAAC;QAC7BC,CAAC,EAAEL,YAAY;QACfM,QAAQ,EAAE;MACd,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACN,YAAY,CAAC,CAAC;EAClB,MAAMO,eAAe,GAAGX,WAAW,CAAEY,KAAK,IAAK;IAC3C,MAAMC,MAAM,GAAGD,KAAK,CAACE,WAAW,CAACC,aAAa,CAACN,CAAC;IAChD,MAAMO,QAAQ,GAAGJ,KAAK,CAACE,WAAW,CAACE,QAAQ,EAAEP,CAAC;IAC9C,IAAIO,QAAQ,KAAK,CAAC,EAAE;MAChBb,cAAc,GAAGU,MAAM,CAAC;IAC5B;EACJ,CAAC,EAAE,EAAE,CAAC;EACN,MAAMI,mBAAmB,GAAGjB,WAAW,CAAEY,KAAK,IAAK;IAC/CT,cAAc,GAAGS,KAAK,CAACE,WAAW,CAACC,aAAa,CAACN,CAAC,CAAC;EACvD,CAAC,EAAE,EAAE,CAAC;EACN,OAAO;IACHS,YAAY,EAAE;MACVP,eAAe;MACfM;IACJ;EACJ,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}