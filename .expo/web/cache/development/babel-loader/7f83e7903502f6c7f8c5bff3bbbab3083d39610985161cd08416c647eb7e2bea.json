{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\node_modules\\\\react-native-calendars\\\\src\\\\agenda\\\\reservation-list\\\\index.js\";\nimport isFunction from 'lodash/isFunction';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { Component } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { extractReservationProps } from '../../componentUpdater';\nimport { sameDate } from '../../dateutils';\nimport { toMarkingFormat } from '../../interface';\nimport styleConstructor from './style';\nimport Reservation from './reservation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ReservationList extends Component {\n  static displayName = 'ReservationList';\n  static propTypes = Object.assign({}, Reservation.propTypes, {\n    items: PropTypes.object,\n    selectedDay: PropTypes.instanceOf(XDate),\n    topDay: PropTypes.instanceOf(XDate),\n    onDayChange: PropTypes.func,\n    showOnlySelectedDayItems: PropTypes.bool,\n    renderEmptyData: PropTypes.func,\n    onScroll: PropTypes.func,\n    onScrollBeginDrag: PropTypes.func,\n    onScrollEndDrag: PropTypes.func,\n    onMomentumScrollBegin: PropTypes.func,\n    onMomentumScrollEnd: PropTypes.func,\n    refreshControl: PropTypes.element,\n    refreshing: PropTypes.bool,\n    onRefresh: PropTypes.func,\n    reservationsKeyExtractor: PropTypes.func\n  });\n  static defaultProps = {\n    refreshing: false,\n    selectedDay: new XDate(true)\n  };\n  list = React.createRef();\n  constructor(props) {\n    super(props);\n    this.style = styleConstructor(props.theme);\n    this.state = {\n      reservations: []\n    };\n    this.heights = [];\n    this.selectedDay = props.selectedDay;\n    this.scrollOver = true;\n  }\n  componentDidMount() {\n    this.updateDataSource(this.getReservations(this.props).reservations);\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.topDay && prevProps.topDay && prevProps !== this.props) {\n      if (!sameDate(prevProps.topDay, this.props.topDay)) {\n        this.setState({\n          reservations: []\n        }, () => this.updateReservations(this.props));\n      } else {\n        this.updateReservations(this.props);\n      }\n    }\n  }\n  updateDataSource(reservations) {\n    this.setState({\n      reservations\n    });\n  }\n  updateReservations(props) {\n    const {\n      selectedDay,\n      showOnlySelectedDayItems\n    } = props;\n    const reservations = this.getReservations(props);\n    if (!showOnlySelectedDayItems && this.list && !sameDate(selectedDay, this.selectedDay)) {\n      let scrollPosition = 0;\n      for (let i = 0; i < reservations.scrollPosition; i++) {\n        scrollPosition += this.heights[i] || 0;\n      }\n      this.scrollOver = false;\n      this.list?.current?.scrollToOffset({\n        offset: scrollPosition,\n        animated: true\n      });\n    }\n    this.selectedDay = selectedDay;\n    this.updateDataSource(reservations.reservations);\n  }\n  getReservationsForDay(iterator, props) {\n    const day = iterator.clone();\n    const res = props.items?.[toMarkingFormat(day)];\n    if (res && res.length) {\n      return res.map((reservation, i) => {\n        return {\n          reservation,\n          date: i ? undefined : day\n        };\n      });\n    } else if (res) {\n      return [{\n        date: iterator.clone()\n      }];\n    } else {\n      return false;\n    }\n  }\n  getReservations(props) {\n    const {\n      selectedDay,\n      showOnlySelectedDayItems\n    } = props;\n    if (!props.items || !selectedDay) {\n      return {\n        reservations: [],\n        scrollPosition: 0\n      };\n    }\n    let reservations = [];\n    if (this.state.reservations && this.state.reservations.length) {\n      const iterator = this.state.reservations[0].date?.clone();\n      if (iterator) {\n        while (iterator.getTime() < selectedDay.getTime()) {\n          const res = this.getReservationsForDay(iterator, props);\n          if (!res) {\n            reservations = [];\n            break;\n          } else {\n            reservations = reservations.concat(res);\n          }\n          iterator.addDays(1);\n        }\n      }\n    }\n    const scrollPosition = reservations.length;\n    const iterator = selectedDay.clone();\n    if (showOnlySelectedDayItems) {\n      const res = this.getReservationsForDay(iterator, props);\n      if (res) {\n        reservations = res;\n      }\n      iterator.addDays(1);\n    } else {\n      for (let i = 0; i < 31; i++) {\n        const res = this.getReservationsForDay(iterator, props);\n        if (res) {\n          reservations = reservations.concat(res);\n        }\n        iterator.addDays(1);\n      }\n    }\n    return {\n      reservations,\n      scrollPosition\n    };\n  }\n  onScroll = event => {\n    const yOffset = event.nativeEvent.contentOffset.y;\n    this.props.onScroll?.(yOffset);\n    let topRowOffset = 0;\n    let topRow;\n    for (topRow = 0; topRow < this.heights.length; topRow++) {\n      if (topRowOffset + this.heights[topRow] / 2 >= yOffset) {\n        break;\n      }\n      topRowOffset += this.heights[topRow];\n    }\n    const row = this.state.reservations[topRow];\n    if (!row) return;\n    const day = row.date;\n    if (day) {\n      if (!sameDate(day, this.selectedDay) && this.scrollOver) {\n        this.selectedDay = day.clone();\n        this.props.onDayChange?.(day.clone());\n      }\n    }\n  };\n  onListTouch() {\n    this.scrollOver = true;\n  }\n  onRowLayoutChange(index, event) {\n    this.heights[index] = event.nativeEvent.layout.height;\n  }\n  onMoveShouldSetResponderCapture = () => {\n    this.onListTouch();\n    return false;\n  };\n  renderRow = ({\n    item,\n    index\n  }) => {\n    const reservationProps = extractReservationProps(this.props);\n    return _jsxDEV(View, {\n      onLayout: this.onRowLayoutChange.bind(this, index),\n      children: _jsxDEV(Reservation, Object.assign({}, reservationProps, {\n        item: item.reservation,\n        date: item.date\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }, this);\n  };\n  keyExtractor = (item, index) => {\n    return this.props.reservationsKeyExtractor?.(item, index) || `${item?.reservation?.day}${index}`;\n  };\n  render() {\n    const {\n      items,\n      selectedDay,\n      theme,\n      style\n    } = this.props;\n    if (!items || selectedDay && !items[toMarkingFormat(selectedDay)]) {\n      if (isFunction(this.props.renderEmptyData)) {\n        return this.props.renderEmptyData?.();\n      }\n      return _jsxDEV(ActivityIndicator, {\n        style: this.style.indicator,\n        color: theme?.indicatorColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 20\n      }, this);\n    }\n    return _jsxDEV(FlatList, {\n      ref: this.list,\n      style: style,\n      contentContainerStyle: this.style.content,\n      data: this.state.reservations,\n      renderItem: this.renderRow,\n      keyExtractor: this.keyExtractor,\n      showsVerticalScrollIndicator: false,\n      scrollEventThrottle: 200,\n      onMoveShouldSetResponderCapture: this.onMoveShouldSetResponderCapture,\n      onScroll: this.onScroll,\n      refreshControl: this.props.refreshControl,\n      refreshing: this.props.refreshing,\n      onRefresh: this.props.onRefresh,\n      onScrollBeginDrag: this.props.onScrollBeginDrag,\n      onScrollEndDrag: this.props.onScrollEndDrag,\n      onMomentumScrollBegin: this.props.onMomentumScrollBegin,\n      onMomentumScrollEnd: this.props.onMomentumScrollEnd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }, this);\n  }\n}\nexport default ReservationList;","map":{"version":3,"names":["isFunction","PropTypes","XDate","React","Component","ActivityIndicator","View","FlatList","extractReservationProps","sameDate","toMarkingFormat","styleConstructor","Reservation","jsxDEV","_jsxDEV","ReservationList","displayName","propTypes","Object","assign","items","object","selectedDay","instanceOf","topDay","onDayChange","func","showOnlySelectedDayItems","bool","renderEmptyData","onScroll","onScrollBeginDrag","onScrollEndDrag","onMomentumScrollBegin","onMomentumScrollEnd","refreshControl","element","refreshing","onRefresh","reservationsKeyExtractor","defaultProps","list","createRef","constructor","props","style","theme","state","reservations","heights","scrollOver","componentDidMount","updateDataSource","getReservations","componentDidUpdate","prevProps","setState","updateReservations","scrollPosition","i","current","scrollToOffset","offset","animated","getReservationsForDay","iterator","day","clone","res","length","map","reservation","date","undefined","getTime","concat","addDays","event","yOffset","nativeEvent","contentOffset","y","topRowOffset","topRow","row","onListTouch","onRowLayoutChange","index","layout","height","onMoveShouldSetResponderCapture","renderRow","item","reservationProps","onLayout","bind","children","fileName","_jsxFileName","lineNumber","columnNumber","keyExtractor","render","indicator","color","indicatorColor","ref","contentContainerStyle","content","data","renderItem","showsVerticalScrollIndicator","scrollEventThrottle"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/node_modules/react-native-calendars/src/agenda/reservation-list/index.js"],"sourcesContent":["import isFunction from 'lodash/isFunction';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { Component } from 'react';\nimport { ActivityIndicator, View, FlatList } from 'react-native';\nimport { extractReservationProps } from '../../componentUpdater';\nimport { sameDate } from '../../dateutils';\nimport { toMarkingFormat } from '../../interface';\nimport styleConstructor from './style';\nimport Reservation from './reservation';\nclass ReservationList extends Component {\n    static displayName = 'ReservationList';\n    static propTypes = {\n        ...Reservation.propTypes,\n        items: PropTypes.object,\n        selectedDay: PropTypes.instanceOf(XDate),\n        topDay: PropTypes.instanceOf(XDate),\n        onDayChange: PropTypes.func,\n        showOnlySelectedDayItems: PropTypes.bool,\n        renderEmptyData: PropTypes.func,\n        onScroll: PropTypes.func,\n        onScrollBeginDrag: PropTypes.func,\n        onScrollEndDrag: PropTypes.func,\n        onMomentumScrollBegin: PropTypes.func,\n        onMomentumScrollEnd: PropTypes.func,\n        refreshControl: PropTypes.element,\n        refreshing: PropTypes.bool,\n        onRefresh: PropTypes.func,\n        reservationsKeyExtractor: PropTypes.func\n    };\n    static defaultProps = {\n        refreshing: false,\n        selectedDay: new XDate(true)\n    };\n    style;\n    heights;\n    selectedDay;\n    scrollOver;\n    list = React.createRef();\n    constructor(props) {\n        super(props);\n        this.style = styleConstructor(props.theme);\n        this.state = {\n            reservations: []\n        };\n        this.heights = [];\n        this.selectedDay = props.selectedDay;\n        this.scrollOver = true;\n    }\n    componentDidMount() {\n        this.updateDataSource(this.getReservations(this.props).reservations);\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.topDay && prevProps.topDay && prevProps !== this.props) {\n            if (!sameDate(prevProps.topDay, this.props.topDay)) {\n                this.setState({ reservations: [] }, () => this.updateReservations(this.props));\n            }\n            else {\n                this.updateReservations(this.props);\n            }\n        }\n    }\n    updateDataSource(reservations) {\n        this.setState({ reservations });\n    }\n    updateReservations(props) {\n        const { selectedDay, showOnlySelectedDayItems } = props;\n        const reservations = this.getReservations(props);\n        if (!showOnlySelectedDayItems && this.list && !sameDate(selectedDay, this.selectedDay)) {\n            let scrollPosition = 0;\n            for (let i = 0; i < reservations.scrollPosition; i++) {\n                scrollPosition += this.heights[i] || 0;\n            }\n            this.scrollOver = false;\n            this.list?.current?.scrollToOffset({ offset: scrollPosition, animated: true });\n        }\n        this.selectedDay = selectedDay;\n        this.updateDataSource(reservations.reservations);\n    }\n    getReservationsForDay(iterator, props) {\n        const day = iterator.clone();\n        const res = props.items?.[toMarkingFormat(day)];\n        if (res && res.length) {\n            return res.map((reservation, i) => {\n                return {\n                    reservation,\n                    date: i ? undefined : day\n                };\n            });\n        }\n        else if (res) {\n            return [\n                {\n                    date: iterator.clone()\n                }\n            ];\n        }\n        else {\n            return false;\n        }\n    }\n    getReservations(props) {\n        const { selectedDay, showOnlySelectedDayItems } = props;\n        if (!props.items || !selectedDay) {\n            return { reservations: [], scrollPosition: 0 };\n        }\n        let reservations = [];\n        if (this.state.reservations && this.state.reservations.length) {\n            const iterator = this.state.reservations[0].date?.clone();\n            if (iterator) {\n                while (iterator.getTime() < selectedDay.getTime()) {\n                    const res = this.getReservationsForDay(iterator, props);\n                    if (!res) {\n                        reservations = [];\n                        break;\n                    }\n                    else {\n                        reservations = reservations.concat(res);\n                    }\n                    iterator.addDays(1);\n                }\n            }\n        }\n        const scrollPosition = reservations.length;\n        const iterator = selectedDay.clone();\n        if (showOnlySelectedDayItems) {\n            const res = this.getReservationsForDay(iterator, props);\n            if (res) {\n                reservations = res;\n            }\n            iterator.addDays(1);\n        }\n        else {\n            for (let i = 0; i < 31; i++) {\n                const res = this.getReservationsForDay(iterator, props);\n                if (res) {\n                    reservations = reservations.concat(res);\n                }\n                iterator.addDays(1);\n            }\n        }\n        return { reservations, scrollPosition };\n    }\n    onScroll = (event) => {\n        const yOffset = event.nativeEvent.contentOffset.y;\n        this.props.onScroll?.(yOffset);\n        let topRowOffset = 0;\n        let topRow;\n        for (topRow = 0; topRow < this.heights.length; topRow++) {\n            if (topRowOffset + this.heights[topRow] / 2 >= yOffset) {\n                break;\n            }\n            topRowOffset += this.heights[topRow];\n        }\n        const row = this.state.reservations[topRow];\n        if (!row)\n            return;\n        const day = row.date;\n        if (day) {\n            if (!sameDate(day, this.selectedDay) && this.scrollOver) {\n                this.selectedDay = day.clone();\n                this.props.onDayChange?.(day.clone());\n            }\n        }\n    };\n    onListTouch() {\n        this.scrollOver = true;\n    }\n    onRowLayoutChange(index, event) {\n        this.heights[index] = event.nativeEvent.layout.height;\n    }\n    onMoveShouldSetResponderCapture = () => {\n        this.onListTouch();\n        return false;\n    };\n    renderRow = ({ item, index }) => {\n        const reservationProps = extractReservationProps(this.props);\n        return (<View onLayout={this.onRowLayoutChange.bind(this, index)}>\n        <Reservation {...reservationProps} item={item.reservation} date={item.date}/>\n      </View>);\n    };\n    keyExtractor = (item, index) => {\n        return this.props.reservationsKeyExtractor?.(item, index) || `${item?.reservation?.day}${index}`;\n    };\n    render() {\n        const { items, selectedDay, theme, style } = this.props;\n        if (!items || selectedDay && !items[toMarkingFormat(selectedDay)]) {\n            if (isFunction(this.props.renderEmptyData)) {\n                return this.props.renderEmptyData?.();\n            }\n            return <ActivityIndicator style={this.style.indicator} color={theme?.indicatorColor}/>;\n        }\n        return (<FlatList ref={this.list} style={style} contentContainerStyle={this.style.content} data={this.state.reservations} renderItem={this.renderRow} keyExtractor={this.keyExtractor} showsVerticalScrollIndicator={false} scrollEventThrottle={200} onMoveShouldSetResponderCapture={this.onMoveShouldSetResponderCapture} onScroll={this.onScroll} refreshControl={this.props.refreshControl} refreshing={this.props.refreshing} onRefresh={this.props.onRefresh} onScrollBeginDrag={this.props.onScrollBeginDrag} onScrollEndDrag={this.props.onScrollEndDrag} onMomentumScrollBegin={this.props.onMomentumScrollBegin} onMomentumScrollEnd={this.props.onMomentumScrollEnd}/>);\n    }\n}\nexport default ReservationList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}