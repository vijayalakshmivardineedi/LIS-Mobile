{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { DiagonalDirections, Directions } from '../../Directions';\nimport { MINIMAL_RECOGNIZABLE_MAGNITUDE } from '../constants';\nexport default class Vector {\n  constructor(x, y) {\n    _defineProperty(this, \"x\", void 0);\n    _defineProperty(this, \"y\", void 0);\n    _defineProperty(this, \"unitX\", void 0);\n    _defineProperty(this, \"unitY\", void 0);\n    _defineProperty(this, \"_magnitude\", void 0);\n    this.x = x;\n    this.y = y;\n    this._magnitude = Math.hypot(this.x, this.y);\n    const isMagnitudeSufficient = this._magnitude > MINIMAL_RECOGNIZABLE_MAGNITUDE;\n    this.unitX = isMagnitudeSufficient ? this.x / this._magnitude : 0;\n    this.unitY = isMagnitudeSufficient ? this.y / this._magnitude : 0;\n  }\n  static fromDirection(direction) {\n    var _DirectionToVectorMap;\n    return (_DirectionToVectorMap = DirectionToVectorMappings.get(direction)) !== null && _DirectionToVectorMap !== void 0 ? _DirectionToVectorMap : new Vector(0, 0);\n  }\n  static fromVelocity(tracker, pointerId) {\n    const velocity = tracker.getVelocity(pointerId);\n    return new Vector(velocity.x, velocity.y);\n  }\n  get magnitude() {\n    return this._magnitude;\n  }\n  computeSimilarity(vector) {\n    return this.unitX * vector.unitX + this.unitY * vector.unitY;\n  }\n  isSimilar(vector, threshold) {\n    return this.computeSimilarity(vector) > threshold;\n  }\n}\nconst DirectionToVectorMappings = new Map([[Directions.LEFT, new Vector(-1, 0)], [Directions.RIGHT, new Vector(1, 0)], [Directions.UP, new Vector(0, -1)], [Directions.DOWN, new Vector(0, 1)], [DiagonalDirections.UP_RIGHT, new Vector(1, -1)], [DiagonalDirections.DOWN_RIGHT, new Vector(1, 1)], [DiagonalDirections.UP_LEFT, new Vector(-1, -1)], [DiagonalDirections.DOWN_LEFT, new Vector(-1, 1)]]);","map":{"version":3,"names":["DiagonalDirections","Directions","MINIMAL_RECOGNIZABLE_MAGNITUDE","Vector","constructor","x","y","_defineProperty","_magnitude","Math","hypot","isMagnitudeSufficient","unitX","unitY","fromDirection","direction","_DirectionToVectorMap","DirectionToVectorMappings","get","fromVelocity","tracker","pointerId","velocity","getVelocity","magnitude","computeSimilarity","vector","isSimilar","threshold","Map","LEFT","RIGHT","UP","DOWN","UP_RIGHT","DOWN_RIGHT","UP_LEFT","DOWN_LEFT"],"sources":["C:\\Users\\user\\OneDrive\\Documents\\rn\\l\\node_modules\\react-native-gesture-handler\\lib\\module\\web\\tools\\Vector.ts"],"sourcesContent":["import { DiagonalDirections, Directions } from '../../Directions';\nimport { MINIMAL_RECOGNIZABLE_MAGNITUDE } from '../constants';\nimport PointerTracker from './PointerTracker';\n\nexport default class Vector {\n  private readonly x;\n  private readonly y;\n  private readonly unitX;\n  private readonly unitY;\n  private readonly _magnitude;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n\n    this._magnitude = Math.hypot(this.x, this.y);\n    const isMagnitudeSufficient =\n      this._magnitude > MINIMAL_RECOGNIZABLE_MAGNITUDE;\n\n    this.unitX = isMagnitudeSufficient ? this.x / this._magnitude : 0;\n    this.unitY = isMagnitudeSufficient ? this.y / this._magnitude : 0;\n  }\n\n  static fromDirection(direction: Directions | DiagonalDirections): Vector {\n    return DirectionToVectorMappings.get(direction) ?? new Vector(0, 0);\n  }\n\n  static fromVelocity(tracker: PointerTracker, pointerId: number) {\n    const velocity = tracker.getVelocity(pointerId);\n    return new Vector(velocity.x, velocity.y);\n  }\n\n  get magnitude() {\n    return this._magnitude;\n  }\n\n  computeSimilarity(vector: Vector) {\n    return this.unitX * vector.unitX + this.unitY * vector.unitY;\n  }\n\n  isSimilar(vector: Vector, threshold: number) {\n    return this.computeSimilarity(vector) > threshold;\n  }\n}\n\nconst DirectionToVectorMappings = new Map<\n  Directions | DiagonalDirections,\n  Vector\n>([\n  [Directions.LEFT, new Vector(-1, 0)],\n  [Directions.RIGHT, new Vector(1, 0)],\n  [Directions.UP, new Vector(0, -1)],\n  [Directions.DOWN, new Vector(0, 1)],\n\n  [DiagonalDirections.UP_RIGHT, new Vector(1, -1)],\n  [DiagonalDirections.DOWN_RIGHT, new Vector(1, 1)],\n  [DiagonalDirections.UP_LEFT, new Vector(-1, -1)],\n  [DiagonalDirections.DOWN_LEFT, new Vector(-1, 1)],\n]);\n"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,kBAAT,EAA6BC,UAA7B,QAA+C,kBAA/C;AACA,SAASC,8BAAT,QAA+C,cAA/C;AAGA,eAAe,MAAMC,MAAN,CAAa;EAO1BC,WAAWA,CAACC,CAAD,EAAYC,CAAZ,EAAuB;IAAAC,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAChC,KAAKF,CAAL,GAASA,CAAT;IACA,KAAKC,CAAL,GAASA,CAAT;IAEA,KAAKE,UAAL,GAAkBC,IAAI,CAACC,KAAL,CAAW,KAAKL,CAAhB,EAAmB,KAAKC,CAAxB,CAAlB;IACA,MAAMK,qBAAqB,GACzB,KAAKH,UAAL,GAAkBN,8BADpB;IAGA,KAAKU,KAAL,GAAaD,qBAAqB,GAAG,KAAKN,CAAL,GAAS,KAAKG,UAAjB,GAA8B,CAAhE;IACA,KAAKK,KAAL,GAAaF,qBAAqB,GAAG,KAAKL,CAAL,GAAS,KAAKE,UAAjB,GAA8B,CAAhE;EACD;EAEmB,OAAbM,aAAaA,CAACC,SAAD,EAAqD;IAAA,IAAAC,qBAAA;IACvE,QAAAA,qBAAA,GAAOC,yBAAyB,CAACC,GAA1B,CAA8BH,SAA9B,CAAP,cAAAC,qBAAA,cAAAA,qBAAA,GAAmD,IAAIb,MAAJ,CAAW,CAAX,EAAc,CAAd,CAAnD;EACD;EAEkB,OAAZgB,YAAYA,CAACC,OAAD,EAA0BC,SAA1B,EAA6C;IAC9D,MAAMC,QAAQ,GAAGF,OAAO,CAACG,WAAR,CAAoBF,SAApB,CAAjB;IACA,OAAO,IAAIlB,MAAJ,CAAWmB,QAAQ,CAACjB,CAApB,EAAuBiB,QAAQ,CAAChB,CAAhC,CAAP;EACD;EAEY,IAATkB,SAASA,CAAA,EAAG;IACd,OAAO,KAAKhB,UAAZ;EACD;EAEDiB,iBAAiBA,CAACC,MAAD,EAAiB;IAChC,OAAO,KAAKd,KAAL,GAAac,MAAM,CAACd,KAApB,GAA4B,KAAKC,KAAL,GAAaa,MAAM,CAACb,KAAvD;EACD;EAEDc,SAASA,CAACD,MAAD,EAAiBE,SAAjB,EAAoC;IAC3C,OAAO,KAAKH,iBAAL,CAAuBC,MAAvB,IAAiCE,SAAxC;EACD;AAtCyB;AAyC5B,MAAMX,yBAAyB,GAAG,IAAIY,GAAJ,CAGhC,CACA,CAAC5B,UAAU,CAAC6B,IAAZ,EAAkB,IAAI3B,MAAJ,CAAW,CAAC,CAAZ,EAAe,CAAf,CAAlB,CADA,EAEA,CAACF,UAAU,CAAC8B,KAAZ,EAAmB,IAAI5B,MAAJ,CAAW,CAAX,EAAc,CAAd,CAAnB,CAFA,EAGA,CAACF,UAAU,CAAC+B,EAAZ,EAAgB,IAAI7B,MAAJ,CAAW,CAAX,EAAc,CAAC,CAAf,CAAhB,CAHA,EAIA,CAACF,UAAU,CAACgC,IAAZ,EAAkB,IAAI9B,MAAJ,CAAW,CAAX,EAAc,CAAd,CAAlB,CAJA,EAMA,CAACH,kBAAkB,CAACkC,QAApB,EAA8B,IAAI/B,MAAJ,CAAW,CAAX,EAAc,CAAC,CAAf,CAA9B,CANA,EAOA,CAACH,kBAAkB,CAACmC,UAApB,EAAgC,IAAIhC,MAAJ,CAAW,CAAX,EAAc,CAAd,CAAhC,CAPA,EAQA,CAACH,kBAAkB,CAACoC,OAApB,EAA6B,IAAIjC,MAAJ,CAAW,CAAC,CAAZ,EAAe,CAAC,CAAhB,CAA7B,CARA,EASA,CAACH,kBAAkB,CAACqC,SAApB,EAA+B,IAAIlC,MAAJ,CAAW,CAAC,CAAZ,EAAe,CAAf,CAA/B,CATA,CAHgC,CAAlC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}