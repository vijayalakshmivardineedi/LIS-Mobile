{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axiosInstance from '../../../../Security/helpers/axios';\nexport const fetchNotices = createAsyncThunk('notices/fetchNotices', async societyId => {\n  console.log(\"Thunk started\");\n  try {\n    if (societyId) {\n      const response = await axiosInstance.get(`http://192.168.29.226:2000/api/getAllNotice/${societyId}`);\n      console.log(\"soxciety\", response.data);\n      return response.data;\n    }\n  } catch (error) {\n    console.error(\"API call failed:\", error);\n    throw error;\n  }\n});\nconst noticeSlice = createSlice({\n  name: 'notices',\n  initialState: {\n    notices: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchNotices.pending, state => {\n      console.log(\"Fetching notices...\");\n      state.status = 'loading';\n    }).addCase(fetchNotices.fulfilled, (state, action) => {\n      console.log(\"Notices fetched:\", action.payload);\n      state.status = 'succeeded';\n      state.notices = action.payload;\n    }).addCase(fetchNotices.rejected, (state, action) => {\n      console.error(\"Failed to fetch notices:\", action.error.message);\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport const selectNotices = state => state.notices.notices;\nexport const selectLoading = state => state.notices.loading;\nexport const selectError = state => state.notices.error;\nexport default noticeSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axiosInstance","fetchNotices","societyId","console","log","response","get","data","error","noticeSlice","name","initialState","notices","status","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","selectNotices","selectLoading","loading","selectError","reducer"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/src/panel/User/Redux/Slice/Security_Panel/NoticeSlice.js"],"sourcesContent":["// noticeSlice.js\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axiosInstance from '../../../../Security/helpers/axios';\n\nexport const fetchNotices = createAsyncThunk('notices/fetchNotices', async (societyId) => {\n  console.log(\"Thunk started\"); // Add this to confirm the thunk is called\n  try {\n    if (societyId) {\n      const response = await axiosInstance.get(`http://192.168.29.226:2000/api/getAllNotice/${societyId}`);\n      console.log(\"soxciety\", response.data); // Add this to check response\n      return response.data;\n    }\n  } catch (error) {\n    console.error(\"API call failed:\", error); // Log error for more context\n    throw error;\n  }\n});\n\nconst noticeSlice = createSlice({\n  name: 'notices',\n  initialState: {\n    notices: [],\n    status: 'idle',\n    error: null,\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchNotices.pending, (state) => {\n        console.log(\"Fetching notices...\"); // To confirm pending state is hit\n        state.status = 'loading';\n      })\n      .addCase(fetchNotices.fulfilled, (state, action) => {\n        console.log(\"Notices fetched:\", action.payload); \n        state.status = 'succeeded';\n        state.notices = action.payload;\n      })\n      .addCase(fetchNotices.rejected, (state, action) => {\n        console.error(\"Failed to fetch notices:\", action.error.message); // Log error for debugging\n        state.status = 'failed';\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport const selectNotices = (state) => state.notices.notices;\nexport const selectLoading = (state) => state.notices.loading;\nexport const selectError = (state) => state.notices.error;\n\nexport default noticeSlice.reducer;\n"],"mappings":"AACA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,aAAa,MAAM,oCAAoC;AAE9D,OAAO,MAAMC,YAAY,GAAGF,gBAAgB,CAAC,sBAAsB,EAAE,MAAOG,SAAS,IAAK;EACxFC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAC5B,IAAI;IACF,IAAIF,SAAS,EAAE;MACb,MAAMG,QAAQ,GAAG,MAAML,aAAa,CAACM,GAAG,CAAC,+CAA+CJ,SAAS,EAAE,CAAC;MACpGC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEC,QAAQ,CAACE,IAAI,CAAC;MACtC,OAAOF,QAAQ,CAACE,IAAI;IACtB;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IACxC,MAAMA,KAAK;EACb;AACF,CAAC,CAAC;AAEF,MAAMC,WAAW,GAAGX,WAAW,CAAC;EAC9BY,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACZC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE,MAAM;IACdL,KAAK,EAAE;EACT,CAAC;EACDM,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAChB,YAAY,CAACiB,OAAO,EAAGC,KAAK,IAAK;MACxChB,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClCe,KAAK,CAACN,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDI,OAAO,CAAChB,YAAY,CAACmB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAClDlB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEiB,MAAM,CAACC,OAAO,CAAC;MAC/CH,KAAK,CAACN,MAAM,GAAG,WAAW;MAC1BM,KAAK,CAACP,OAAO,GAAGS,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC,CACDL,OAAO,CAAChB,YAAY,CAACsB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACjDlB,OAAO,CAACK,KAAK,CAAC,0BAA0B,EAAEa,MAAM,CAACb,KAAK,CAACgB,OAAO,CAAC;MAC/DL,KAAK,CAACN,MAAM,GAAG,QAAQ;MACvBM,KAAK,CAACX,KAAK,GAAGa,MAAM,CAACb,KAAK,CAACgB,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,aAAa,GAAIN,KAAK,IAAKA,KAAK,CAACP,OAAO,CAACA,OAAO;AAC7D,OAAO,MAAMc,aAAa,GAAIP,KAAK,IAAKA,KAAK,CAACP,OAAO,CAACe,OAAO;AAC7D,OAAO,MAAMC,WAAW,GAAIT,KAAK,IAAKA,KAAK,CAACP,OAAO,CAACJ,KAAK;AAEzD,eAAeC,WAAW,CAACoB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}