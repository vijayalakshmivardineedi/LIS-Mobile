{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nconst _excluded = [\"testOnly_pressed\", \"hitSlop\", \"pressRetentionOffset\", \"delayHoverIn\", \"onHoverIn\", \"delayHoverOut\", \"onHoverOut\", \"delayLongPress\", \"unstable_pressDelay\", \"onPress\", \"onPressIn\", \"onPressOut\", \"onLongPress\", \"style\", \"children\", \"android_disableSound\", \"android_ripple\", \"disabled\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { useCallback, useMemo, useRef, useState } from 'react';\nimport { GestureObjects as Gesture } from '../../handlers/gestures/gestureObjects';\nimport { GestureDetector } from '../../handlers/gestures/GestureDetector';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport processColor from \"react-native-web/dist/exports/processColor\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport NativeButton from '../GestureHandlerButton';\nimport { numberAsInset, gestureToPressableEvent, isTouchWithinInset, gestureTouchToPressableEvent, addInsets, splitStyles } from './utils';\nimport { PressabilityDebugView } from '../../handlers/PressabilityDebugView';\nimport { INT32_MAX } from '../../utils';\nconst DEFAULT_LONG_PRESS_DURATION = 500;\nconst _worklet_4387546001157_init_data = {\n  code: \"function PressableJs1(event){const{hoverOutTimeout,clearTimeout,delayHoverIn,hoverInTimeout,setTimeout,onHoverIn,gestureToPressableEvent}=this.__closure;if(hoverOutTimeout.current){clearTimeout(hoverOutTimeout.current);}if(delayHoverIn){hoverInTimeout.current=setTimeout(function(){return onHoverIn===null||onHoverIn===void 0?void 0:onHoverIn(gestureToPressableEvent(event));},delayHoverIn);return;}onHoverIn===null||onHoverIn===void 0?void 0:onHoverIn(gestureToPressableEvent(event));}\",\n  location: \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\components\\\\Pressable\\\\Pressable.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"PressableJs1\\\",\\\"event\\\",\\\"hoverOutTimeout\\\",\\\"clearTimeout\\\",\\\"delayHoverIn\\\",\\\"hoverInTimeout\\\",\\\"setTimeout\\\",\\\"onHoverIn\\\",\\\"gestureToPressableEvent\\\",\\\"__closure\\\",\\\"current\\\"],\\\"sources\\\":[\\\"C:/Users/user/OneDrive/Documents/rn/l/node_modules/react-native-gesture-handler/lib/module/components/Pressable/Pressable.js\\\"],\\\"mappings\\\":\\\"AA8CuC,SAAAA,YAASA,CAAAC,KAAA,QAAAC,eAAA,CAAAC,YAAA,CAAAC,YAAA,CAAAC,cAAA,CAAAC,UAAA,CAAAC,SAAA,CAAAC,uBAAA,OAAAC,SAAA,CAC5C,GAAIP,eAAe,CAACQ,OAAO,CAAE,CAC3BP,YAAY,CAACD,eAAe,CAACQ,OAAO,CAAC,CACvC,CAEA,GAAIN,YAAY,CAAE,CAChBC,cAAc,CAACK,OAAO,CAAGJ,UAAU,CAAC,iBAAM,CAAAC,SAAS,GAAK,IAAI,EAAIA,SAAS,GAAK,IAAK,EAAC,CAAG,IAAK,EAAC,CAAGA,SAAS,CAACC,uBAAuB,CAACP,KAAK,CAAC,CAAC,GAAEG,YAAY,CAAC,CACxJ,OACF,CAEAG,SAAS,GAAK,IAAI,EAAIA,SAAS,GAAK,IAAK,EAAC,CAAG,IAAK,EAAC,CAAGA,SAAS,CAACC,uBAAuB,CAACP,KAAK,CAAC,CAAC,CACjG\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.15.1\"\n};\nconst _worklet_12194516910159_init_data = {\n  code: \"function PressableJs2(event){const{hoverInTimeout,clearTimeout,delayHoverOut,hoverOutTimeout,setTimeout,onHoverOut,gestureToPressableEvent}=this.__closure;if(hoverInTimeout.current){clearTimeout(hoverInTimeout.current);}if(delayHoverOut){hoverOutTimeout.current=setTimeout(function(){return onHoverOut===null||onHoverOut===void 0?void 0:onHoverOut(gestureToPressableEvent(event));},delayHoverOut);return;}onHoverOut===null||onHoverOut===void 0?void 0:onHoverOut(gestureToPressableEvent(event));}\",\n  location: \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\components\\\\Pressable\\\\Pressable.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"PressableJs2\\\",\\\"event\\\",\\\"hoverInTimeout\\\",\\\"clearTimeout\\\",\\\"delayHoverOut\\\",\\\"hoverOutTimeout\\\",\\\"setTimeout\\\",\\\"onHoverOut\\\",\\\"gestureToPressableEvent\\\",\\\"__closure\\\",\\\"current\\\"],\\\"sources\\\":[\\\"C:/Users/user/OneDrive/Documents/rn/l/node_modules/react-native-gesture-handler/lib/module/components/Pressable/Pressable.js\\\"],\\\"mappings\\\":\\\"AAyDgB,SAAAA,YAASA,CAAAC,KAAA,QAAAC,cAAA,CAAAC,YAAA,CAAAC,aAAA,CAAAC,eAAA,CAAAC,UAAA,CAAAC,UAAA,CAAAC,uBAAA,OAAAC,SAAA,CACrB,GAAIP,cAAc,CAACQ,OAAO,CAAE,CAC1BP,YAAY,CAACD,cAAc,CAACQ,OAAO,CAAC,CACtC,CAEA,GAAIN,aAAa,CAAE,CACjBC,eAAe,CAACK,OAAO,CAAGJ,UAAU,CAAC,iBAAM,CAAAC,UAAU,GAAK,IAAI,EAAIA,UAAU,GAAK,IAAK,EAAC,CAAG,IAAK,EAAC,CAAGA,UAAU,CAACC,uBAAuB,CAACP,KAAK,CAAC,CAAC,GAAEG,aAAa,CAAC,CAC7J,OACF,CAEAG,UAAU,GAAK,IAAI,EAAIA,UAAU,GAAK,IAAK,EAAC,CAAG,IAAK,EAAC,CAAGA,UAAU,CAACC,uBAAuB,CAACP,KAAK,CAAC,CAAC,CACpG\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.15.1\"\n};\nconst _worklet_3943879060407_init_data = {\n  code: \"function PressableJs3(event){const{handlingOnTouchesDown,pressableRef,isTouchWithinInset,normalizedHitSlop,hasPassedBoundsChecks,cancelledMidPress,onEndHandlingTouchesDown,longPressTimeoutRef,setTimeout,activateLongPress,longPressMinDuration,unstable_pressDelay,pressDelayTimeoutRef,pressInHandler,gestureTouchToPressableEvent}=this.__closure;var _pressableRef$current;handlingOnTouchesDown.current=true;(_pressableRef$current=pressableRef.current)===null||_pressableRef$current===void 0?void 0:_pressableRef$current.measure(function(_x,_y,width,height){var _onEndHandlingTouches;if(!isTouchWithinInset({width:width,height:height},normalizedHitSlop,event.changedTouches.at(-1))||hasPassedBoundsChecks.current||cancelledMidPress.current){cancelledMidPress.current=false;onEndHandlingTouchesDown.current=null;handlingOnTouchesDown.current=false;return;}hasPassedBoundsChecks.current=true;if(longPressTimeoutRef.current===null){longPressTimeoutRef.current=setTimeout(function(){return activateLongPress(event);},longPressMinDuration);}if(unstable_pressDelay){pressDelayTimeoutRef.current=setTimeout(function(){pressInHandler(gestureTouchToPressableEvent(event));},unstable_pressDelay);}else{pressInHandler(gestureTouchToPressableEvent(event));}(_onEndHandlingTouches=onEndHandlingTouchesDown.current)===null||_onEndHandlingTouches===void 0?void 0:_onEndHandlingTouches.call(onEndHandlingTouchesDown);onEndHandlingTouchesDown.current=null;handlingOnTouchesDown.current=false;});}\",\n  location: \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\components\\\\Pressable\\\\Pressable.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"PressableJs3\\\",\\\"event\\\",\\\"handlingOnTouchesDown\\\",\\\"pressableRef\\\",\\\"isTouchWithinInset\\\",\\\"normalizedHitSlop\\\",\\\"hasPassedBoundsChecks\\\",\\\"cancelledMidPress\\\",\\\"onEndHandlingTouchesDown\\\",\\\"longPressTimeoutRef\\\",\\\"setTimeout\\\",\\\"activateLongPress\\\",\\\"longPressMinDuration\\\",\\\"unstable_pressDelay\\\",\\\"pressDelayTimeoutRef\\\",\\\"pressInHandler\\\",\\\"gestureTouchToPressableEvent\\\",\\\"__closure\\\",\\\"_pressableRef$current\\\",\\\"current\\\",\\\"measure\\\",\\\"_x\\\",\\\"_y\\\",\\\"width\\\",\\\"height\\\",\\\"_onEndHandlingTouches\\\",\\\"changedTouches\\\",\\\"at\\\",\\\"call\\\"],\\\"sources\\\":[\\\"C:/Users/user/OneDrive/Documents/rn/l/node_modules/react-native-gesture-handler/lib/module/components/Pressable/Pressable.js\\\"],\\\"mappings\\\":\\\"AAgJ6C,SAAAA,YAASA,CAAAC,KAAA,QAAAC,qBAAA,CAAAC,YAAA,CAAAC,kBAAA,CAAAC,iBAAA,CAAAC,qBAAA,CAAAC,iBAAA,CAAAC,wBAAA,CAAAC,mBAAA,CAAAC,UAAA,CAAAC,iBAAA,CAAAC,oBAAA,CAAAC,mBAAA,CAAAC,oBAAA,CAAAC,cAAA,CAAAC,4BAAA,OAAAC,SAAA,CAClD,GAAI,CAAAC,qBAAqB,CAEzBhB,qBAAqB,CAACiB,OAAO,CAAG,IAAI,CACpC,CAACD,qBAAqB,CAAGf,YAAY,CAACgB,OAAO,IAAM,IAAI,EAAID,qBAAqB,GAAK,IAAK,EAAC,CAAG,IAAK,EAAC,CAAGA,qBAAqB,CAACE,OAAO,CAAC,SAACC,EAAE,CAAEC,EAAE,CAAEC,KAAK,CAAEC,MAAM,CAAK,CAC9J,GAAI,CAAAC,qBAAqB,CAEzB,GAAI,CAACrB,kBAAkB,CAAC,CACtBmB,KAAK,CAALA,KAAK,CACLC,MAAA,CAAAA,MACF,CAAC,CAAEnB,iBAAiB,CAAEJ,KAAK,CAACyB,cAAc,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAIrB,qBAAqB,CAACa,OAAO,EAAIZ,iBAAiB,CAACY,OAAO,CAAE,CAChHZ,iBAAiB,CAACY,OAAO,CAAG,KAAK,CACjCX,wBAAwB,CAACW,OAAO,CAAG,IAAI,CACvCjB,qBAAqB,CAACiB,OAAO,CAAG,KAAK,CACrC,OACF,CAEAb,qBAAqB,CAACa,OAAO,CAAG,IAAI,CAEpC,GAAIV,mBAAmB,CAACU,OAAO,GAAK,IAAI,CAAE,CAExCV,mBAAmB,CAACU,OAAO,CAAGT,UAAU,CAAC,iBAAM,CAAAC,iBAAiB,CAACV,KAAK,CAAC,GAAEW,oBAAoB,CAAC,CAChG,CAEA,GAAIC,mBAAmB,CAAE,CACvBC,oBAAoB,CAACK,OAAO,CAAGT,UAAU,CAAC,UAAM,CAC9CK,cAAc,CAACC,4BAA4B,CAACf,KAAK,CAAC,CAAC,CACrD,CAAC,CAAEY,mBAAmB,CAAC,CACzB,CAAC,IAAM,CACLE,cAAc,CAACC,4BAA4B,CAACf,KAAK,CAAC,CAAC,CACrD,CAEA,CAACwB,qBAAqB,CAAGjB,wBAAwB,CAACW,OAAO,IAAM,IAAI,EAAIM,qBAAqB,GAAK,IAAK,EAAC,CAAG,IAAK,EAAC,CAAGA,qBAAqB,CAACG,IAAI,CAACpB,wBAAwB,CAAC,CACvKA,wBAAwB,CAACW,OAAO,CAAG,IAAI,CACvCjB,qBAAqB,CAACiB,OAAO,CAAG,KAAK,CACvC,CAAC,CAAC,CACJ\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.15.1\"\n};\nconst _worklet_12163056180453_init_data = {\n  code: \"function PressableJs4(event){const{handlingOnTouchesDown,onEndHandlingTouchesDown,pressOutHandler,gestureTouchToPressableEvent,deferredEventPayload,shouldPreventNativeEffects}=this.__closure;if(handlingOnTouchesDown.current){onEndHandlingTouchesDown.current=function(){return pressOutHandler(gestureTouchToPressableEvent(event));};return;}if(deferredEventPayload.current!==null){shouldPreventNativeEffects.current=true;}pressOutHandler(gestureTouchToPressableEvent(event));}\",\n  location: \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\components\\\\Pressable\\\\Pressable.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"PressableJs4\\\",\\\"event\\\",\\\"handlingOnTouchesDown\\\",\\\"onEndHandlingTouchesDown\\\",\\\"pressOutHandler\\\",\\\"gestureTouchToPressableEvent\\\",\\\"deferredEventPayload\\\",\\\"shouldPreventNativeEffects\\\",\\\"__closure\\\",\\\"current\\\"],\\\"sources\\\":[\\\"C:/Users/user/OneDrive/Documents/rn/l/node_modules/react-native-gesture-handler/lib/module/components/Pressable/Pressable.js\\\"],\\\"mappings\\\":\\\"AAoLiB,SAAAA,YAASA,CAAAC,KAAA,QAAAC,qBAAA,CAAAC,wBAAA,CAAAC,eAAA,CAAAC,4BAAA,CAAAC,oBAAA,CAAAC,0BAAA,OAAAC,SAAA,CACtB,GAAIN,qBAAqB,CAACO,OAAO,CAAE,CACjCN,wBAAwB,CAACM,OAAO,CAAG,iBAAM,CAAAL,eAAe,CAACC,4BAA4B,CAACJ,KAAK,CAAC,CAAC,GAE7F,OACF,CAIA,GAAIK,oBAAoB,CAACG,OAAO,GAAK,IAAI,CAAE,CACzCF,0BAA0B,CAACE,OAAO,CAAG,IAAI,CAC3C,CAEAL,eAAe,CAACC,4BAA4B,CAACJ,KAAK,CAAC,CAAC,CACtD\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.15.1\"\n};\nconst _worklet_13230236304163_init_data = {\n  code: \"function PressableJs5(event){const{isPressCallbackEnabled,handlingOnTouchesDown,cancelledMidPress,onEndHandlingTouchesDown,pressOutHandler,gestureTouchToPressableEvent,hasPassedBoundsChecks}=this.__closure;isPressCallbackEnabled.current=false;if(handlingOnTouchesDown.current){cancelledMidPress.current=true;onEndHandlingTouchesDown.current=function(){return pressOutHandler(gestureTouchToPressableEvent(event));};return;}if(!hasPassedBoundsChecks.current||event.allTouches.length>event.changedTouches.length){return;}pressOutHandler(gestureTouchToPressableEvent(event));}\",\n  location: \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\components\\\\Pressable\\\\Pressable.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"PressableJs5\\\",\\\"event\\\",\\\"isPressCallbackEnabled\\\",\\\"handlingOnTouchesDown\\\",\\\"cancelledMidPress\\\",\\\"onEndHandlingTouchesDown\\\",\\\"pressOutHandler\\\",\\\"gestureTouchToPressableEvent\\\",\\\"hasPassedBoundsChecks\\\",\\\"__closure\\\",\\\"current\\\",\\\"allTouches\\\",\\\"length\\\",\\\"changedTouches\\\"],\\\"sources\\\":[\\\"C:/Users/user/OneDrive/Documents/rn/l/node_modules/react-native-gesture-handler/lib/module/components/Pressable/Pressable.js\\\"],\\\"mappings\\\":\\\"AAkMwB,SAAAA,YAASA,CAAAC,KAAA,QAAAC,sBAAA,CAAAC,qBAAA,CAAAC,iBAAA,CAAAC,wBAAA,CAAAC,eAAA,CAAAC,4BAAA,CAAAC,qBAAA,OAAAC,SAAA,CAC7BP,sBAAsB,CAACQ,OAAO,CAAG,KAAK,CAEtC,GAAIP,qBAAqB,CAACO,OAAO,CAAE,CACjCN,iBAAiB,CAACM,OAAO,CAAG,IAAI,CAEhCL,wBAAwB,CAACK,OAAO,CAAG,iBAAM,CAAAJ,eAAe,CAACC,4BAA4B,CAACN,KAAK,CAAC,CAAC,GAE7F,OACF,CAEA,GAAI,CAACO,qBAAqB,CAACE,OAAO,EAAIT,KAAK,CAACU,UAAU,CAACC,MAAM,CAAGX,KAAK,CAACY,cAAc,CAACD,MAAM,CAAE,CAC3F,OACF,CAEAN,eAAe,CAACC,4BAA4B,CAACN,KAAK,CAAC,CAAC,CACtD\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.15.1\"\n};\nconst _worklet_3162625198907_init_data = {\n  code: \"function PressableJs6(){const{Platform,isTouchPropagationAllowed}=this.__closure;if(Platform.OS==='android'){isTouchPropagationAllowed.current=true;}}\",\n  location: \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\components\\\\Pressable\\\\Pressable.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"PressableJs6\\\",\\\"Platform\\\",\\\"isTouchPropagationAllowed\\\",\\\"__closure\\\",\\\"OS\\\",\\\"current\\\"],\\\"sources\\\":[\\\"C:/Users/user/OneDrive/Documents/rn/l/node_modules/react-native-gesture-handler/lib/module/components/Pressable/Pressable.js\\\"],\\\"mappings\\\":\\\"AAoN+D,SAAAA,YAAMA,CAAA,QAAAC,QAAA,CAAAC,yBAAA,OAAAC,SAAA,CAEjE,GAAIF,QAAQ,CAACG,EAAE,GAAK,SAAS,CAAE,CAC7BF,yBAAyB,CAACG,OAAO,CAAG,IAAI,CAC1C,CACF\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.15.1\"\n};\nconst _worklet_989467555621_init_data = {\n  code: \"function PressableJs7(){const{Platform,isTouchPropagationAllowed,deferredEventPayload,hasPassedBoundsChecks,pressInHandler,pressOutHandler,shouldPreventNativeEffects}=this.__closure;if(Platform.OS==='web'){isTouchPropagationAllowed.current=true;}if(Platform.OS!=='ios'){return;}if(deferredEventPayload.current){isTouchPropagationAllowed.current=true;if(hasPassedBoundsChecks.current){pressInHandler(deferredEventPayload.current);deferredEventPayload.current=null;}else{pressOutHandler(deferredEventPayload.current);isTouchPropagationAllowed.current=false;}return;}if(hasPassedBoundsChecks.current){isTouchPropagationAllowed.current=true;return;}if(shouldPreventNativeEffects.current){shouldPreventNativeEffects.current=false;return;}isTouchPropagationAllowed.current=true;}\",\n  location: \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\components\\\\Pressable\\\\Pressable.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"PressableJs7\\\",\\\"Platform\\\",\\\"isTouchPropagationAllowed\\\",\\\"deferredEventPayload\\\",\\\"hasPassedBoundsChecks\\\",\\\"pressInHandler\\\",\\\"pressOutHandler\\\",\\\"shouldPreventNativeEffects\\\",\\\"__closure\\\",\\\"OS\\\",\\\"current\\\"],\\\"sources\\\":[\\\"C:/Users/user/OneDrive/Documents/rn/l/node_modules/react-native-gesture-handler/lib/module/components/Pressable/Pressable.js\\\"],\\\"mappings\\\":\\\"AAyNa,SAAAA,YAAMA,CAAA,QAAAC,QAAA,CAAAC,yBAAA,CAAAC,oBAAA,CAAAC,qBAAA,CAAAC,cAAA,CAAAC,eAAA,CAAAC,0BAAA,OAAAC,SAAA,CACf,GAAIP,QAAQ,CAACQ,EAAE,GAAK,KAAK,CAAE,CACzBP,yBAAyB,CAACQ,OAAO,CAAG,IAAI,CAC1C,CAGA,GAAIT,QAAQ,CAACQ,EAAE,GAAK,KAAK,CAAE,CACzB,OACF,CAEA,GAAIN,oBAAoB,CAACO,OAAO,CAAE,CAChCR,yBAAyB,CAACQ,OAAO,CAAG,IAAI,CAExC,GAAIN,qBAAqB,CAACM,OAAO,CAAE,CACjCL,cAAc,CAACF,oBAAoB,CAACO,OAAO,CAAC,CAC5CP,oBAAoB,CAACO,OAAO,CAAG,IAAI,CACrC,CAAC,IAAM,CACLJ,eAAe,CAACH,oBAAoB,CAACO,OAAO,CAAC,CAC7CR,yBAAyB,CAACQ,OAAO,CAAG,KAAK,CAC3C,CAEA,OACF,CAEA,GAAIN,qBAAqB,CAACM,OAAO,CAAE,CACjCR,yBAAyB,CAACQ,OAAO,CAAG,IAAI,CACxC,OACF,CAEA,GAAIH,0BAA0B,CAACG,OAAO,CAAE,CACtCH,0BAA0B,CAACG,OAAO,CAAG,KAAK,CAC1C,OACF,CAEAR,yBAAyB,CAACQ,OAAO,CAAG,IAAI,CAC1C\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.15.1\"\n};\nexport default function Pressable(props) {\n  var _android_ripple$color, _android_ripple$radiu;\n  const {\n      testOnly_pressed,\n      hitSlop,\n      pressRetentionOffset,\n      delayHoverIn,\n      onHoverIn,\n      delayHoverOut,\n      onHoverOut,\n      delayLongPress,\n      unstable_pressDelay,\n      onPress,\n      onPressIn,\n      onPressOut,\n      onLongPress,\n      style,\n      children,\n      android_disableSound,\n      android_ripple,\n      disabled\n    } = props,\n    remainingProps = _objectWithoutPropertiesLoose(props, _excluded);\n  const [pressedState, setPressedState] = useState(testOnly_pressed !== null && testOnly_pressed !== void 0 ? testOnly_pressed : false);\n  const pressableRef = useRef(null);\n  const isPressCallbackEnabled = useRef(true);\n  const hasPassedBoundsChecks = useRef(false);\n  const shouldPreventNativeEffects = useRef(false);\n  const normalizedHitSlop = useMemo(() => typeof hitSlop === 'number' ? numberAsInset(hitSlop) : hitSlop !== null && hitSlop !== void 0 ? hitSlop : {}, [hitSlop]);\n  const normalizedPressRetentionOffset = useMemo(() => typeof pressRetentionOffset === 'number' ? numberAsInset(pressRetentionOffset) : pressRetentionOffset !== null && pressRetentionOffset !== void 0 ? pressRetentionOffset : {}, [pressRetentionOffset]);\n  const hoverInTimeout = useRef(null);\n  const hoverOutTimeout = useRef(null);\n  const hoverGesture = useMemo(() => Gesture.Hover().manualActivation(true).cancelsTouchesInView(false).onBegin(function () {\n    const _e = [new global.Error(), -8, -27];\n    const PressableJs1 = function (event) {\n      if (hoverOutTimeout.current) {\n        clearTimeout(hoverOutTimeout.current);\n      }\n      if (delayHoverIn) {\n        hoverInTimeout.current = setTimeout(() => onHoverIn === null || onHoverIn === void 0 ? void 0 : onHoverIn(gestureToPressableEvent(event)), delayHoverIn);\n        return;\n      }\n      onHoverIn === null || onHoverIn === void 0 ? void 0 : onHoverIn(gestureToPressableEvent(event));\n    };\n    PressableJs1.__closure = {\n      hoverOutTimeout,\n      clearTimeout,\n      delayHoverIn,\n      hoverInTimeout,\n      setTimeout,\n      onHoverIn,\n      gestureToPressableEvent\n    };\n    PressableJs1.__workletHash = 4387546001157;\n    PressableJs1.__initData = _worklet_4387546001157_init_data;\n    PressableJs1.__stackDetails = _e;\n    return PressableJs1;\n  }()).onFinalize(function () {\n    const _e = [new global.Error(), -8, -27];\n    const PressableJs2 = function (event) {\n      if (hoverInTimeout.current) {\n        clearTimeout(hoverInTimeout.current);\n      }\n      if (delayHoverOut) {\n        hoverOutTimeout.current = setTimeout(() => onHoverOut === null || onHoverOut === void 0 ? void 0 : onHoverOut(gestureToPressableEvent(event)), delayHoverOut);\n        return;\n      }\n      onHoverOut === null || onHoverOut === void 0 ? void 0 : onHoverOut(gestureToPressableEvent(event));\n    };\n    PressableJs2.__closure = {\n      hoverInTimeout,\n      clearTimeout,\n      delayHoverOut,\n      hoverOutTimeout,\n      setTimeout,\n      onHoverOut,\n      gestureToPressableEvent\n    };\n    PressableJs2.__workletHash = 12194516910159;\n    PressableJs2.__initData = _worklet_12194516910159_init_data;\n    PressableJs2.__stackDetails = _e;\n    return PressableJs2;\n  }()), [delayHoverIn, delayHoverOut, onHoverIn, onHoverOut]);\n  const pressDelayTimeoutRef = useRef(null);\n  const isTouchPropagationAllowed = useRef(false);\n  const deferredEventPayload = useRef(null);\n  const pressInHandler = useCallback(event => {\n    if (handlingOnTouchesDown.current) {\n      deferredEventPayload.current = event;\n    }\n    if (!isTouchPropagationAllowed.current) {\n      return;\n    }\n    deferredEventPayload.current = null;\n    onPressIn === null || onPressIn === void 0 ? void 0 : onPressIn(event);\n    isPressCallbackEnabled.current = true;\n    pressDelayTimeoutRef.current = null;\n    setPressedState(true);\n  }, [onPressIn]);\n  const pressOutHandler = useCallback(event => {\n    if (!hasPassedBoundsChecks.current || event.nativeEvent.touches.length > event.nativeEvent.changedTouches.length) {\n      return;\n    }\n    if (unstable_pressDelay && pressDelayTimeoutRef.current !== null) {\n      clearTimeout(pressDelayTimeoutRef.current);\n      pressInHandler(event);\n    }\n    if (deferredEventPayload.current) {\n      onPressIn === null || onPressIn === void 0 ? void 0 : onPressIn(deferredEventPayload.current);\n      deferredEventPayload.current = null;\n    }\n    onPressOut === null || onPressOut === void 0 ? void 0 : onPressOut(event);\n    if (isPressCallbackEnabled.current) {\n      onPress === null || onPress === void 0 ? void 0 : onPress(event);\n    }\n    if (longPressTimeoutRef.current) {\n      clearTimeout(longPressTimeoutRef.current);\n      longPressTimeoutRef.current = null;\n    }\n    isTouchPropagationAllowed.current = false;\n    hasPassedBoundsChecks.current = false;\n    isPressCallbackEnabled.current = true;\n    setPressedState(false);\n  }, [onPress, onPressIn, onPressOut, pressInHandler, unstable_pressDelay]);\n  const handlingOnTouchesDown = useRef(false);\n  const onEndHandlingTouchesDown = useRef(null);\n  const cancelledMidPress = useRef(false);\n  const activateLongPress = useCallback(event => {\n    if (!isTouchPropagationAllowed.current) {\n      return;\n    }\n    if (hasPassedBoundsChecks.current) {\n      onLongPress === null || onLongPress === void 0 ? void 0 : onLongPress(gestureTouchToPressableEvent(event));\n      isPressCallbackEnabled.current = false;\n    }\n    if (longPressTimeoutRef.current) {\n      clearTimeout(longPressTimeoutRef.current);\n      longPressTimeoutRef.current = null;\n    }\n  }, [onLongPress]);\n  const longPressTimeoutRef = useRef(null);\n  const longPressMinDuration = (delayLongPress !== null && delayLongPress !== void 0 ? delayLongPress : DEFAULT_LONG_PRESS_DURATION) + (unstable_pressDelay !== null && unstable_pressDelay !== void 0 ? unstable_pressDelay : 0);\n  const pressAndTouchGesture = useMemo(() => Gesture.LongPress().minDuration(INT32_MAX).maxDistance(INT32_MAX).cancelsTouchesInView(false).onTouchesDown(function () {\n    const _e = [new global.Error(), -16, -27];\n    const PressableJs3 = function (event) {\n      var _pressableRef$current;\n      handlingOnTouchesDown.current = true;\n      (_pressableRef$current = pressableRef.current) === null || _pressableRef$current === void 0 ? void 0 : _pressableRef$current.measure((_x, _y, width, height) => {\n        var _onEndHandlingTouches;\n        if (!isTouchWithinInset({\n          width,\n          height\n        }, normalizedHitSlop, event.changedTouches.at(-1)) || hasPassedBoundsChecks.current || cancelledMidPress.current) {\n          cancelledMidPress.current = false;\n          onEndHandlingTouchesDown.current = null;\n          handlingOnTouchesDown.current = false;\n          return;\n        }\n        hasPassedBoundsChecks.current = true;\n        if (longPressTimeoutRef.current === null) {\n          longPressTimeoutRef.current = setTimeout(() => activateLongPress(event), longPressMinDuration);\n        }\n        if (unstable_pressDelay) {\n          pressDelayTimeoutRef.current = setTimeout(() => {\n            pressInHandler(gestureTouchToPressableEvent(event));\n          }, unstable_pressDelay);\n        } else {\n          pressInHandler(gestureTouchToPressableEvent(event));\n        }\n        (_onEndHandlingTouches = onEndHandlingTouchesDown.current) === null || _onEndHandlingTouches === void 0 ? void 0 : _onEndHandlingTouches.call(onEndHandlingTouchesDown);\n        onEndHandlingTouchesDown.current = null;\n        handlingOnTouchesDown.current = false;\n      });\n    };\n    PressableJs3.__closure = {\n      handlingOnTouchesDown,\n      pressableRef,\n      isTouchWithinInset,\n      normalizedHitSlop,\n      hasPassedBoundsChecks,\n      cancelledMidPress,\n      onEndHandlingTouchesDown,\n      longPressTimeoutRef,\n      setTimeout,\n      activateLongPress,\n      longPressMinDuration,\n      unstable_pressDelay,\n      pressDelayTimeoutRef,\n      pressInHandler,\n      gestureTouchToPressableEvent\n    };\n    PressableJs3.__workletHash = 3943879060407;\n    PressableJs3.__initData = _worklet_3943879060407_init_data;\n    PressableJs3.__stackDetails = _e;\n    return PressableJs3;\n  }()).onTouchesUp(function () {\n    const _e = [new global.Error(), -7, -27];\n    const PressableJs4 = function (event) {\n      if (handlingOnTouchesDown.current) {\n        onEndHandlingTouchesDown.current = () => pressOutHandler(gestureTouchToPressableEvent(event));\n        return;\n      }\n      if (deferredEventPayload.current !== null) {\n        shouldPreventNativeEffects.current = true;\n      }\n      pressOutHandler(gestureTouchToPressableEvent(event));\n    };\n    PressableJs4.__closure = {\n      handlingOnTouchesDown,\n      onEndHandlingTouchesDown,\n      pressOutHandler,\n      gestureTouchToPressableEvent,\n      deferredEventPayload,\n      shouldPreventNativeEffects\n    };\n    PressableJs4.__workletHash = 12163056180453;\n    PressableJs4.__initData = _worklet_12163056180453_init_data;\n    PressableJs4.__stackDetails = _e;\n    return PressableJs4;\n  }()).onTouchesCancelled(function () {\n    const _e = [new global.Error(), -8, -27];\n    const PressableJs5 = function (event) {\n      isPressCallbackEnabled.current = false;\n      if (handlingOnTouchesDown.current) {\n        cancelledMidPress.current = true;\n        onEndHandlingTouchesDown.current = () => pressOutHandler(gestureTouchToPressableEvent(event));\n        return;\n      }\n      if (!hasPassedBoundsChecks.current || event.allTouches.length > event.changedTouches.length) {\n        return;\n      }\n      pressOutHandler(gestureTouchToPressableEvent(event));\n    };\n    PressableJs5.__closure = {\n      isPressCallbackEnabled,\n      handlingOnTouchesDown,\n      cancelledMidPress,\n      onEndHandlingTouchesDown,\n      pressOutHandler,\n      gestureTouchToPressableEvent,\n      hasPassedBoundsChecks\n    };\n    PressableJs5.__workletHash = 13230236304163;\n    PressableJs5.__initData = _worklet_13230236304163_init_data;\n    PressableJs5.__stackDetails = _e;\n    return PressableJs5;\n  }()), [activateLongPress, longPressMinDuration, normalizedHitSlop, pressInHandler, pressOutHandler, unstable_pressDelay]);\n  const buttonGesture = useMemo(() => Gesture.Native().onBegin(function () {\n    const _e = [new global.Error(), -3, -27];\n    const PressableJs6 = function () {\n      if (Platform.OS === 'android') {\n        isTouchPropagationAllowed.current = true;\n      }\n    };\n    PressableJs6.__closure = {\n      Platform,\n      isTouchPropagationAllowed\n    };\n    PressableJs6.__workletHash = 3162625198907;\n    PressableJs6.__initData = _worklet_3162625198907_init_data;\n    PressableJs6.__stackDetails = _e;\n    return PressableJs6;\n  }()).onStart(function () {\n    const _e = [new global.Error(), -8, -27];\n    const PressableJs7 = function () {\n      if (Platform.OS === 'web') {\n        isTouchPropagationAllowed.current = true;\n      }\n      if (Platform.OS !== 'ios') {\n        return;\n      }\n      if (deferredEventPayload.current) {\n        isTouchPropagationAllowed.current = true;\n        if (hasPassedBoundsChecks.current) {\n          pressInHandler(deferredEventPayload.current);\n          deferredEventPayload.current = null;\n        } else {\n          pressOutHandler(deferredEventPayload.current);\n          isTouchPropagationAllowed.current = false;\n        }\n        return;\n      }\n      if (hasPassedBoundsChecks.current) {\n        isTouchPropagationAllowed.current = true;\n        return;\n      }\n      if (shouldPreventNativeEffects.current) {\n        shouldPreventNativeEffects.current = false;\n        return;\n      }\n      isTouchPropagationAllowed.current = true;\n    };\n    PressableJs7.__closure = {\n      Platform,\n      isTouchPropagationAllowed,\n      deferredEventPayload,\n      hasPassedBoundsChecks,\n      pressInHandler,\n      pressOutHandler,\n      shouldPreventNativeEffects\n    };\n    PressableJs7.__workletHash = 989467555621;\n    PressableJs7.__initData = _worklet_989467555621_init_data;\n    PressableJs7.__stackDetails = _e;\n    return PressableJs7;\n  }()), [pressInHandler, pressOutHandler]);\n  const appliedHitSlop = addInsets(normalizedHitSlop, normalizedPressRetentionOffset);\n  const isPressableEnabled = disabled !== true;\n  const gestures = [pressAndTouchGesture, hoverGesture, buttonGesture];\n  for (const gesture of gestures) {\n    gesture.enabled(isPressableEnabled);\n    gesture.runOnJS(true);\n    gesture.hitSlop(appliedHitSlop);\n    gesture.shouldCancelWhenOutside(false);\n    if (Platform.OS !== 'web') {\n      gesture.shouldCancelWhenOutside(true);\n    }\n  }\n  buttonGesture.hitSlop(normalizedHitSlop);\n  const gesture = Gesture.Simultaneous(...gestures);\n  const defaultRippleColor = android_ripple ? undefined : 'transparent';\n  const pointerStyle = Platform.OS === 'web' ? {\n    cursor: 'pointer'\n  } : {};\n  const styleProp = typeof style === 'function' ? style({\n    pressed: pressedState\n  }) : style;\n  const childrenProp = typeof children === 'function' ? children({\n    pressed: pressedState\n  }) : children;\n  const flattenedStyles = StyleSheet.flatten(styleProp !== null && styleProp !== void 0 ? styleProp : {});\n  const [innerStyles, outerStyles] = splitStyles(flattenedStyles);\n  return React.createElement(View, _extends({}, remainingProps, {\n    style: outerStyles\n  }), React.createElement(GestureDetector, {\n    gesture: gesture\n  }, React.createElement(NativeButton, {\n    ref: pressableRef,\n    hitSlop: appliedHitSlop,\n    enabled: isPressableEnabled,\n    touchSoundDisabled: android_disableSound !== null && android_disableSound !== void 0 ? android_disableSound : undefined,\n    rippleColor: processColor((_android_ripple$color = android_ripple === null || android_ripple === void 0 ? void 0 : android_ripple.color) !== null && _android_ripple$color !== void 0 ? _android_ripple$color : defaultRippleColor),\n    rippleRadius: (_android_ripple$radiu = android_ripple === null || android_ripple === void 0 ? void 0 : android_ripple.radius) !== null && _android_ripple$radiu !== void 0 ? _android_ripple$radiu : undefined,\n    style: [{\n      width: '100%',\n      height: '100%'\n    }, pointerStyle, innerStyles]\n  }, childrenProp, __DEV__ ? React.createElement(PressabilityDebugView, {\n    color: \"red\",\n    hitSlop: normalizedHitSlop\n  }) : null)));\n}","map":{"version":3,"names":["React","useCallback","useMemo","useRef","useState","GestureObjects","Gesture","GestureDetector","Platform","View","processColor","StyleSheet","NativeButton","numberAsInset","gestureToPressableEvent","isTouchWithinInset","gestureTouchToPressableEvent","addInsets","splitStyles","PressabilityDebugView","INT32_MAX","DEFAULT_LONG_PRESS_DURATION","_worklet_4387546001157_init_data","code","location","sourceMap","version","_worklet_12194516910159_init_data","_worklet_3943879060407_init_data","_worklet_12163056180453_init_data","_worklet_13230236304163_init_data","_worklet_3162625198907_init_data","_worklet_989467555621_init_data","Pressable","props","_android_ripple$color","_android_ripple$radiu","testOnly_pressed","hitSlop","pressRetentionOffset","delayHoverIn","onHoverIn","delayHoverOut","onHoverOut","delayLongPress","unstable_pressDelay","onPress","onPressIn","onPressOut","onLongPress","style","children","android_disableSound","android_ripple","disabled","remainingProps","_objectWithoutPropertiesLoose","_excluded","pressedState","setPressedState","pressableRef","isPressCallbackEnabled","hasPassedBoundsChecks","shouldPreventNativeEffects","normalizedHitSlop","normalizedPressRetentionOffset","hoverInTimeout","hoverOutTimeout","hoverGesture","Hover","manualActivation","cancelsTouchesInView","onBegin","_e","global","Error","PressableJs1","event","current","clearTimeout","setTimeout","__closure","__workletHash","__initData","__stackDetails","onFinalize","PressableJs2","pressDelayTimeoutRef","isTouchPropagationAllowed","deferredEventPayload","pressInHandler","handlingOnTouchesDown","pressOutHandler","nativeEvent","touches","length","changedTouches","longPressTimeoutRef","onEndHandlingTouchesDown","cancelledMidPress","activateLongPress","longPressMinDuration","pressAndTouchGesture","LongPress","minDuration","maxDistance","onTouchesDown","PressableJs3","_pressableRef$current","measure","_x","_y","width","height","_onEndHandlingTouches","at","call","onTouchesUp","PressableJs4","onTouchesCancelled","PressableJs5","allTouches","buttonGesture","Native","PressableJs6","OS","onStart","PressableJs7","appliedHitSlop","isPressableEnabled","gestures","gesture","enabled","runOnJS","shouldCancelWhenOutside","Simultaneous","defaultRippleColor","undefined","pointerStyle","cursor","styleProp","pressed","childrenProp","flattenedStyles","flatten","innerStyles","outerStyles","createElement","_extends","ref","touchSoundDisabled","rippleColor","color","rippleRadius","radius","__DEV__"],"sources":["C:\\Users\\user\\OneDrive\\Documents\\rn\\l\\node_modules\\react-native-gesture-handler\\lib\\module\\components\\Pressable\\Pressable.tsx"],"sourcesContent":["import React, { useCallback, useMemo, useRef, useState } from 'react';\nimport { GestureObjects as Gesture } from '../../handlers/gestures/gestureObjects';\nimport { GestureDetector } from '../../handlers/gestures/GestureDetector';\nimport { PressableEvent, PressableProps } from './PressableProps';\nimport {\n  Insets,\n  Platform,\n  StyleProp,\n  View,\n  ViewStyle,\n  processColor,\n  StyleSheet,\n} from 'react-native';\nimport NativeButton from '../GestureHandlerButton';\nimport {\n  numberAsInset,\n  gestureToPressableEvent,\n  isTouchWithinInset,\n  gestureTouchToPressableEvent,\n  addInsets,\n  splitStyles,\n} from './utils';\nimport { PressabilityDebugView } from '../../handlers/PressabilityDebugView';\nimport { GestureTouchEvent } from '../../handlers/gestureHandlerCommon';\nimport { INT32_MAX } from '../../utils';\n\nconst DEFAULT_LONG_PRESS_DURATION = 500;\n\nexport default function Pressable(props: PressableProps) {\n  const {\n    testOnly_pressed,\n    hitSlop,\n    pressRetentionOffset,\n    delayHoverIn,\n    onHoverIn,\n    delayHoverOut,\n    onHoverOut,\n    delayLongPress,\n    unstable_pressDelay,\n    onPress,\n    onPressIn,\n    onPressOut,\n    onLongPress,\n    style,\n    children,\n    android_disableSound,\n    android_ripple,\n    disabled,\n    ...remainingProps\n  } = props;\n\n  const [pressedState, setPressedState] = useState(testOnly_pressed ?? false);\n\n  const pressableRef = useRef<View>(null);\n\n  // Disabled when onLongPress has been called\n  const isPressCallbackEnabled = useRef<boolean>(true);\n  const hasPassedBoundsChecks = useRef<boolean>(false);\n  const shouldPreventNativeEffects = useRef<boolean>(false);\n\n  const normalizedHitSlop: Insets = useMemo(\n    () =>\n      typeof hitSlop === 'number' ? numberAsInset(hitSlop) : hitSlop ?? {},\n    [hitSlop]\n  );\n\n  const normalizedPressRetentionOffset: Insets = useMemo(\n    () =>\n      typeof pressRetentionOffset === 'number'\n        ? numberAsInset(pressRetentionOffset)\n        : pressRetentionOffset ?? {},\n    [pressRetentionOffset]\n  );\n\n  const hoverInTimeout = useRef<number | null>(null);\n  const hoverOutTimeout = useRef<number | null>(null);\n\n  const hoverGesture = useMemo(\n    () =>\n      Gesture.Hover()\n        .manualActivation(true) // Stops Hover from blocking Native gesture activation on web\n        .cancelsTouchesInView(false)\n        .onBegin((event) => {\n          if (hoverOutTimeout.current) {\n            clearTimeout(hoverOutTimeout.current);\n          }\n          if (delayHoverIn) {\n            hoverInTimeout.current = setTimeout(\n              () => onHoverIn?.(gestureToPressableEvent(event)),\n              delayHoverIn\n            );\n            return;\n          }\n          onHoverIn?.(gestureToPressableEvent(event));\n        })\n        .onFinalize((event) => {\n          if (hoverInTimeout.current) {\n            clearTimeout(hoverInTimeout.current);\n          }\n          if (delayHoverOut) {\n            hoverOutTimeout.current = setTimeout(\n              () => onHoverOut?.(gestureToPressableEvent(event)),\n              delayHoverOut\n            );\n            return;\n          }\n          onHoverOut?.(gestureToPressableEvent(event));\n        }),\n    [delayHoverIn, delayHoverOut, onHoverIn, onHoverOut]\n  );\n\n  const pressDelayTimeoutRef = useRef<number | null>(null);\n  const isTouchPropagationAllowed = useRef<boolean>(false);\n\n  // iOS only: due to varying flow of gestures, events sometimes have to be saved for later use\n  const deferredEventPayload = useRef<PressableEvent | null>(null);\n\n  const pressInHandler = useCallback(\n    (event: PressableEvent) => {\n      if (handlingOnTouchesDown.current) {\n        deferredEventPayload.current = event;\n      }\n\n      if (!isTouchPropagationAllowed.current) {\n        return;\n      }\n\n      deferredEventPayload.current = null;\n\n      onPressIn?.(event);\n      isPressCallbackEnabled.current = true;\n      pressDelayTimeoutRef.current = null;\n      setPressedState(true);\n    },\n    [onPressIn]\n  );\n\n  const pressOutHandler = useCallback(\n    (event: PressableEvent) => {\n      if (\n        !hasPassedBoundsChecks.current ||\n        event.nativeEvent.touches.length >\n          event.nativeEvent.changedTouches.length\n      ) {\n        return;\n      }\n\n      if (unstable_pressDelay && pressDelayTimeoutRef.current !== null) {\n        // When delay is preemptively finished by lifting touches,\n        // we want to immediately activate it's effects - pressInHandler,\n        // even though we are located at the pressOutHandler\n        clearTimeout(pressDelayTimeoutRef.current);\n        pressInHandler(event);\n      }\n\n      if (deferredEventPayload.current) {\n        onPressIn?.(deferredEventPayload.current);\n        deferredEventPayload.current = null;\n      }\n\n      onPressOut?.(event);\n\n      if (isPressCallbackEnabled.current) {\n        onPress?.(event);\n      }\n\n      if (longPressTimeoutRef.current) {\n        clearTimeout(longPressTimeoutRef.current);\n        longPressTimeoutRef.current = null;\n      }\n\n      isTouchPropagationAllowed.current = false;\n      hasPassedBoundsChecks.current = false;\n      isPressCallbackEnabled.current = true;\n      setPressedState(false);\n    },\n    [onPress, onPressIn, onPressOut, pressInHandler, unstable_pressDelay]\n  );\n\n  const handlingOnTouchesDown = useRef<boolean>(false);\n  const onEndHandlingTouchesDown = useRef<(() => void) | null>(null);\n  const cancelledMidPress = useRef<boolean>(false);\n\n  const activateLongPress = useCallback(\n    (event: GestureTouchEvent) => {\n      if (!isTouchPropagationAllowed.current) {\n        return;\n      }\n\n      if (hasPassedBoundsChecks.current) {\n        onLongPress?.(gestureTouchToPressableEvent(event));\n        isPressCallbackEnabled.current = false;\n      }\n\n      if (longPressTimeoutRef.current) {\n        clearTimeout(longPressTimeoutRef.current);\n        longPressTimeoutRef.current = null;\n      }\n    },\n    [onLongPress]\n  );\n\n  const longPressTimeoutRef = useRef<number | null>(null);\n  const longPressMinDuration =\n    (delayLongPress ?? DEFAULT_LONG_PRESS_DURATION) +\n    (unstable_pressDelay ?? 0);\n\n  const pressAndTouchGesture = useMemo(\n    () =>\n      Gesture.LongPress()\n        .minDuration(INT32_MAX) // Stops long press from blocking native gesture\n        .maxDistance(INT32_MAX) // Stops long press from cancelling after set distance\n        .cancelsTouchesInView(false)\n        .onTouchesDown((event) => {\n          handlingOnTouchesDown.current = true;\n          pressableRef.current?.measure((_x, _y, width, height) => {\n            if (\n              !isTouchWithinInset(\n                {\n                  width,\n                  height,\n                },\n                normalizedHitSlop,\n                event.changedTouches.at(-1)\n              ) ||\n              hasPassedBoundsChecks.current ||\n              cancelledMidPress.current\n            ) {\n              cancelledMidPress.current = false;\n              onEndHandlingTouchesDown.current = null;\n              handlingOnTouchesDown.current = false;\n              return;\n            }\n\n            hasPassedBoundsChecks.current = true;\n\n            // In case of multiple touches, the first one starts long press gesture\n            if (longPressTimeoutRef.current === null) {\n              // Start long press gesture timer\n              longPressTimeoutRef.current = setTimeout(\n                () => activateLongPress(event),\n                longPressMinDuration\n              );\n            }\n\n            if (unstable_pressDelay) {\n              pressDelayTimeoutRef.current = setTimeout(() => {\n                pressInHandler(gestureTouchToPressableEvent(event));\n              }, unstable_pressDelay);\n            } else {\n              pressInHandler(gestureTouchToPressableEvent(event));\n            }\n\n            onEndHandlingTouchesDown.current?.();\n            onEndHandlingTouchesDown.current = null;\n            handlingOnTouchesDown.current = false;\n          });\n        })\n        .onTouchesUp((event) => {\n          if (handlingOnTouchesDown.current) {\n            onEndHandlingTouchesDown.current = () =>\n              pressOutHandler(gestureTouchToPressableEvent(event));\n            return;\n          }\n          // On iOS, short taps will make LongPress gesture call onTouchesUp before Native gesture calls onStart\n          // This variable ensures that onStart isn't detected as the first gesture since Pressable is pressed.\n          if (deferredEventPayload.current !== null) {\n            shouldPreventNativeEffects.current = true;\n          }\n          pressOutHandler(gestureTouchToPressableEvent(event));\n        })\n        .onTouchesCancelled((event) => {\n          isPressCallbackEnabled.current = false;\n\n          if (handlingOnTouchesDown.current) {\n            cancelledMidPress.current = true;\n            onEndHandlingTouchesDown.current = () =>\n              pressOutHandler(gestureTouchToPressableEvent(event));\n            return;\n          }\n\n          if (\n            !hasPassedBoundsChecks.current ||\n            event.allTouches.length > event.changedTouches.length\n          ) {\n            return;\n          }\n\n          pressOutHandler(gestureTouchToPressableEvent(event));\n        }),\n    [\n      activateLongPress,\n      longPressMinDuration,\n      normalizedHitSlop,\n      pressInHandler,\n      pressOutHandler,\n      unstable_pressDelay,\n    ]\n  );\n\n  // RNButton is placed inside ButtonGesture to enable Android's ripple and to capture non-propagating events\n  const buttonGesture = useMemo(\n    () =>\n      Gesture.Native()\n        .onBegin(() => {\n          // Android sets BEGAN state on press down\n          if (Platform.OS === 'android') {\n            isTouchPropagationAllowed.current = true;\n          }\n        })\n        .onStart(() => {\n          if (Platform.OS === 'web') {\n            isTouchPropagationAllowed.current = true;\n          }\n\n          // iOS sets ACTIVE state on press down\n          if (Platform.OS !== 'ios') {\n            return;\n          }\n\n          if (deferredEventPayload.current) {\n            isTouchPropagationAllowed.current = true;\n\n            if (hasPassedBoundsChecks.current) {\n              pressInHandler(deferredEventPayload.current);\n              deferredEventPayload.current = null;\n            } else {\n              pressOutHandler(deferredEventPayload.current);\n              isTouchPropagationAllowed.current = false;\n            }\n\n            return;\n          }\n\n          if (hasPassedBoundsChecks.current) {\n            isTouchPropagationAllowed.current = true;\n            return;\n          }\n\n          if (shouldPreventNativeEffects.current) {\n            shouldPreventNativeEffects.current = false;\n            return;\n          }\n\n          isTouchPropagationAllowed.current = true;\n        }),\n    [pressInHandler, pressOutHandler]\n  );\n\n  const appliedHitSlop = addInsets(\n    normalizedHitSlop,\n    normalizedPressRetentionOffset\n  );\n\n  const isPressableEnabled = disabled !== true;\n\n  const gestures = [pressAndTouchGesture, hoverGesture, buttonGesture];\n\n  for (const gesture of gestures) {\n    gesture.enabled(isPressableEnabled);\n    gesture.runOnJS(true);\n    gesture.hitSlop(appliedHitSlop);\n    gesture.shouldCancelWhenOutside(false);\n\n    if (Platform.OS !== 'web') {\n      gesture.shouldCancelWhenOutside(true);\n    }\n  }\n\n  // Uses different hitSlop, to activate on hitSlop area instead of pressRetentionOffset area\n  buttonGesture.hitSlop(normalizedHitSlop);\n\n  const gesture = Gesture.Simultaneous(...gestures);\n\n  const defaultRippleColor = android_ripple ? undefined : 'transparent';\n\n  // `cursor: 'pointer'` on `RNButton` crashes iOS\n  const pointerStyle: StyleProp<ViewStyle> =\n    Platform.OS === 'web' ? { cursor: 'pointer' } : {};\n\n  const styleProp =\n    typeof style === 'function' ? style({ pressed: pressedState }) : style;\n\n  const childrenProp =\n    typeof children === 'function'\n      ? children({ pressed: pressedState })\n      : children;\n\n  const flattenedStyles = StyleSheet.flatten(styleProp ?? {});\n\n  const [innerStyles, outerStyles] = splitStyles(flattenedStyles);\n\n  return (\n    <View {...remainingProps} style={outerStyles}>\n      <GestureDetector gesture={gesture}>\n        <NativeButton\n          ref={pressableRef}\n          hitSlop={appliedHitSlop}\n          enabled={isPressableEnabled}\n          touchSoundDisabled={android_disableSound ?? undefined}\n          rippleColor={processColor(\n            android_ripple?.color ?? defaultRippleColor\n          )}\n          rippleRadius={android_ripple?.radius ?? undefined}\n          style={[\n            { width: '100%', height: '100%' },\n            pointerStyle,\n            innerStyles,\n          ]}>\n          {childrenProp}\n          {__DEV__ ? (\n            <PressabilityDebugView color=\"red\" hitSlop={normalizedHitSlop} />\n          ) : null}\n        </NativeButton>\n      </GestureDetector>\n    </View>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,OAA7B,EAAsCC,MAAtC,EAA8CC,QAA9C,QAA8D,OAA9D;AACA,SAASC,cAAc,IAAIC,OAA3B,QAA0C,wCAA1C;AACA,SAASC,eAAT,QAAgC,yCAAhC;AAAA,OAAAC,QAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,UAAA;AAWA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,SACEC,aADF,EAEEC,uBAFF,EAGEC,kBAHF,EAIEC,4BAJF,EAKEC,SALF,EAMEC,WANF,QAOO,SAPP;AAQA,SAASC,qBAAT,QAAsC,sCAAtC;AAEA,SAASC,SAAT,QAA0B,aAA1B;AAEA,MAAMC,2BAA2B,GAAG,GAApC;AAAA,MAAAC,gCAAA;EAAAC,IAAA;EAAAC,QAAA;EAAAC,SAAA;EAAAC,OAAA;AAAA;AAAA,MAAAC,iCAAA;EAAAJ,IAAA;EAAAC,QAAA;EAAAC,SAAA;EAAAC,OAAA;AAAA;AAAA,MAAAE,gCAAA;EAAAL,IAAA;EAAAC,QAAA;EAAAC,SAAA;EAAAC,OAAA;AAAA;AAAA,MAAAG,iCAAA;EAAAN,IAAA;EAAAC,QAAA;EAAAC,SAAA;EAAAC,OAAA;AAAA;AAAA,MAAAI,iCAAA;EAAAP,IAAA;EAAAC,QAAA;EAAAC,SAAA;EAAAC,OAAA;AAAA;AAAA,MAAAK,gCAAA;EAAAR,IAAA;EAAAC,QAAA;EAAAC,SAAA;EAAAC,OAAA;AAAA;AAAA,MAAAM,+BAAA;EAAAT,IAAA;EAAAC,QAAA;EAAAC,SAAA;EAAAC,OAAA;AAAA;AAEA,eAAe,SAASO,SAATA,CAAmBC,KAAnB,EAA0C;EAAA,IAAAC,qBAAA,EAAAC,qBAAA;EACvD,MAAM;MACJC,gBADI;MAEJC,OAFI;MAGJC,oBAHI;MAIJC,YAJI;MAKJC,SALI;MAMJC,aANI;MAOJC,UAPI;MAQJC,cARI;MASJC,mBATI;MAUJC,OAVI;MAWJC,SAXI;MAYJC,UAZI;MAaJC,WAbI;MAcJC,KAdI;MAeJC,QAfI;MAgBJC,oBAhBI;MAiBJC,cAjBI;MAkBJC;IAlBI,IAoBFpB,KApBJ;IAmBKqB,cAAA,GAAAC,6BAAA,CACDtB,KApBJ,EAAAuB,SAAA;EAsBA,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCvD,QAAQ,CAACiC,gBAAD,aAACA,gBAAD,cAACA,gBAAD,GAAqB,KAArB,CAAhD;EAEA,MAAMuB,YAAY,GAAGzD,MAAM,CAAO,IAAP,CAA3B;EAGA,MAAM0D,sBAAsB,GAAG1D,MAAM,CAAU,IAAV,CAArC;EACA,MAAM2D,qBAAqB,GAAG3D,MAAM,CAAU,KAAV,CAApC;EACA,MAAM4D,0BAA0B,GAAG5D,MAAM,CAAU,KAAV,CAAzC;EAEA,MAAM6D,iBAAyB,GAAG9D,OAAO,CACvC,MACE,OAAOoC,OAAP,KAAmB,QAAnB,GAA8BzB,aAAa,CAACyB,OAAD,CAA3C,GAAuDA,OAAvD,aAAuDA,OAAvD,cAAuDA,OAAvD,GAAkE,EAF7B,EAGvC,CAACA,OAAD,CAHuC,CAAzC;EAMA,MAAM2B,8BAAsC,GAAG/D,OAAO,CACpD,MACE,OAAOqC,oBAAP,KAAgC,QAAhC,GACI1B,aAAa,CAAC0B,oBAAD,CADjB,GAEIA,oBAFJ,aAEIA,oBAFJ,cAEIA,oBAFJ,GAE4B,EAJsB,EAKpD,CAACA,oBAAD,CALoD,CAAtD;EAQA,MAAM2B,cAAc,GAAG/D,MAAM,CAAgB,IAAhB,CAA7B;EACA,MAAMgE,eAAe,GAAGhE,MAAM,CAAgB,IAAhB,CAA9B;EAEA,MAAMiE,YAAY,GAAGlE,OAAO,CAC1B,MACEI,OAAO,CAAC+D,KAAR,GACGC,gBADH,CACoB,IADpB,EAEGC,oBAFH,CAEwB,KAFxB,EAGGC,OAHH,CAGY;IAAA,MAAAC,EAAA,QAAAC,MAAA,CAAAC,KAAA;IAAA,MAAAC,YAAA,YAAAA,CAAAC,KAAD,EAAW;MAClB,IAAIV,eAAe,CAACW,OAApB,EAA6B;QAC3BC,YAAY,CAACZ,eAAe,CAACW,OAAjB,CAAZ;MACD;MACD,IAAItC,YAAJ,EAAkB;QAChB0B,cAAc,CAACY,OAAf,GAAyBE,UAAU,CACjC,MAAMvC,SAAN,aAAMA,SAAN,uBAAMA,SAAS,CAAG3B,uBAAuB,CAAC+D,KAAD,CAA1B,CADkB,EAEjCrC,YAFiC,CAAnC;QAIA;MACD;MACDC,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAG3B,uBAAuB,CAAC+D,KAAD,CAA1B,CAAT;IACD,CAfH;IAAAD,YAAA,CAAAK,SAAA;MAAAd,eAAA;MAAAY,YAAA;MAAAvC,YAAA;MAAA0B,cAAA;MAAAc,UAAA;MAAAvC,SAAA;MAAA3B;IAAA;IAAA8D,YAAA,CAAAM,aAAA;IAAAN,YAAA,CAAAO,UAAA,GAAA7D,gCAAA;IAAAsD,YAAA,CAAAQ,cAAA,GAAAX,EAAA;IAAA,OAAAG,YAAA;EAAA,CAGY,EAHZ,EAgBGS,UAhBH,CAgBe;IAAA,MAAAZ,EAAA,QAAAC,MAAA,CAAAC,KAAA;IAAA,MAAAW,YAAA,YAAAA,CAAAT,KAAD,EAAW;MACrB,IAAIX,cAAc,CAACY,OAAnB,EAA4B;QAC1BC,YAAY,CAACb,cAAc,CAACY,OAAhB,CAAZ;MACD;MACD,IAAIpC,aAAJ,EAAmB;QACjByB,eAAe,CAACW,OAAhB,GAA0BE,UAAU,CAClC,MAAMrC,UAAN,aAAMA,UAAN,uBAAMA,UAAU,CAAG7B,uBAAuB,CAAC+D,KAAD,CAA1B,CADkB,EAElCnC,aAFkC,CAApC;QAIA;MACD;MACDC,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAG7B,uBAAuB,CAAC+D,KAAD,CAA1B,CAAV;IACD,CA5BH;IAAAS,YAAA,CAAAL,SAAA;MAAAf,cAAA;MAAAa,YAAA;MAAArC,aAAA;MAAAyB,eAAA;MAAAa,UAAA;MAAArC,UAAA;MAAA7B;IAAA;IAAAwE,YAAA,CAAAJ,aAAA;IAAAI,YAAA,CAAAH,UAAA,GAAAxD,iCAAA;IAAA2D,YAAA,CAAAF,cAAA,GAAAX,EAAA;IAAA,OAAAa,YAAA;EAAA,CAgBe,EAhBf,CAFwB,EA+B1B,CAAC9C,YAAD,EAAeE,aAAf,EAA8BD,SAA9B,EAAyCE,UAAzC,CA/B0B,CAA5B;EAkCA,MAAM4C,oBAAoB,GAAGpF,MAAM,CAAgB,IAAhB,CAAnC;EACA,MAAMqF,yBAAyB,GAAGrF,MAAM,CAAU,KAAV,CAAxC;EAGA,MAAMsF,oBAAoB,GAAGtF,MAAM,CAAwB,IAAxB,CAAnC;EAEA,MAAMuF,cAAc,GAAGzF,WAAW,CAC/B4E,KAAD,IAA2B;IACzB,IAAIc,qBAAqB,CAACb,OAA1B,EAAmC;MACjCW,oBAAoB,CAACX,OAArB,GAA+BD,KAA/B;IACD;IAED,IAAI,CAACW,yBAAyB,CAACV,OAA/B,EAAwC;MACtC;IACD;IAEDW,oBAAoB,CAACX,OAArB,GAA+B,IAA/B;IAEA/B,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAG8B,KAAH,CAAT;IACAhB,sBAAsB,CAACiB,OAAvB,GAAiC,IAAjC;IACAS,oBAAoB,CAACT,OAArB,GAA+B,IAA/B;IACAnB,eAAe,CAAC,IAAD,CAAf;EACD,CAhB+B,EAiBhC,CAACZ,SAAD,CAjBgC,CAAlC;EAoBA,MAAM6C,eAAe,GAAG3F,WAAW,CAChC4E,KAAD,IAA2B;IACzB,IACE,CAACf,qBAAqB,CAACgB,OAAvB,IACAD,KAAK,CAACgB,WAAN,CAAkBC,OAAlB,CAA0BC,MAA1B,GACElB,KAAK,CAACgB,WAAN,CAAkBG,cAAlB,CAAiCD,MAHrC,EAIE;MACA;IACD;IAED,IAAIlD,mBAAmB,IAAI0C,oBAAoB,CAACT,OAArB,KAAiC,IAA5D,EAAkE;MAIhEC,YAAY,CAACQ,oBAAoB,CAACT,OAAtB,CAAZ;MACAY,cAAc,CAACb,KAAD,CAAd;IACD;IAED,IAAIY,oBAAoB,CAACX,OAAzB,EAAkC;MAChC/B,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAG0C,oBAAoB,CAACX,OAAxB,CAAT;MACAW,oBAAoB,CAACX,OAArB,GAA+B,IAA/B;IACD;IAED9B,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAG6B,KAAH,CAAV;IAEA,IAAIhB,sBAAsB,CAACiB,OAA3B,EAAoC;MAClChC,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAG+B,KAAH,CAAP;IACD;IAED,IAAIoB,mBAAmB,CAACnB,OAAxB,EAAiC;MAC/BC,YAAY,CAACkB,mBAAmB,CAACnB,OAArB,CAAZ;MACAmB,mBAAmB,CAACnB,OAApB,GAA8B,IAA9B;IACD;IAEDU,yBAAyB,CAACV,OAA1B,GAAoC,KAApC;IACAhB,qBAAqB,CAACgB,OAAtB,GAAgC,KAAhC;IACAjB,sBAAsB,CAACiB,OAAvB,GAAiC,IAAjC;IACAnB,eAAe,CAAC,KAAD,CAAf;EACD,CAtCgC,EAuCjC,CAACb,OAAD,EAAUC,SAAV,EAAqBC,UAArB,EAAiC0C,cAAjC,EAAiD7C,mBAAjD,CAvCiC,CAAnC;EA0CA,MAAM8C,qBAAqB,GAAGxF,MAAM,CAAU,KAAV,CAApC;EACA,MAAM+F,wBAAwB,GAAG/F,MAAM,CAAsB,IAAtB,CAAvC;EACA,MAAMgG,iBAAiB,GAAGhG,MAAM,CAAU,KAAV,CAAhC;EAEA,MAAMiG,iBAAiB,GAAGnG,WAAW,CAClC4E,KAAD,IAA8B;IAC5B,IAAI,CAACW,yBAAyB,CAACV,OAA/B,EAAwC;MACtC;IACD;IAED,IAAIhB,qBAAqB,CAACgB,OAA1B,EAAmC;MACjC7B,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAGjC,4BAA4B,CAAC6D,KAAD,CAA/B,CAAX;MACAhB,sBAAsB,CAACiB,OAAvB,GAAiC,KAAjC;IACD;IAED,IAAImB,mBAAmB,CAACnB,OAAxB,EAAiC;MAC/BC,YAAY,CAACkB,mBAAmB,CAACnB,OAArB,CAAZ;MACAmB,mBAAmB,CAACnB,OAApB,GAA8B,IAA9B;IACD;EACF,CAfkC,EAgBnC,CAAC7B,WAAD,CAhBmC,CAArC;EAmBA,MAAMgD,mBAAmB,GAAG9F,MAAM,CAAgB,IAAhB,CAAlC;EACA,MAAMkG,oBAAoB,GACxB,CAACzD,cAAD,aAACA,cAAD,cAACA,cAAD,GAAmBvB,2BAAnB,KACCwB,mBADD,aACCA,mBADD,cACCA,mBADD,GACwB,CADxB,CADF;EAIA,MAAMyD,oBAAoB,GAAGpG,OAAO,CAClC,MACEI,OAAO,CAACiG,SAAR,GACGC,WADH,CACepF,SADf,EAEGqF,WAFH,CAEerF,SAFf,EAGGmD,oBAHH,CAGwB,KAHxB,EAIGmC,aAJH,CAIkB;IAAA,MAAAjC,EAAA,QAAAC,MAAA,CAAAC,KAAA;IAAA,MAAAgC,YAAA,YAAAA,CAAA9B,KAAD,EAAW;MAAA,IAAA+B,qBAAA;MACxBjB,qBAAqB,CAACb,OAAtB,GAAgC,IAAhC;MACA,CAAA8B,qBAAA,GAAAhD,YAAY,CAACkB,OAAb,cAAA8B,qBAAA,uBAAAA,qBAAA,CAAsBC,OAAtB,CAA8B,CAACC,EAAD,EAAKC,EAAL,EAASC,KAAT,EAAgBC,MAAhB,KAA2B;QAAA,IAAAC,qBAAA;QACvD,IACE,CAACnG,kBAAkB,CACjB;UACEiG,KADF;UAEEC;QAFF,CADiB,EAKjBjD,iBALiB,EAMjBa,KAAK,CAACmB,cAAN,CAAqBmB,EAArB,CAAwB,CAAC,CAAzB,CANiB,CAAnB,IAQArD,qBAAqB,CAACgB,OARtB,IASAqB,iBAAiB,CAACrB,OAVpB,EAWE;UACAqB,iBAAiB,CAACrB,OAAlB,GAA4B,KAA5B;UACAoB,wBAAwB,CAACpB,OAAzB,GAAmC,IAAnC;UACAa,qBAAqB,CAACb,OAAtB,GAAgC,KAAhC;UACA;QACD;QAEDhB,qBAAqB,CAACgB,OAAtB,GAAgC,IAAhC;QAGA,IAAImB,mBAAmB,CAACnB,OAApB,KAAgC,IAApC,EAA0C;UAExCmB,mBAAmB,CAACnB,OAApB,GAA8BE,UAAU,CACtC,MAAMoB,iBAAiB,CAACvB,KAAD,CADe,EAEtCwB,oBAFsC,CAAxC;QAID;QAED,IAAIxD,mBAAJ,EAAyB;UACvB0C,oBAAoB,CAACT,OAArB,GAA+BE,UAAU,CAAC,MAAM;YAC9CU,cAAc,CAAC1E,4BAA4B,CAAC6D,KAAD,CAA7B,CAAd;UACD,CAFwC,EAEtChC,mBAFsC,CAAzC;QAGD,CAJD,MAIO;UACL6C,cAAc,CAAC1E,4BAA4B,CAAC6D,KAAD,CAA7B,CAAd;QACD;QAED,CAAAqC,qBAAA,GAAAhB,wBAAwB,CAACpB,OAAzB,cAAAoC,qBAAA,uBAAAA,qBAAA,CAAAE,IAAA,CAAAlB,wBAAwB;QACxBA,wBAAwB,CAACpB,OAAzB,GAAmC,IAAnC;QACAa,qBAAqB,CAACb,OAAtB,GAAgC,KAAhC;MACD,CAzCD;IA0CD,CAhDH;IAAA6B,YAAA,CAAA1B,SAAA;MAAAU,qBAAA;MAAA/B,YAAA;MAAA7C,kBAAA;MAAAiD,iBAAA;MAAAF,qBAAA;MAAAqC,iBAAA;MAAAD,wBAAA;MAAAD,mBAAA;MAAAjB,UAAA;MAAAoB,iBAAA;MAAAC,oBAAA;MAAAxD,mBAAA;MAAA0C,oBAAA;MAAAG,cAAA;MAAA1E;IAAA;IAAA2F,YAAA,CAAAzB,aAAA;IAAAyB,YAAA,CAAAxB,UAAA,GAAAvD,gCAAA;IAAA+E,YAAA,CAAAvB,cAAA,GAAAX,EAAA;IAAA,OAAAkC,YAAA;EAAA,CAIkB,EAJlB,EAiDGU,WAjDH,CAiDgB;IAAA,MAAA5C,EAAA,QAAAC,MAAA,CAAAC,KAAA;IAAA,MAAA2C,YAAA,YAAAA,CAAAzC,KAAD,EAAW;MACtB,IAAIc,qBAAqB,CAACb,OAA1B,EAAmC;QACjCoB,wBAAwB,CAACpB,OAAzB,GAAmC,MACjCc,eAAe,CAAC5E,4BAA4B,CAAC6D,KAAD,CAA7B,CADjB;QAEA;MACD;MAGD,IAAIY,oBAAoB,CAACX,OAArB,KAAiC,IAArC,EAA2C;QACzCf,0BAA0B,CAACe,OAA3B,GAAqC,IAArC;MACD;MACDc,eAAe,CAAC5E,4BAA4B,CAAC6D,KAAD,CAA7B,CAAf;IACD,CA7DH;IAAAyC,YAAA,CAAArC,SAAA;MAAAU,qBAAA;MAAAO,wBAAA;MAAAN,eAAA;MAAA5E,4BAAA;MAAAyE,oBAAA;MAAA1B;IAAA;IAAAuD,YAAA,CAAApC,aAAA;IAAAoC,YAAA,CAAAnC,UAAA,GAAAtD,iCAAA;IAAAyF,YAAA,CAAAlC,cAAA,GAAAX,EAAA;IAAA,OAAA6C,YAAA;EAAA,CAiDgB,EAjDhB,EA8DGC,kBA9DH,CA8DuB;IAAA,MAAA9C,EAAA,QAAAC,MAAA,CAAAC,KAAA;IAAA,MAAA6C,YAAA,YAAAA,CAAA3C,KAAD,EAAW;MAC7BhB,sBAAsB,CAACiB,OAAvB,GAAiC,KAAjC;MAEA,IAAIa,qBAAqB,CAACb,OAA1B,EAAmC;QACjCqB,iBAAiB,CAACrB,OAAlB,GAA4B,IAA5B;QACAoB,wBAAwB,CAACpB,OAAzB,GAAmC,MACjCc,eAAe,CAAC5E,4BAA4B,CAAC6D,KAAD,CAA7B,CADjB;QAEA;MACD;MAED,IACE,CAACf,qBAAqB,CAACgB,OAAvB,IACAD,KAAK,CAAC4C,UAAN,CAAiB1B,MAAjB,GAA0BlB,KAAK,CAACmB,cAAN,CAAqBD,MAFjD,EAGE;QACA;MACD;MAEDH,eAAe,CAAC5E,4BAA4B,CAAC6D,KAAD,CAA7B,CAAf;IACD,CAhFH;IAAA2C,YAAA,CAAAvC,SAAA;MAAApB,sBAAA;MAAA8B,qBAAA;MAAAQ,iBAAA;MAAAD,wBAAA;MAAAN,eAAA;MAAA5E,4BAAA;MAAA8C;IAAA;IAAA0D,YAAA,CAAAtC,aAAA;IAAAsC,YAAA,CAAArC,UAAA,GAAArD,iCAAA;IAAA0F,YAAA,CAAApC,cAAA,GAAAX,EAAA;IAAA,OAAA+C,YAAA;EAAA,CA8DuB,EA9DvB,CAFgC,EAmFlC,CACEpB,iBADF,EAEEC,oBAFF,EAGErC,iBAHF,EAIE0B,cAJF,EAKEE,eALF,EAME/C,mBANF,CAnFkC,CAApC;EA8FA,MAAM6E,aAAa,GAAGxH,OAAO,CAC3B,MACEI,OAAO,CAACqH,MAAR,GACGnD,OADH,CACW;IAAA,MAAAC,EAAA,QAAAC,MAAA,CAAAC,KAAA;IAAA,MAAAiD,YAAA,YAAAA,CAAA,EAAM;MAEb,IAAIpH,QAAQ,CAACqH,EAAT,KAAgB,SAApB,EAA+B;QAC7BrC,yBAAyB,CAACV,OAA1B,GAAoC,IAApC;MACD;IACF,CANH;IAAA8C,YAAA,CAAA3C,SAAA;MAAAzE,QAAA;MAAAgF;IAAA;IAAAoC,YAAA,CAAA1C,aAAA;IAAA0C,YAAA,CAAAzC,UAAA,GAAApD,gCAAA;IAAA6F,YAAA,CAAAxC,cAAA,GAAAX,EAAA;IAAA,OAAAmD,YAAA;EAAA,CACW,EADX,EAOGE,OAPH,CAOW;IAAA,MAAArD,EAAA,QAAAC,MAAA,CAAAC,KAAA;IAAA,MAAAoD,YAAA,YAAAA,CAAA,EAAM;MACb,IAAIvH,QAAQ,CAACqH,EAAT,KAAgB,KAApB,EAA2B;QACzBrC,yBAAyB,CAACV,OAA1B,GAAoC,IAApC;MACD;MAGD,IAAItE,QAAQ,CAACqH,EAAT,KAAgB,KAApB,EAA2B;QACzB;MACD;MAED,IAAIpC,oBAAoB,CAACX,OAAzB,EAAkC;QAChCU,yBAAyB,CAACV,OAA1B,GAAoC,IAApC;QAEA,IAAIhB,qBAAqB,CAACgB,OAA1B,EAAmC;UACjCY,cAAc,CAACD,oBAAoB,CAACX,OAAtB,CAAd;UACAW,oBAAoB,CAACX,OAArB,GAA+B,IAA/B;QACD,CAHD,MAGO;UACLc,eAAe,CAACH,oBAAoB,CAACX,OAAtB,CAAf;UACAU,yBAAyB,CAACV,OAA1B,GAAoC,KAApC;QACD;QAED;MACD;MAED,IAAIhB,qBAAqB,CAACgB,OAA1B,EAAmC;QACjCU,yBAAyB,CAACV,OAA1B,GAAoC,IAApC;QACA;MACD;MAED,IAAIf,0BAA0B,CAACe,OAA/B,EAAwC;QACtCf,0BAA0B,CAACe,OAA3B,GAAqC,KAArC;QACA;MACD;MAEDU,yBAAyB,CAACV,OAA1B,GAAoC,IAApC;IACD,CA1CH;IAAAiD,YAAA,CAAA9C,SAAA;MAAAzE,QAAA;MAAAgF,yBAAA;MAAAC,oBAAA;MAAA3B,qBAAA;MAAA4B,cAAA;MAAAE,eAAA;MAAA7B;IAAA;IAAAgE,YAAA,CAAA7C,aAAA;IAAA6C,YAAA,CAAA5C,UAAA,GAAAnD,+BAAA;IAAA+F,YAAA,CAAA3C,cAAA,GAAAX,EAAA;IAAA,OAAAsD,YAAA;EAAA,CAOW,EAPX,CAFyB,EA6C3B,CAACrC,cAAD,EAAiBE,eAAjB,CA7C2B,CAA7B;EAgDA,MAAMoC,cAAc,GAAG/G,SAAS,CAC9B+C,iBAD8B,EAE9BC,8BAF8B,CAAhC;EAKA,MAAMgE,kBAAkB,GAAG3E,QAAQ,KAAK,IAAxC;EAEA,MAAM4E,QAAQ,GAAG,CAAC5B,oBAAD,EAAuBlC,YAAvB,EAAqCsD,aAArC,CAAjB;EAEA,KAAK,MAAMS,OAAX,IAAsBD,QAAtB,EAAgC;IAC9BC,OAAO,CAACC,OAAR,CAAgBH,kBAAhB;IACAE,OAAO,CAACE,OAAR,CAAgB,IAAhB;IACAF,OAAO,CAAC7F,OAAR,CAAgB0F,cAAhB;IACAG,OAAO,CAACG,uBAAR,CAAgC,KAAhC;IAEA,IAAI9H,QAAQ,CAACqH,EAAT,KAAgB,KAApB,EAA2B;MACzBM,OAAO,CAACG,uBAAR,CAAgC,IAAhC;IACD;EACF;EAGDZ,aAAa,CAACpF,OAAd,CAAsB0B,iBAAtB;EAEA,MAAMmE,OAAO,GAAG7H,OAAO,CAACiI,YAAR,CAAqB,GAAGL,QAAxB,CAAhB;EAEA,MAAMM,kBAAkB,GAAGnF,cAAc,GAAGoF,SAAH,GAAe,aAAxD;EAGA,MAAMC,YAAkC,GACtClI,QAAQ,CAACqH,EAAT,KAAgB,KAAhB,GAAwB;IAAEc,MAAM,EAAE;EAAV,CAAxB,GAAgD,EADlD;EAGA,MAAMC,SAAS,GACb,OAAO1F,KAAP,KAAiB,UAAjB,GAA8BA,KAAK,CAAC;IAAE2F,OAAO,EAAEnF;EAAX,CAAD,CAAnC,GAAiER,KADnE;EAGA,MAAM4F,YAAY,GAChB,OAAO3F,QAAP,KAAoB,UAApB,GACIA,QAAQ,CAAC;IAAE0F,OAAO,EAAEnF;EAAX,CAAD,CADZ,GAEIP,QAHN;EAKA,MAAM4F,eAAe,GAAGpI,UAAU,CAACqI,OAAX,CAAmBJ,SAAnB,aAAmBA,SAAnB,cAAmBA,SAAnB,GAAgC,EAAhC,CAAxB;EAEA,MAAM,CAACK,WAAD,EAAcC,WAAd,IAA6BhI,WAAW,CAAC6H,eAAD,CAA9C;EAEA,OACE/I,KAAA,CAAAmJ,aAAA,CAAC1I,IAAD,EAAA2I,QAAA,KAAU7F,cAAV;IAA0BL,KAAK,EAAEgG;EAAjC,IACElJ,KAAA,CAAAmJ,aAAA,CAAC5I,eAAD;IAAiB4H,OAAO,EAAEA;EAA1B,GACEnI,KAAA,CAAAmJ,aAAA,CAACvI,YAAD;IACEyI,GAAG,EAAEzF,YADP;IAEEtB,OAAO,EAAE0F,cAFX;IAGEI,OAAO,EAAEH,kBAHX;IAIEqB,kBAAkB,EAAElG,oBAAF,aAAEA,oBAAF,cAAEA,oBAAF,GAA0BqF,SAJ9C;IAKEc,WAAW,EAAE7I,YAAY,EAAAyB,qBAAA,GACvBkB,cADuB,aACvBA,cADuB,uBACvBA,cAAc,CAAEmG,KADO,cAAArH,qBAAA,cAAAA,qBAAA,GACEqG,kBADF,CAL3B;IAQEiB,YAAY,GAAArH,qBAAA,GAAEiB,cAAF,aAAEA,cAAF,uBAAEA,cAAc,CAAEqG,MAAlB,cAAAtH,qBAAA,cAAAA,qBAAA,GAA4BqG,SAR1C;IASEvF,KAAK,EAAE,CACL;MAAE8D,KAAK,EAAE,MAAT;MAAiBC,MAAM,EAAE;IAAzB,CADK,EAELyB,YAFK,EAGLO,WAHK;EATT,GAcGH,YAdH,EAeGa,OAAO,GACN3J,KAAA,CAAAmJ,aAAA,CAAChI,qBAAD;IAAuBqI,KAAK,EAAC,KAA7B;IAAmClH,OAAO,EAAE0B;EAA5C,EADM,GAEJ,IAjBN,CADF,CADF,CADF;AAyBD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}