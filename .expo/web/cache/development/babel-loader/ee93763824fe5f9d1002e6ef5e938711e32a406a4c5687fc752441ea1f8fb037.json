{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\src\\\\panel\\\\User\\\\Navigations\\\\Authentication\\\\CreateUser.js\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { RadioButton, Text as PaperText, Button, TextInput } from \"react-native-paper\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchCities } from '../../Redux/Slice/AuthSlice/Signup/citySlice';\nimport { fetchSocieties } from \"../../Redux/Slice/AuthSlice/Signup/societySlice\";\nimport { sendVerificationEmail } from '../../Redux/Slice/AuthSlice/Signup/SendEmailVerification';\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateUser = () => {\n  const dispatch = useDispatch();\n  const navigation = useNavigation();\n  const cities = useSelector(state => state.citiesState.cities);\n  const societies = useSelector(state => state.societiesState.societies);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [mobileNumber, setPhoneNumber] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [society, setSociety] = useState(\"\");\n  const [block, setBlock] = useState(\"\");\n  const [flat, setFlat] = useState(\"\");\n  const [showCityMenu, setShowCityMenu] = useState(false);\n  const [showSocietyMenu, setShowSocietyMenu] = useState(false);\n  const [showBlockMenu, setShowBlockMenu] = useState(false);\n  const [showFlatMenu, setShowFlatMenu] = useState(false);\n  const [userType, setUserType] = useState(\"\");\n  const [blocksForSelectedSociety, setBlocksForSelectedSociety] = useState([]);\n  const [flatsForSelectedBlock, setFlatsForSelectedBlock] = useState([]);\n  const [citySelected, setCitySelected] = useState(false);\n  const [societySelected, setsocietySelected] = useState(false);\n  const [blockSelected, setblockSelected] = useState(false);\n  const [flatsSelected, setFlatsSelected] = useState(false);\n  const [societyId, setSocietyId] = useState('');\n  useEffect(() => {\n    dispatch(fetchCities());\n  }, [dispatch]);\n  const selectCity = selectedCity => {\n    setCity(selectedCity.name);\n    setShowCityMenu(false);\n    dispatch(fetchSocieties(selectedCity._id));\n    setCitySelected(true);\n  };\n  const toggleCityMenu = () => {\n    setShowCityMenu(!showCityMenu);\n  };\n  const selectSociety = selectedSociety => {\n    setsocietySelected(true);\n    setSocietyId(selectedSociety._id);\n    setSociety(selectedSociety.societyName);\n    setShowSocietyMenu(false);\n    const fetchedBlocks = fetchBlocksForSociety(selectedSociety._id);\n    setBlocksForSelectedSociety(fetchedBlocks);\n  };\n  const fetchBlocksForSociety = selectedSocietyId => {\n    const blocks = societies.find(item => item._id === selectedSocietyId)?.blocks || [];\n    return blocks;\n  };\n  const selectBlock = selectedBlock => {\n    setblockSelected(true);\n    setBlock(selectedBlock.blockName);\n    setShowBlockMenu(false);\n    const fetchedFlats = fetchFlatsForBlock(selectedBlock.blockName);\n    setFlatsForSelectedBlock(fetchedFlats);\n  };\n  const fetchFlatsForBlock = selectedBlockName => {\n    const flats = blocksForSelectedSociety.find(item => item.blockName === selectedBlockName)?.flats || [];\n    return flats;\n  };\n  const selectFlat = selectedFlat => {\n    setFlat(selectedFlat.flatNumber);\n    setShowFlatMenu(false);\n    setFlatsSelected(true);\n  };\n  const toggleSocietyMenu = () => {\n    setShowSocietyMenu(!showSocietyMenu);\n  };\n  const toggleBlockMenu = () => {\n    setShowBlockMenu(!showBlockMenu);\n  };\n  const toggleFlatMenu = () => {\n    setShowFlatMenu(!showFlatMenu);\n  };\n  const handleCreateUser = () => {\n    dispatch(sendVerificationEmail(email)).unwrap().then(result => {\n      console.log('Email sent:', result);\n      console.log(name, email, mobileNumber, password, societyId, society, block, flat, userType);\n      navigation.navigate(\"Verification\", {\n        name,\n        email,\n        mobileNumber,\n        password,\n        societyId,\n        society,\n        block,\n        flat,\n        userType\n      });\n    }).catch(error => {\n      console.error('Failed to send email:', error);\n    });\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(ScrollView, {\n      children: [_jsxDEV(Text, {\n        style: styles.title,\n        children: \"Create User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), _jsxDEV(Text, {\n        style: styles.sectionTitle,\n        children: \"User Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), _jsxDEV(TextInput, {\n        theme: {\n          colors: {\n            primary: \"#7D0431\"\n          }\n        },\n        mode: \"outlined\",\n        style: styles.input,\n        label: \"Name\",\n        value: name,\n        onChangeText: setName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), _jsxDEV(TextInput, {\n        theme: {\n          colors: {\n            primary: \"#7D0431\"\n          }\n        },\n        mode: \"outlined\",\n        style: styles.input,\n        label: \"Email\",\n        value: email,\n        onChangeText: setEmail,\n        keyboardType: \"email-address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), _jsxDEV(TextInput, {\n        theme: {\n          colors: {\n            primary: \"#7D0431\"\n          }\n        },\n        mode: \"outlined\",\n        style: styles.input,\n        label: \"Phone Number\",\n        value: mobileNumber,\n        onChangeText: setPhoneNumber,\n        keyboardType: \"phone-pad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), _jsxDEV(TextInput, {\n        theme: {\n          colors: {\n            primary: \"#7D0431\"\n          }\n        },\n        mode: \"outlined\",\n        style: styles.input,\n        label: \"Password\",\n        value: password,\n        onChangeText: setPassword,\n        secureTextEntry: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), _jsxDEV(Text, {\n        style: styles.sectionTitle,\n        children: \"Apartment Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), _jsxDEV(View, {\n        style: styles.dropdownContainer,\n        children: [_jsxDEV(TouchableOpacity, {\n          onPress: toggleCityMenu,\n          style: [styles.dropdown, showCityMenu && styles.dropdownActive],\n          children: _jsxDEV(Text, {\n            style: styles.dropdownText,\n            children: city ? city : \"Select City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), showCityMenu && _jsxDEV(View, {\n          style: styles.menu,\n          children: cities.map(item => _jsxDEV(TouchableOpacity, {\n            onPress: () => selectCity(item),\n            children: _jsxDEV(Text, {\n              style: styles.menuItem,\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 37\n            }, this)\n          }, item._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), _jsxDEV(View, {\n        style: styles.dropdownContainer,\n        children: [_jsxDEV(TouchableOpacity, {\n          onPress: toggleSocietyMenu,\n          style: [styles.dropdown, showSocietyMenu && styles.dropdownActive],\n          disabled: !citySelected,\n          children: _jsxDEV(Text, {\n            style: styles.dropdownText,\n            children: society ? society : \"Select Society\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), showSocietyMenu && _jsxDEV(View, {\n          style: styles.menu,\n          children: societies.map(item => _jsxDEV(TouchableOpacity, {\n            onPress: () => selectSociety(item),\n            disabled: !citySelected,\n            children: _jsxDEV(Text, {\n              style: styles.menuItem,\n              children: item.societyName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 37\n            }, this)\n          }, item._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), _jsxDEV(View, {\n        style: styles.dropdownContainer,\n        children: [_jsxDEV(TouchableOpacity, {\n          onPress: toggleBlockMenu,\n          style: [styles.dropdown, showBlockMenu && styles.dropdownActive],\n          disabled: !societySelected,\n          children: _jsxDEV(Text, {\n            children: block ? block : \"Select Block\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), showBlockMenu && _jsxDEV(View, {\n          style: styles.menu,\n          children: blocksForSelectedSociety.map(item => _jsxDEV(TouchableOpacity, {\n            onPress: () => selectBlock(item),\n            disabled: !societySelected,\n            children: _jsxDEV(Text, {\n              style: styles.menuItem,\n              children: item.blockName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 37\n            }, this)\n          }, item._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), _jsxDEV(View, {\n        style: styles.dropdownContainer,\n        children: [_jsxDEV(TouchableOpacity, {\n          onPress: toggleFlatMenu,\n          style: [styles.dropdown, showSocietyMenu && styles.dropdownActive],\n          disabled: !blockSelected,\n          children: _jsxDEV(View, {\n            children: _jsxDEV(Text, {\n              children: flat ? flat : \"Select Flat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), showFlatMenu && _jsxDEV(View, {\n          style: styles.menu,\n          children: flatsForSelectedBlock.map(item => _jsxDEV(TouchableOpacity, {\n            onPress: () => selectFlat(item),\n            disabled: !blockSelected,\n            children: _jsxDEV(Text, {\n              style: styles.menuItem,\n              children: item.flatNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 37\n            }, this)\n          }, item._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), flatsSelected && _jsxDEV(View, {\n        style: styles.radioContainer,\n        children: _jsxDEV(View, {\n          style: styles.radioGroup,\n          children: [_jsxDEV(View, {\n            style: styles.radioButton,\n            children: [_jsxDEV(RadioButton.Android, {\n              theme: {\n                colors: {\n                  primary: \"#7D0431\"\n                }\n              },\n              value: \"Owner\",\n              status: userType === \"Owner\" ? \"checked\" : \"unchecked\",\n              onPress: () => setUserType(\"Owner\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 33\n            }, this), _jsxDEV(PaperText, {\n              children: \"Owner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 29\n          }, this), _jsxDEV(View, {\n            style: styles.radioButton,\n            children: [_jsxDEV(RadioButton.Android, {\n              theme: {\n                colors: {\n                  primary: \"#7D0431\"\n                }\n              },\n              value: \"Tenant\",\n              status: userType === \"Tenant\" ? \"checked\" : \"unchecked\",\n              onPress: () => setUserType(\"Tenant\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 33\n            }, this), _jsxDEV(PaperText, {\n              children: \"Tenant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), _jsxDEV(View, {\n      style: styles.buttonContainer,\n      children: _jsxDEV(Button, {\n        mode: \"contained\",\n        theme: {\n          colors: {\n            primary: '#7D0431'\n          }\n        },\n        onPress: handleCreateUser,\n        disabled: !name || !email || !mobileNumber || !password || !city || !society || !block || !flat || !userType,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 15,\n    paddingTop: 20,\n    backgroundColor: \"#fcf6f0\"\n  },\n  title: {\n    fontSize: 28,\n    color: \"#7D0431\",\n    letterSpacing: 0.7,\n    fontWeight: \"bold\",\n    marginBottom: 10\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    marginTop: 15,\n    marginBottom: 5,\n    color: \"#555\"\n  },\n  input: {\n    marginVertical: 5\n  },\n  dropdownContainer: {\n    marginVertical: 8\n  },\n  dropdown: {\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    backgroundColor: \"#fff\",\n    padding: 12,\n    borderRadius: 5\n  },\n  dropdownActive: {\n    borderColor: \"#7D0431\"\n  },\n  dropdownText: {\n    fontSize: 16\n  },\n  menu: {\n    marginTop: 5,\n    backgroundColor: \"#fff\",\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    maxHeight: 150,\n    overflow: \"scroll\"\n  },\n  menuItem: {\n    padding: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: \"#ccc\"\n  },\n  radioContainer: {\n    marginTop: 20\n  },\n  radioGroup: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  radioButton: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  buttonContainer: {\n    marginVertical: 20,\n    paddingHorizontal: 15,\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0\n  }\n});\nexport default CreateUser;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","TouchableOpacity","ScrollView","RadioButton","PaperText","Button","TextInput","useDispatch","useSelector","fetchCities","fetchSocieties","sendVerificationEmail","useNavigation","jsxDEV","_jsxDEV","CreateUser","dispatch","navigation","cities","state","citiesState","societies","societiesState","name","setName","email","setEmail","mobileNumber","setPhoneNumber","password","setPassword","city","setCity","society","setSociety","block","setBlock","flat","setFlat","showCityMenu","setShowCityMenu","showSocietyMenu","setShowSocietyMenu","showBlockMenu","setShowBlockMenu","showFlatMenu","setShowFlatMenu","userType","setUserType","blocksForSelectedSociety","setBlocksForSelectedSociety","flatsForSelectedBlock","setFlatsForSelectedBlock","citySelected","setCitySelected","societySelected","setsocietySelected","blockSelected","setblockSelected","flatsSelected","setFlatsSelected","societyId","setSocietyId","selectCity","selectedCity","_id","toggleCityMenu","selectSociety","selectedSociety","societyName","fetchedBlocks","fetchBlocksForSociety","selectedSocietyId","blocks","find","item","selectBlock","selectedBlock","blockName","fetchedFlats","fetchFlatsForBlock","selectedBlockName","flats","selectFlat","selectedFlat","flatNumber","toggleSocietyMenu","toggleBlockMenu","toggleFlatMenu","handleCreateUser","unwrap","then","result","console","log","navigate","catch","error","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","sectionTitle","theme","colors","primary","mode","input","label","value","onChangeText","keyboardType","secureTextEntry","dropdownContainer","onPress","dropdown","dropdownActive","dropdownText","menu","map","menuItem","disabled","radioContainer","radioGroup","radioButton","Android","status","buttonContainer","create","flex","paddingHorizontal","paddingTop","backgroundColor","fontSize","color","letterSpacing","fontWeight","marginBottom","marginTop","marginVertical","borderWidth","borderColor","padding","borderRadius","maxHeight","overflow","borderBottomWidth","borderBottomColor","flexDirection","justifyContent","alignItems","position","bottom","left","right"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/src/panel/User/Navigations/Authentication/CreateUser.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity, ScrollView } from \"react-native\";\r\nimport { RadioButton, Text as PaperText, Button, TextInput } from \"react-native-paper\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchCities } from '../../Redux/Slice/AuthSlice/Signup/citySlice';\r\nimport { fetchSocieties } from \"../../Redux/Slice/AuthSlice/Signup/societySlice\";\r\nimport { sendVerificationEmail } from '../../Redux/Slice/AuthSlice/Signup/SendEmailVerification';\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\n\r\nconst CreateUser = () => {\r\n    const dispatch = useDispatch();\r\n    const navigation = useNavigation();\r\n    const cities = useSelector(state => state.citiesState.cities);\r\n    const societies = useSelector(state => state.societiesState.societies);\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [mobileNumber, setPhoneNumber] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [society, setSociety] = useState(\"\");\r\n    const [block, setBlock] = useState(\"\");\r\n    const [flat, setFlat] = useState(\"\");\r\n    const [showCityMenu, setShowCityMenu] = useState(false);\r\n    const [showSocietyMenu, setShowSocietyMenu] = useState(false);\r\n    const [showBlockMenu, setShowBlockMenu] = useState(false);\r\n    const [showFlatMenu, setShowFlatMenu] = useState(false);\r\n    const [userType, setUserType] = useState(\"\");\r\n    const [blocksForSelectedSociety, setBlocksForSelectedSociety] = useState([]);\r\n    const [flatsForSelectedBlock, setFlatsForSelectedBlock] = useState([]);\r\n    const [citySelected, setCitySelected] = useState(false);\r\n    const [societySelected, setsocietySelected] = useState(false);\r\n    const [blockSelected, setblockSelected] = useState(false);\r\n    const [flatsSelected, setFlatsSelected] = useState(false);\r\n    const [societyId, setSocietyId] = useState('')\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchCities());\r\n    }, [dispatch]);\r\n\r\n    const selectCity = (selectedCity) => {\r\n        setCity(selectedCity.name);\r\n        setShowCityMenu(false);\r\n        dispatch(fetchSocieties(selectedCity._id));\r\n        setCitySelected(true);\r\n    };\r\n\r\n    const toggleCityMenu = () => {\r\n        setShowCityMenu(!showCityMenu);\r\n    };\r\n\r\n    const selectSociety = (selectedSociety) => {\r\n        setsocietySelected(true);\r\n        setSocietyId(selectedSociety._id)\r\n        setSociety(selectedSociety.societyName);\r\n        setShowSocietyMenu(false);\r\n        const fetchedBlocks = fetchBlocksForSociety(selectedSociety._id);\r\n        setBlocksForSelectedSociety(fetchedBlocks);\r\n    };\r\n\r\n    const fetchBlocksForSociety = (selectedSocietyId) => {\r\n        const blocks = societies.find(item => item._id === selectedSocietyId)?.blocks || [];\r\n        return blocks;\r\n    };\r\n\r\n    const selectBlock = (selectedBlock) => {\r\n        setblockSelected(true);\r\n        setBlock(selectedBlock.blockName);\r\n        setShowBlockMenu(false);\r\n        const fetchedFlats = fetchFlatsForBlock(selectedBlock.blockName);\r\n        setFlatsForSelectedBlock(fetchedFlats);\r\n    };\r\n\r\n    const fetchFlatsForBlock = (selectedBlockName) => {\r\n        const flats = blocksForSelectedSociety.find(item => item.blockName === selectedBlockName)?.flats || [];\r\n        return flats;\r\n    };\r\n\r\n    const selectFlat = (selectedFlat) => {\r\n        setFlat(selectedFlat.flatNumber);\r\n        setShowFlatMenu(false);\r\n        setFlatsSelected(true);\r\n    };\r\n\r\n    const toggleSocietyMenu = () => {\r\n        setShowSocietyMenu(!showSocietyMenu);\r\n    };\r\n\r\n    const toggleBlockMenu = () => {\r\n        setShowBlockMenu(!showBlockMenu);\r\n    };\r\n\r\n    const toggleFlatMenu = () => {\r\n        setShowFlatMenu(!showFlatMenu);\r\n    };\r\n\r\n    const handleCreateUser = () => {\r\n        dispatch(sendVerificationEmail(email))\r\n            .unwrap()\r\n            .then((result) => {\r\n                console.log('Email sent:', result);\r\n                console.log(name,\r\n                    email,\r\n                    mobileNumber,\r\n                    password,\r\n                    societyId,\r\n                    society,\r\n                    block,\r\n                    flat,\r\n                    userType)\r\n                navigation.navigate(\"Verification\", {\r\n                    name,\r\n                    email,\r\n                    mobileNumber,\r\n                    password,\r\n                    societyId,\r\n                    society,\r\n                    block,\r\n                    flat,\r\n                    userType,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                // Handle error (optional)\r\n                console.error('Failed to send email:', error);\r\n            });\r\n    };\r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <ScrollView>\r\n                <Text style={styles.title}>Create User</Text>\r\n                <Text style={styles.sectionTitle}>User Information</Text>\r\n                <TextInput\r\n                    theme={{ colors: { primary: \"#7D0431\" } }}\r\n                    mode=\"outlined\"\r\n                    style={styles.input}\r\n                    label=\"Name\"\r\n                    value={name}\r\n                    onChangeText={setName}\r\n                />\r\n                <TextInput\r\n                    theme={{ colors: { primary: \"#7D0431\" } }}\r\n                    mode=\"outlined\"\r\n                    style={styles.input}\r\n                    label=\"Email\"\r\n                    value={email}\r\n                    onChangeText={setEmail}\r\n                    keyboardType=\"email-address\"\r\n                />\r\n                <TextInput\r\n                    theme={{ colors: { primary: \"#7D0431\" } }}\r\n                    mode=\"outlined\"\r\n                    style={styles.input}\r\n                    label=\"Phone Number\"\r\n                    value={mobileNumber}\r\n                    onChangeText={setPhoneNumber}\r\n                    keyboardType=\"phone-pad\"\r\n                />\r\n                <TextInput\r\n                    theme={{ colors: { primary: \"#7D0431\" } }}\r\n                    mode=\"outlined\"\r\n                    style={styles.input}\r\n                    label=\"Password\"\r\n                    value={password}\r\n                    onChangeText={setPassword}\r\n                    secureTextEntry={true}\r\n                />\r\n\r\n                <Text style={styles.sectionTitle}>Apartment Information</Text>\r\n                <View style={styles.dropdownContainer}>\r\n                    <TouchableOpacity onPress={toggleCityMenu} style={[styles.dropdown, showCityMenu && styles.dropdownActive]}>\r\n                        <Text style={styles.dropdownText}>{city ? city : \"Select City\"}</Text>\r\n                    </TouchableOpacity>\r\n                    {showCityMenu && (\r\n                        <View style={styles.menu}>\r\n                            {cities.map((item) => (\r\n                                <TouchableOpacity key={item._id} onPress={() => selectCity(item)}>\r\n                                    <Text style={styles.menuItem}>{item.name}</Text>\r\n                                </TouchableOpacity>\r\n                            ))}\r\n                        </View>\r\n                    )}\r\n                </View>\r\n                <View style={styles.dropdownContainer}>\r\n                    <TouchableOpacity onPress={toggleSocietyMenu} style={[styles.dropdown, showSocietyMenu && styles.dropdownActive]} disabled={!citySelected}>\r\n                        <Text style={styles.dropdownText}>{society ? society : \"Select Society\"}</Text>\r\n                    </TouchableOpacity>\r\n                    {showSocietyMenu && (\r\n                        <View style={styles.menu}>\r\n                            {societies.map((item) => (\r\n                                <TouchableOpacity key={item._id} onPress={() => selectSociety(item)} disabled={!citySelected}>\r\n                                    <Text style={styles.menuItem}>{item.societyName}</Text>\r\n                                </TouchableOpacity>\r\n                            ))}\r\n                        </View>\r\n                    )}\r\n                </View>\r\n\r\n                <View style={styles.dropdownContainer}>\r\n                    <TouchableOpacity onPress={toggleBlockMenu} style={[styles.dropdown, showBlockMenu && styles.dropdownActive]} disabled={!societySelected}>\r\n                        <Text>{block ? block : \"Select Block\"}</Text>\r\n                    </TouchableOpacity>\r\n                    {showBlockMenu && (\r\n                        <View style={styles.menu}>\r\n                            {blocksForSelectedSociety.map((item) => (\r\n                                <TouchableOpacity key={item._id} onPress={() => selectBlock(item)} disabled={!societySelected}>\r\n                                    <Text style={styles.menuItem}>{item.blockName}</Text>\r\n                                </TouchableOpacity>\r\n                            ))}\r\n                        </View>\r\n                    )}\r\n                </View>\r\n\r\n                <View style={styles.dropdownContainer}>\r\n                    <TouchableOpacity onPress={toggleFlatMenu} style={[styles.dropdown, showSocietyMenu && styles.dropdownActive]} disabled={!blockSelected}>\r\n                        <View>\r\n                            <Text>{flat ? flat : \"Select Flat\"}</Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                    {showFlatMenu && (\r\n                        <View style={styles.menu}>\r\n                            {flatsForSelectedBlock.map((item) => (\r\n                                <TouchableOpacity key={item._id} onPress={() => selectFlat(item)} disabled={!blockSelected}>\r\n                                    <Text style={styles.menuItem}>{item.flatNumber}</Text>\r\n                                </TouchableOpacity>\r\n                            ))}\r\n                        </View>\r\n                    )}\r\n                </View>\r\n                {flatsSelected && (\r\n                    <View style={styles.radioContainer}>\r\n                        <View style={styles.radioGroup}>\r\n                            <View style={styles.radioButton}>\r\n                                <RadioButton.Android\r\n                                    theme={{ colors: { primary: \"#7D0431\" } }}\r\n                                    value=\"Owner\"\r\n                                    status={userType === \"Owner\" ? \"checked\" : \"unchecked\"}\r\n                                    onPress={() => setUserType(\"Owner\")}\r\n                                />\r\n                                <PaperText>Owner</PaperText>\r\n                            </View>\r\n                            <View style={styles.radioButton}>\r\n                                <RadioButton.Android\r\n                                    theme={{ colors: { primary: \"#7D0431\" } }}\r\n                                    value=\"Tenant\"\r\n                                    status={userType === \"Tenant\" ? \"checked\" : \"unchecked\"}\r\n                                    onPress={() => setUserType(\"Tenant\")}\r\n                                />\r\n                                <PaperText>Tenant</PaperText>\r\n                            </View>\r\n                        </View>\r\n                    </View>)}\r\n            </ScrollView>\r\n            <View style={styles.buttonContainer}>\r\n                <Button\r\n                    mode=\"contained\"\r\n                    theme={{ colors: { primary: '#7D0431' } }}\r\n                    onPress={handleCreateUser}\r\n                    disabled={!name || !email || !mobileNumber || !password || !city || !society || !block || !flat || !userType}\r\n                >\r\n                    Submit\r\n                </Button>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        paddingHorizontal: 15,\r\n        paddingTop: 20,\r\n        backgroundColor: \"#fcf6f0\",\r\n    },\r\n    title: {\r\n        fontSize: 28,\r\n        color: \"#7D0431\",\r\n        letterSpacing: 0.7,\r\n        fontWeight: \"bold\",\r\n        marginBottom: 10,\r\n    },\r\n    sectionTitle: {\r\n        fontSize: 18,\r\n        fontWeight: \"bold\",\r\n        marginTop: 15,\r\n        marginBottom: 5,\r\n        color: \"#555\",\r\n    },\r\n    input: {\r\n        marginVertical: 5,\r\n    },\r\n    dropdownContainer: {\r\n        marginVertical: 8,\r\n    },\r\n    dropdown: {\r\n        borderWidth: 1,\r\n        borderColor: \"#ccc\",\r\n        backgroundColor: \"#fff\",\r\n        padding: 12,\r\n        borderRadius: 5,\r\n    },\r\n    dropdownActive: {\r\n        borderColor: \"#7D0431\",\r\n    },\r\n    dropdownText: {\r\n        fontSize: 16,\r\n    },\r\n    menu: {\r\n        marginTop: 5,\r\n        backgroundColor: \"#fff\",\r\n        borderWidth: 1,\r\n        borderColor: \"#ccc\",\r\n        borderRadius: 5,\r\n        maxHeight: 150,\r\n        overflow: \"scroll\",\r\n    },\r\n    menuItem: {\r\n        padding: 12,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: \"#ccc\",\r\n    },\r\n    radioContainer: {\r\n        marginTop: 20,\r\n    },\r\n    radioGroup: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    radioButton: {\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n    },\r\n    buttonContainer: {\r\n        marginVertical: 20,\r\n        paddingHorizontal: 15,\r\n        position: \"absolute\",\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n    },\r\n});\r\n\r\nexport default CreateUser;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}