{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\src\\\\panel\\\\Security\\\\Navigations\\\\Notice.js\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchNotices, selectError, selectLoading, selectNotices } from '../../User/Redux/Slice/CommunitySlice/NoticeSlice';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notice = () => {\n  const dispatch = useDispatch();\n  const [societyId, setSocietyId] = useState(\"\");\n  const notices = useSelector(selectNotices);\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n  useEffect(() => {\n    const getUserName = async () => {\n      try {\n        const userString = await AsyncStorage.getItem(\"user\");\n        if (userString !== null) {\n          const user = JSON.parse(userString);\n          setSocietyId(user.societyId);\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch the user from async storage\", error);\n      }\n    };\n    getUserName();\n  }, []);\n  useEffect(() => {\n    if (societyId) {\n      dispatch(fetchNotices(societyId));\n    }\n  }, [dispatch, societyId]);\n  if (loading) {\n    return _jsxDEV(View, {\n      style: [styles.container, styles.loadingContainer],\n      children: _jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: \"#7do431\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return _jsxDEV(View, {\n      style: styles.container,\n      children: _jsxDEV(Text, {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n  console.log(notices);\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: _jsxDEV(FlatList, {\n      data: notices.notices,\n      keyExtractor: item => item._id,\n      renderItem: ({\n        item\n      }) => _jsxDEV(View, {\n        style: styles.MainContainer,\n        children: [_jsxDEV(View, {\n          style: styles.header,\n          children: [_jsxDEV(Image, {\n            source: require(\"../../../assets/Security/images/message-board.png\"),\n            style: styles.image,\n            resizeMode: \"contain\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: styles.headerText,\n            children: item.subject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: styles.time,\n            children: item.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: styles.mainText,\n          children: item.subject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: styles.paragraph,\n          children: item.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    padding: 20\n  },\n  loadingContainer: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  MainContainer: {\n    backgroundColor: \"#F3E1D5\",\n    borderWidth: 1,\n    borderColor: \"#27272a\",\n    padding: 10,\n    marginTop: 10,\n    borderRadius: 8\n  },\n  header: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: 10\n  },\n  image: {\n    width: 20,\n    height: 20,\n    marginRight: 10\n  },\n  headerText: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    flex: 1,\n    marginRight: 10,\n    color: \"#800336\"\n  },\n  time: {\n    fontSize: 14,\n    color: \"grey\"\n  },\n  mainText: {\n    fontSize: 16,\n    fontWeight: \"500\"\n  },\n  paragraph: {\n    fontSize: 14,\n    letterSpacing: 0.5,\n    color: \"grey\"\n  }\n});\nexport default Notice;","map":{"version":3,"names":["React","useEffect","useState","View","Text","Image","StyleSheet","ActivityIndicator","FlatList","useSelector","useDispatch","fetchNotices","selectError","selectLoading","selectNotices","AsyncStorage","jsxDEV","_jsxDEV","Notice","dispatch","societyId","setSocietyId","notices","loading","error","getUserName","userString","getItem","user","JSON","parse","console","style","styles","container","loadingContainer","children","size","color","fileName","_jsxFileName","lineNumber","columnNumber","log","data","keyExtractor","item","_id","renderItem","MainContainer","header","source","require","image","resizeMode","headerText","subject","time","mainText","paragraph","description","create","flex","backgroundColor","padding","justifyContent","alignItems","borderWidth","borderColor","marginTop","borderRadius","flexDirection","marginBottom","width","height","marginRight","fontSize","fontWeight","letterSpacing"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/src/panel/Security/Navigations/Notice.js"],"sourcesContent":["// Notice.js\n\nimport React, { useEffect, useState } from 'react';\nimport { View, Text, Image, StyleSheet, ActivityIndicator, FlatList } from 'react-native';\nimport { useSelector, useDispatch } from 'react-redux';\n// import { fetchNotices, selectNotices, selectLoading, selectError } from '../../User/Redux/Slice/Notice/NoticeSlice';\nimport { fetchNotices, selectError, selectLoading, selectNotices } from '../../User/Redux/Slice/CommunitySlice/NoticeSlice';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Notice = () => {\n  const dispatch = useDispatch();\n  const [societyId, setSocietyId] = useState(\"\");\n\n  const notices = useSelector(selectNotices);\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n  useEffect(() => {\n    const getUserName = async () => {\n      try {\n        const userString = await AsyncStorage.getItem(\"user\");\n        if (userString !== null) {\n          const user = JSON.parse(userString);\n          setSocietyId(user.societyId);\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch the user from async storage\", error);\n      }\n    };\n\n    getUserName();\n  }, []);\n  useEffect(() => {\n    if (societyId) {\n      dispatch(fetchNotices(societyId));\n    }\n  }, [dispatch, societyId]);\n\n  if (loading) {\n    return (\n      <View style={[styles.container, styles.loadingContainer]}>\n        <ActivityIndicator size=\"large\" color=\"#7do431\" />\n      </View>\n    );\n  }\n\n  if (error) {\n    return (\n      <View style={styles.container}>\n        <Text>Error: {error}</Text>\n      </View>\n    );\n  }\nconsole.log(notices)\n  return (\n    <View style={styles.container}>\n      <FlatList\n        data={notices.notices}\n        keyExtractor={(item) => item._id}\n        renderItem={({ item }) => (\n          <View style={styles.MainContainer}>\n            <View style={styles.header}>\n              <Image\n                source={require(\"../../../assets/Security/images/message-board.png\")}\n                style={styles.image}\n                resizeMode=\"contain\"\n              />\n              <Text style={styles.headerText}>{item.subject}</Text>\n              <Text style={styles.time}>{item.time}</Text>\n            </View>\n            <Text style={styles.mainText}>{item.subject}</Text>\n            <Text style={styles.paragraph}>{item.description}</Text>\n          </View>\n        )}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    padding: 20,\n  },\n  loadingContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  MainContainer: {\n    backgroundColor: \"#F3E1D5\",\n    borderWidth: 1,\n    borderColor: \"#27272a\",\n    padding: 10,\n    marginTop: 10,\n    borderRadius: 8,\n  },\n  header: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: 10,\n  },\n  image: {\n    width: 20,\n    height: 20,\n    marginRight: 10,\n  },\n  headerText: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    flex: 1,\n    marginRight: 10,\n    color: \"#800336\",\n  },\n  time: {\n    fontSize: 14,\n    color: \"grey\",\n  },\n  mainText: {\n    fontSize: 16,\n    fontWeight: \"500\",\n  },\n  paragraph: {\n    fontSize: 14,\n    letterSpacing: 0.5,\n    color: \"grey\",\n  },\n});\n\nexport default Notice;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}