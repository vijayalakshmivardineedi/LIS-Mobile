{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\node_modules\\\\react-native-gifted-chat\\\\lib\\\\InputToolbar.js\";\nimport PropTypes from 'prop-types';\nimport React, { useMemo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Composer } from './Composer';\nimport { Send } from './Send';\nimport { Actions } from './Actions';\nimport Color from './Color';\nimport { StylePropType } from './utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function InputToolbar(props) {\n  const {\n    renderActions,\n    onPressActionButton,\n    renderComposer,\n    renderSend,\n    renderAccessory,\n    options,\n    optionTintColor,\n    icon,\n    wrapperStyle,\n    containerStyle\n  } = props;\n  const actionsFragment = useMemo(() => {\n    const props = {\n      options,\n      optionTintColor,\n      icon,\n      wrapperStyle,\n      containerStyle\n    };\n    return renderActions?.(props) || onPressActionButton && _jsxDEV(Actions, Object.assign({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 67\n    }, this);\n  }, [renderActions, onPressActionButton, options, optionTintColor, icon, wrapperStyle, containerStyle]);\n  const composerFragment = useMemo(() => {\n    return renderComposer?.(props) || _jsxDEV(Composer, Object.assign({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 45\n    }, this);\n  }, [renderComposer, props]);\n  return _jsxDEV(View, {\n    style: [styles.container, containerStyle],\n    children: [_jsxDEV(View, {\n      style: [styles.primary, props.primaryStyle],\n      children: [actionsFragment, composerFragment, renderSend?.(props) || _jsxDEV(Send, Object.assign({}, props), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), renderAccessory && _jsxDEV(View, {\n      style: [styles.accessory, props.accessoryStyle],\n      children: renderAccessory(props)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 13\n  }, this);\n}\nInputToolbar.propTypes = {\n  renderAccessory: PropTypes.func,\n  renderActions: PropTypes.func,\n  renderSend: PropTypes.func,\n  renderComposer: PropTypes.func,\n  onPressActionButton: PropTypes.func,\n  containerStyle: StylePropType,\n  primaryStyle: StylePropType,\n  accessoryStyle: StylePropType\n};\nconst styles = StyleSheet.create({\n  container: {\n    borderTopWidth: StyleSheet.hairlineWidth,\n    borderTopColor: Color.defaultColor,\n    backgroundColor: Color.white\n  },\n  primary: {\n    flexDirection: 'row',\n    alignItems: 'flex-end'\n  },\n  accessory: {\n    height: 44\n  }\n});","map":{"version":3,"names":["PropTypes","React","useMemo","StyleSheet","View","Composer","Send","Actions","Color","StylePropType","jsxDEV","_jsxDEV","InputToolbar","props","renderActions","onPressActionButton","renderComposer","renderSend","renderAccessory","options","optionTintColor","icon","wrapperStyle","containerStyle","actionsFragment","Object","assign","fileName","_jsxFileName","lineNumber","columnNumber","composerFragment","style","styles","container","children","primary","primaryStyle","accessory","accessoryStyle","propTypes","func","create","borderTopWidth","hairlineWidth","borderTopColor","defaultColor","backgroundColor","white","flexDirection","alignItems","height"],"sources":["C:\\Users\\user\\OneDrive\\Documents\\rn\\l\\node_modules\\react-native-gifted-chat\\src\\InputToolbar.tsx"],"sourcesContent":["import PropTypes from 'prop-types'\nimport React, { useMemo } from 'react'\nimport { StyleSheet, View, StyleProp, ViewStyle } from 'react-native'\n\nimport { Composer, ComposerProps } from './Composer'\nimport { Send, SendProps } from './Send'\nimport { Actions, ActionsProps } from './Actions'\nimport Color from './Color'\nimport { StylePropType } from './utils'\nimport { IMessage } from './Models'\n\nexport interface InputToolbarProps<TMessage extends IMessage> {\n  options?: { [key: string]: () => void }\n  optionTintColor?: string\n  containerStyle?: StyleProp<ViewStyle>\n  primaryStyle?: StyleProp<ViewStyle>\n  accessoryStyle?: StyleProp<ViewStyle>\n  renderAccessory?(props: InputToolbarProps<TMessage>): React.ReactNode\n  renderActions?(props: ActionsProps): React.ReactNode\n  renderSend?(props: SendProps<TMessage>): React.ReactNode\n  renderComposer?(props: ComposerProps): React.ReactNode\n  onPressActionButton?(): void\n  icon?: () => React.ReactNode\n  wrapperStyle?: StyleProp<ViewStyle>\n}\n\nexport function InputToolbar<TMessage extends IMessage = IMessage> (\n  props: InputToolbarProps<TMessage>\n) {\n  const {\n    renderActions,\n    onPressActionButton,\n    renderComposer,\n    renderSend,\n    renderAccessory,\n    options,\n    optionTintColor,\n    icon,\n    wrapperStyle,\n    containerStyle,\n  } = props\n\n  const actionsFragment = useMemo(() => {\n    const props = {\n      options,\n      optionTintColor,\n      icon,\n      wrapperStyle,\n      containerStyle,\n    }\n\n    return (\n      renderActions?.(props) || (onPressActionButton && <Actions {...props} />)\n    )\n  }, [\n    renderActions,\n    onPressActionButton,\n    options,\n    optionTintColor,\n    icon,\n    wrapperStyle,\n    containerStyle,\n  ])\n\n  const composerFragment = useMemo(() => {\n    return (\n      renderComposer?.(props as ComposerProps) || (\n        <Composer {...(props as ComposerProps)} />\n      )\n    )\n  }, [renderComposer, props])\n\n  return (\n    <View style={[styles.container, containerStyle]}>\n      <View style={[styles.primary, props.primaryStyle]}>\n        {actionsFragment}\n        {composerFragment}\n        {renderSend?.(props) || <Send {...props} />}\n      </View>\n      {renderAccessory && (\n        <View style={[styles.accessory, props.accessoryStyle]}>\n          {renderAccessory(props)}\n        </View>\n      )}\n    </View>\n  )\n}\n\nInputToolbar.propTypes = {\n  renderAccessory: PropTypes.func,\n  renderActions: PropTypes.func,\n  renderSend: PropTypes.func,\n  renderComposer: PropTypes.func,\n  onPressActionButton: PropTypes.func,\n  containerStyle: StylePropType,\n  primaryStyle: StylePropType,\n  accessoryStyle: StylePropType,\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    borderTopWidth: StyleSheet.hairlineWidth,\n    borderTopColor: Color.defaultColor,\n    backgroundColor: Color.white,\n  },\n  primary: {\n    flexDirection: 'row',\n    alignItems: 'flex-end',\n  },\n  accessory: {\n    height: 44,\n  },\n})\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}