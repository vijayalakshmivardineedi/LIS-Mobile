{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:\\Users\\user\\OneDrive\\Documents\\rn\\l\\node_modules\\react-native-gifted-chat\\src\\Models.ts"],"sourcesContent":["import { StyleProp, ViewStyle } from 'react-native'\nimport { LightboxProps } from 'react-native-lightbox-v2'\n\nexport { ActionsProps } from './Actions'\nexport { AvatarProps } from './Avatar'\nexport {\n  BubbleProps,\n  RenderMessageImageProps,\n  RenderMessageVideoProps,\n  RenderMessageAudioProps,\n  RenderMessageTextProps\n} from './Bubble'\nexport { ComposerProps } from './Composer'\nexport { DayProps } from './Day'\nexport { GiftedAvatarProps } from './GiftedAvatar'\nexport { InputToolbarProps } from './InputToolbar'\nexport { LoadEarlierProps } from './LoadEarlier'\nexport { MessageProps } from './Message'\nexport { MessageContainerProps } from './MessageContainer'\nexport { MessageImageProps } from './MessageImage'\nexport { MessageTextProps } from './MessageText'\nexport { QuickRepliesProps } from './QuickReplies'\nexport { SendProps } from './Send'\nexport { SystemMessageProps } from './SystemMessage'\nexport { TimeProps } from './Time'\n\nexport type Omit<T, K> = Pick<T, Exclude<keyof T, K>>\n\nexport interface LeftRightStyle<T> {\n  left?: StyleProp<T>\n  right?: StyleProp<T>\n}\n\ntype renderFunction = (x: unknown) => JSX.Element\n\nexport interface User {\n  _id: string | number\n  name?: string\n  avatar?: string | number | renderFunction\n}\n\nexport interface Reply {\n  title: string\n  value: string\n  messageId?: number | string\n}\n\nexport interface QuickReplies {\n  type: 'radio' | 'checkbox'\n  values: Reply[]\n  keepIt?: boolean\n}\n\nexport interface IMessage {\n  _id: string | number\n  text: string\n  createdAt: Date | number\n  user: User\n  image?: string\n  video?: string\n  audio?: string\n  system?: boolean\n  sent?: boolean\n  received?: boolean\n  pending?: boolean\n  quickReplies?: QuickReplies\n}\n\nexport type IChatMessage = IMessage\n\nexport interface MessageVideoProps<TMessage extends IMessage> {\n  currentMessage: TMessage\n  containerStyle?: StyleProp<ViewStyle>\n  videoStyle?: StyleProp<ViewStyle>\n  videoProps?: object\n  lightboxProps?: LightboxProps\n}\n\nexport interface MessageAudioProps<TMessage extends IMessage> {\n  currentMessage: TMessage\n  containerStyle?: StyleProp<ViewStyle>\n  audioStyle?: StyleProp<ViewStyle>\n  audioProps?: object\n}\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}