{"ast":null,"code":"const XDate = require('xdate');\nexport function padNumber(n) {\n  if (n < 10) {\n    return '0' + n;\n  }\n  return n;\n}\nexport function xdateToData(date) {\n  const d = date instanceof XDate ? date : new XDate(date);\n  const dateString = toMarkingFormat(d);\n  return {\n    year: d.getFullYear(),\n    month: d.getMonth() + 1,\n    day: d.getDate(),\n    timestamp: new XDate(dateString, true).getTime(),\n    dateString: dateString\n  };\n}\nexport function parseDate(d) {\n  if (!d) {\n    return;\n  } else if (d.timestamp) {\n    return new XDate(d.timestamp, true);\n  } else if (d instanceof XDate) {\n    return new XDate(toMarkingFormat(d), true);\n  } else if (d.getTime) {\n    const dateString = d.getFullYear() + '-' + padNumber(d.getMonth() + 1) + '-' + padNumber(d.getDate());\n    return new XDate(dateString, true);\n  } else if (d.year) {\n    const dateString = d.year + '-' + padNumber(d.month) + '-' + padNumber(d.day);\n    return new XDate(dateString, true);\n  } else if (d) {\n    return new XDate(d, true);\n  }\n}\nexport function toMarkingFormat(d) {\n  if (!isNaN(d.getTime())) {\n    const year = `${d.getFullYear()}`;\n    const month = d.getMonth() + 1;\n    const doubleDigitMonth = month < 10 ? `0${month}` : `${month}`;\n    const day = d.getDate();\n    const doubleDigitDay = day < 10 ? `0${day}` : `${day}`;\n    return year + '-' + doubleDigitMonth + '-' + doubleDigitDay;\n  }\n  return 'Invalid Date';\n}","map":{"version":3,"names":["XDate","require","padNumber","n","xdateToData","date","d","dateString","toMarkingFormat","year","getFullYear","month","getMonth","day","getDate","timestamp","getTime","parseDate","isNaN","doubleDigitMonth","doubleDigitDay"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/node_modules/react-native-calendars/src/interface.js"],"sourcesContent":["const XDate = require('xdate');\nexport function padNumber(n) {\n    if (n < 10) {\n        return '0' + n;\n    }\n    return n;\n}\nexport function xdateToData(date) {\n    const d = date instanceof XDate ? date : new XDate(date);\n    const dateString = toMarkingFormat(d);\n    return {\n        year: d.getFullYear(),\n        month: d.getMonth() + 1,\n        day: d.getDate(),\n        timestamp: new XDate(dateString, true).getTime(),\n        dateString: dateString\n    };\n}\nexport function parseDate(d) {\n    if (!d) {\n        return;\n    }\n    else if (d.timestamp) {\n        // conventional data timestamp\n        return new XDate(d.timestamp, true);\n    }\n    else if (d instanceof XDate) {\n        // xdate\n        return new XDate(toMarkingFormat(d), true);\n    }\n    else if (d.getTime) {\n        // javascript date\n        const dateString = d.getFullYear() + '-' + padNumber(d.getMonth() + 1) + '-' + padNumber(d.getDate());\n        return new XDate(dateString, true);\n    }\n    else if (d.year) {\n        const dateString = d.year + '-' + padNumber(d.month) + '-' + padNumber(d.day);\n        return new XDate(dateString, true);\n    }\n    else if (d) {\n        // timestamp number or date formatted as string\n        return new XDate(d, true);\n    }\n}\nexport function toMarkingFormat(d) {\n    if (!isNaN(d.getTime())) {\n        const year = `${d.getFullYear()}`;\n        const month = d.getMonth() + 1;\n        const doubleDigitMonth = month < 10 ? `0${month}` : `${month}`;\n        const day = d.getDate();\n        const doubleDigitDay = day < 10 ? `0${day}` : `${day}`;\n        return year + '-' + doubleDigitMonth + '-' + doubleDigitDay;\n    }\n    return 'Invalid Date';\n}\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC9B,OAAO,SAASC,SAASA,CAACC,CAAC,EAAE;EACzB,IAAIA,CAAC,GAAG,EAAE,EAAE;IACR,OAAO,GAAG,GAAGA,CAAC;EAClB;EACA,OAAOA,CAAC;AACZ;AACA,OAAO,SAASC,WAAWA,CAACC,IAAI,EAAE;EAC9B,MAAMC,CAAC,GAAGD,IAAI,YAAYL,KAAK,GAAGK,IAAI,GAAG,IAAIL,KAAK,CAACK,IAAI,CAAC;EACxD,MAAME,UAAU,GAAGC,eAAe,CAACF,CAAC,CAAC;EACrC,OAAO;IACHG,IAAI,EAAEH,CAAC,CAACI,WAAW,CAAC,CAAC;IACrBC,KAAK,EAAEL,CAAC,CAACM,QAAQ,CAAC,CAAC,GAAG,CAAC;IACvBC,GAAG,EAAEP,CAAC,CAACQ,OAAO,CAAC,CAAC;IAChBC,SAAS,EAAE,IAAIf,KAAK,CAACO,UAAU,EAAE,IAAI,CAAC,CAACS,OAAO,CAAC,CAAC;IAChDT,UAAU,EAAEA;EAChB,CAAC;AACL;AACA,OAAO,SAASU,SAASA,CAACX,CAAC,EAAE;EACzB,IAAI,CAACA,CAAC,EAAE;IACJ;EACJ,CAAC,MACI,IAAIA,CAAC,CAACS,SAAS,EAAE;IAElB,OAAO,IAAIf,KAAK,CAACM,CAAC,CAACS,SAAS,EAAE,IAAI,CAAC;EACvC,CAAC,MACI,IAAIT,CAAC,YAAYN,KAAK,EAAE;IAEzB,OAAO,IAAIA,KAAK,CAACQ,eAAe,CAACF,CAAC,CAAC,EAAE,IAAI,CAAC;EAC9C,CAAC,MACI,IAAIA,CAAC,CAACU,OAAO,EAAE;IAEhB,MAAMT,UAAU,GAAGD,CAAC,CAACI,WAAW,CAAC,CAAC,GAAG,GAAG,GAAGR,SAAS,CAACI,CAAC,CAACM,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAGV,SAAS,CAACI,CAAC,CAACQ,OAAO,CAAC,CAAC,CAAC;IACrG,OAAO,IAAId,KAAK,CAACO,UAAU,EAAE,IAAI,CAAC;EACtC,CAAC,MACI,IAAID,CAAC,CAACG,IAAI,EAAE;IACb,MAAMF,UAAU,GAAGD,CAAC,CAACG,IAAI,GAAG,GAAG,GAAGP,SAAS,CAACI,CAAC,CAACK,KAAK,CAAC,GAAG,GAAG,GAAGT,SAAS,CAACI,CAAC,CAACO,GAAG,CAAC;IAC7E,OAAO,IAAIb,KAAK,CAACO,UAAU,EAAE,IAAI,CAAC;EACtC,CAAC,MACI,IAAID,CAAC,EAAE;IAER,OAAO,IAAIN,KAAK,CAACM,CAAC,EAAE,IAAI,CAAC;EAC7B;AACJ;AACA,OAAO,SAASE,eAAeA,CAACF,CAAC,EAAE;EAC/B,IAAI,CAACY,KAAK,CAACZ,CAAC,CAACU,OAAO,CAAC,CAAC,CAAC,EAAE;IACrB,MAAMP,IAAI,GAAG,GAAGH,CAAC,CAACI,WAAW,CAAC,CAAC,EAAE;IACjC,MAAMC,KAAK,GAAGL,CAAC,CAACM,QAAQ,CAAC,CAAC,GAAG,CAAC;IAC9B,MAAMO,gBAAgB,GAAGR,KAAK,GAAG,EAAE,GAAG,IAAIA,KAAK,EAAE,GAAG,GAAGA,KAAK,EAAE;IAC9D,MAAME,GAAG,GAAGP,CAAC,CAACQ,OAAO,CAAC,CAAC;IACvB,MAAMM,cAAc,GAAGP,GAAG,GAAG,EAAE,GAAG,IAAIA,GAAG,EAAE,GAAG,GAAGA,GAAG,EAAE;IACtD,OAAOJ,IAAI,GAAG,GAAG,GAAGU,gBAAgB,GAAG,GAAG,GAAGC,cAAc;EAC/D;EACA,OAAO,cAAc;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}