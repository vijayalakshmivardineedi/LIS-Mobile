{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\src\\\\panel\\\\Security\\\\Component\\\\CustomKeypad\\\\DialpadKeypad.js\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Feather, MaterialIcons } from \"@expo/vector-icons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DialpadKeypad = ({\n  dialPadContent,\n  pinLength,\n  code,\n  setCode,\n  dialPadSize,\n  dialPadTextSize\n}) => {\n  const navigation = useNavigation();\n  return _jsxDEV(View, {\n    style: {\n      height: 430\n    },\n    children: _jsxDEV(FlatList, {\n      data: dialPadContent,\n      numColumns: 3,\n      keyExtractor: (_, index) => index.toString(),\n      renderItem: ({\n        item\n      }) => {\n        return _jsxDEV(TouchableOpacity, {\n          disabled: item === \"\",\n          onPress: () => {\n            if (item === \"X\") {\n              setCode(prev => prev.slice(0, -1));\n            } else if (item !== \"Y\") {\n              if (code.length < pinLength) {\n                setCode(prev => [...prev, item]);\n              }\n            } else {\n              navigation.navigate('Scanner');\n            }\n          },\n          children: _jsxDEV(View, {\n            style: [{\n              backgroundColor: item === \"Y\" ? \"#7d0431\" : \"#F8E9DC\",\n              width: dialPadSize,\n              height: dialPadSize\n            }, styles.dialPadContainer],\n            children: item === \"X\" ? _jsxDEV(Feather, {\n              name: \"delete\",\n              size: 24,\n              color: \"#800336\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this) : item === \"Y\" ? _jsxDEV(MaterialIcons, {\n              name: \"qr-code-scanner\",\n              size: 32,\n              color: \"#ffffff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this) : _jsxDEV(Text, {\n              style: [{\n                fontSize: dialPadTextSize\n              }, styles.dialPadText],\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\nexport default DialpadKeypad;\nconst styles = StyleSheet.create({\n  dialPadContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: 10,\n    borderRadius: 50,\n    borderColor: \"transparent\"\n  },\n  dialPadText: {\n    color: \"#7d0431\"\n  }\n});","map":{"version":3,"names":["React","StyleSheet","Text","View","FlatList","TouchableOpacity","Feather","MaterialIcons","useNavigation","jsxDEV","_jsxDEV","DialpadKeypad","dialPadContent","pinLength","code","setCode","dialPadSize","dialPadTextSize","navigation","style","height","children","data","numColumns","keyExtractor","_","index","toString","renderItem","item","disabled","onPress","prev","slice","length","navigate","backgroundColor","width","styles","dialPadContainer","name","size","color","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","dialPadText","create","justifyContent","alignItems","margin","borderRadius","borderColor"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/src/panel/Security/Component/CustomKeypad/DialpadKeypad.js"],"sourcesContent":["import React from \"react\";\nimport { StyleSheet, Text, View, FlatList, TouchableOpacity } from \"react-native\";\nimport { Feather, MaterialIcons } from \"@expo/vector-icons\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst DialpadKeypad = ({\n  dialPadContent,\n  pinLength,\n  code,\n  setCode,\n  dialPadSize,\n  dialPadTextSize,\n}) => {\n  const navigation = useNavigation();\n  return (\n    <View style={{height: 430}}>\n      <FlatList\n        data={dialPadContent}\n        numColumns={3}\n        keyExtractor={(_, index) => index.toString()}\n        renderItem={({ item }) => {\n          return (\n            <TouchableOpacity\n              disabled={item === \"\"}\n              onPress={() => {\n                if (item === \"X\") {\n                  setCode((prev) => prev.slice(0, -1));\n                } else if (item !== \"Y\") {\n                  if (code.length < pinLength) {\n                    setCode((prev) => [...prev, item]);\n                  }\n                } \n                else {\n                  navigation.navigate('Scanner');\n                }\n              }}\n            >\n              <View\n                style={[\n                  {\n                    backgroundColor: item === \"Y\" ? \"#7d0431\" : \"#F8E9DC\",\n                    width: dialPadSize,\n                    height: dialPadSize,\n                  },\n                  styles.dialPadContainer,\n                ]}\n              >\n                {item === \"X\" ? (\n                  <Feather name=\"delete\" size={24} color=\"#800336\" />\n                ) : item === \"Y\" ? (\n                  <MaterialIcons name=\"qr-code-scanner\" size={32} color=\"#ffffff\" />\n                ) : (\n                  <Text style={[{ fontSize: dialPadTextSize }, styles.dialPadText]}>{item}</Text>\n                )}\n              </View>\n            </TouchableOpacity>\n          );\n        }}\n      />\n    </View>\n  );\n};\n\nexport default DialpadKeypad;\n\nconst styles = StyleSheet.create({\n  dialPadContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: 10,\n    borderRadius: 50,\n    borderColor: \"transparent\",\n  },\n  dialPadText: {\n    color: \"#7d0431\",\n  },\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}