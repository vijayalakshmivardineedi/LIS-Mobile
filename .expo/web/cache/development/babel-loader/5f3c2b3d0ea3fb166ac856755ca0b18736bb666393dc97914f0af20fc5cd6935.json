{"ast":null,"code":"import I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport TRANSLATIONS from '../translations';\nimport Colors from './colors';\nexport { TRANSLATIONS };\nexport const SCHEMA = {\n  label: 'label',\n  value: 'value',\n  icon: 'icon',\n  parent: 'parent',\n  selectable: 'selectable',\n  disabled: 'disabled',\n  testID: 'testID',\n  containerStyle: 'containerStyle',\n  labelStyle: 'labelStyle'\n};\nexport const MODE = {\n  DEFAULT: 'SIMPLE',\n  SIMPLE: 'SIMPLE',\n  BADGE: 'BADGE'\n};\nexport const LIST_MODE = {\n  DEFAULT: 'FLATLIST',\n  FLATLIST: 'FLATLIST',\n  SCROLLVIEW: 'SCROLLVIEW',\n  MODAL: 'MODAL'\n};\nexport const DROPDOWN_DIRECTION = {\n  DEFAULT: 'AUTO',\n  TOP: 'TOP',\n  BOTTOM: 'BOTTOM',\n  AUTO: 'AUTO'\n};\nexport const LANGUAGE = {\n  DEFAULT: 'EN',\n  FALLBACK: 'EN',\n  ENGLISH: 'EN',\n  ARABIC: 'AR',\n  FARSI: 'FA',\n  TURKISH: 'TR',\n  RUSSIAN: 'RU',\n  SPANISH: 'ES',\n  INDONESIAN: 'ID',\n  ITALIAN: 'IT'\n};\nexport const GET_DROPDOWN_DIRECTION = direction => {\n  switch (direction) {\n    case DROPDOWN_DIRECTION.AUTO:\n      return 'top';\n    case DROPDOWN_DIRECTION.TOP:\n      return 'bottom';\n    case DROPDOWN_DIRECTION.BOTTOM:\n      return 'top';\n    default:\n      return 'top';\n  }\n};\nconst STYLE_DIRECTION_KEYS = {\n  marginStart: 'marginRight',\n  marginEnd: 'marginLeft',\n  paddingStart: 'paddingRight',\n  paddingEnd: 'paddingLeft',\n  marginLeft: 'marginRight',\n  marginRight: 'marginLeft',\n  paddingLeft: 'paddingRight',\n  paddingRight: 'paddingLeft'\n};\nexport const RTL_DIRECTION = (rtl, style) => {\n  const newStyle = Object.assign({}, style);\n  if (rtl && !I18nManager.isRTL) {\n    if (newStyle.hasOwnProperty('flexDirection')) {\n      newStyle['flexDirection'] = newStyle['flexDirection'] === 'row' ? 'row-reverse' : 'row';\n    } else {\n      newStyle['flexDirection'] = 'row-reverse';\n    }\n  }\n  return newStyle;\n};\nexport const RTL_STYLE = (rtl, style) => {\n  const newStyle = Object.assign({}, style);\n  if (rtl && !I18nManager.isRTL) {\n    Object.keys(style).map(key => {\n      if (STYLE_DIRECTION_KEYS.hasOwnProperty(key)) {\n        newStyle[STYLE_DIRECTION_KEYS[key]] = newStyle[key];\n        delete newStyle[key];\n      } else {\n        newStyle[key] = newStyle[key];\n      }\n    });\n  }\n  return newStyle;\n};\nexport const GET_TRANSLATION = (key, language = LANGUAGE.DEFAULT, customTranslation = {}) => {\n  try {\n    const data = Object.assign({}, TRANSLATIONS[language], customTranslation)[key];\n    if (typeof data === 'undefined') throw Error();\n    return data;\n  } catch (e) {\n    return Object.assign({}, TRANSLATIONS[LANGUAGE.FALLBACK], customTranslation)[key];\n  }\n};\nexport const BADGE_COLORS = [Colors.ALTO];\nexport const BADGE_DOT_COLORS = [Colors.GREY];\nexport const ASCII_CODE = str => {\n  let chr = 0;\n  if (str.length === 0) return chr;\n  for (let i = 0; i < str.length; i++) chr += str.charCodeAt(i);\n  return chr;\n};","map":{"version":3,"names":["TRANSLATIONS","Colors","SCHEMA","label","value","icon","parent","selectable","disabled","testID","containerStyle","labelStyle","MODE","DEFAULT","SIMPLE","BADGE","LIST_MODE","FLATLIST","SCROLLVIEW","MODAL","DROPDOWN_DIRECTION","TOP","BOTTOM","AUTO","LANGUAGE","FALLBACK","ENGLISH","ARABIC","FARSI","TURKISH","RUSSIAN","SPANISH","INDONESIAN","ITALIAN","GET_DROPDOWN_DIRECTION","direction","STYLE_DIRECTION_KEYS","marginStart","marginEnd","paddingStart","paddingEnd","marginLeft","marginRight","paddingLeft","paddingRight","RTL_DIRECTION","rtl","style","newStyle","Object","assign","I18nManager","isRTL","hasOwnProperty","RTL_STYLE","keys","map","key","GET_TRANSLATION","language","customTranslation","data","Error","e","BADGE_COLORS","ALTO","BADGE_DOT_COLORS","GREY","ASCII_CODE","str","chr","length","i","charCodeAt"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/node_modules/react-native-dropdown-picker/src/constants/index.js"],"sourcesContent":["import {I18nManager} from 'react-native';\n\nimport TRANSLATIONS from '../translations';\nimport Colors from './colors';\n\nexport {TRANSLATIONS};\n\nexport const SCHEMA = {\n    label: 'label',\n    value: 'value',\n    icon: 'icon',\n    parent: 'parent',\n    selectable: 'selectable',\n    disabled: 'disabled',\n    testID: 'testID',\n    containerStyle: 'containerStyle',\n    labelStyle: 'labelStyle'\n}\n\nexport const MODE = {\n    DEFAULT: 'SIMPLE',\n    SIMPLE: 'SIMPLE',\n    BADGE: 'BADGE'\n}\n\nexport const LIST_MODE = {\n    DEFAULT: 'FLATLIST',\n    FLATLIST: 'FLATLIST',\n    SCROLLVIEW: 'SCROLLVIEW',\n    MODAL: 'MODAL'\n}\n\nexport const DROPDOWN_DIRECTION = {\n    DEFAULT: 'AUTO',\n    TOP: 'TOP',\n    BOTTOM: 'BOTTOM',\n    AUTO: 'AUTO'\n}\n\nexport const LANGUAGE = {\n    DEFAULT: 'EN',\n    FALLBACK: 'EN',\n\n    ENGLISH: 'EN',\n    ARABIC: 'AR',\n    FARSI: 'FA',\n    TURKISH: 'TR',\n    RUSSIAN: 'RU',\n    SPANISH: 'ES',\n    INDONESIAN: 'ID',\n    ITALIAN: 'IT'\n}\n\nexport const GET_DROPDOWN_DIRECTION = (direction) => {\n    switch (direction) {\n        case DROPDOWN_DIRECTION.AUTO:\n            return 'top';\n        case DROPDOWN_DIRECTION.TOP:\n            return 'bottom';\n        case DROPDOWN_DIRECTION.BOTTOM:\n            return 'top';\n        default:\n            return 'top';\n    }\n}\n\nconst STYLE_DIRECTION_KEYS = {\n    marginStart: 'marginRight',\n    marginEnd: 'marginLeft',\n    paddingStart: 'paddingRight',\n    paddingEnd: 'paddingLeft',\n    marginLeft: 'marginRight',\n    marginRight: 'marginLeft',\n    paddingLeft: 'paddingRight',\n    paddingRight: 'paddingLeft',\n};\n\nexport const RTL_DIRECTION = (rtl, style) => {\n    const newStyle = {...style};\n\n    if (rtl && ! I18nManager.isRTL) {\n        if (newStyle.hasOwnProperty('flexDirection')) {\n            newStyle['flexDirection'] = newStyle['flexDirection'] === 'row' ? 'row-reverse' : 'row';\n        } else {\n            newStyle['flexDirection'] = 'row-reverse';\n        }\n    }\n\n    return newStyle;\n}\n\nexport const RTL_STYLE = (rtl, style) => {\n    const newStyle = {...style};\n\n    if (rtl && ! I18nManager.isRTL) {\n        Object.keys(style).map((key) => {\n            if (STYLE_DIRECTION_KEYS.hasOwnProperty(key)) {\n                newStyle[STYLE_DIRECTION_KEYS[key]] = newStyle[key];\n                delete newStyle[key];\n            } else {\n                newStyle[key] = newStyle[key];\n            }\n        });\n    }\n\n    return newStyle;\n}\n\nexport const GET_TRANSLATION = (key, language = LANGUAGE.DEFAULT, customTranslation = {}) => {\n    try {\n        const data = {...TRANSLATIONS[language], ...customTranslation}[key];\n\n        if (typeof data === 'undefined')\n            throw Error();\n\n        return data;\n    } catch (e) {\n        return {...TRANSLATIONS[LANGUAGE.FALLBACK], ...customTranslation}[key];\n    }\n}\n\nexport const BADGE_COLORS = [Colors.ALTO];\n\nexport const BADGE_DOT_COLORS = [Colors.GREY];\n\nexport const ASCII_CODE = (str) => {\n    let chr = 0;\n\n    if (str.length === 0)\n        return chr;\n\n    for (let i = 0; i < str.length; i++)\n        chr+= str.charCodeAt(i);\n\n    return chr;\n}\n"],"mappings":";AAEA,OAAOA,YAAY,MAAM,iBAAiB;AAC1C,OAAOC,MAAM,MAAM,UAAU;AAE7B,SAAQD,YAAY;AAEpB,OAAO,MAAME,MAAM,GAAG;EAClBC,KAAK,EAAE,OAAO;EACdC,KAAK,EAAE,OAAO;EACdC,IAAI,EAAE,MAAM;EACZC,MAAM,EAAE,QAAQ;EAChBC,UAAU,EAAE,YAAY;EACxBC,QAAQ,EAAE,UAAU;EACpBC,MAAM,EAAE,QAAQ;EAChBC,cAAc,EAAE,gBAAgB;EAChCC,UAAU,EAAE;AAChB,CAAC;AAED,OAAO,MAAMC,IAAI,GAAG;EAChBC,OAAO,EAAE,QAAQ;EACjBC,MAAM,EAAE,QAAQ;EAChBC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG;EACrBH,OAAO,EAAE,UAAU;EACnBI,QAAQ,EAAE,UAAU;EACpBC,UAAU,EAAE,YAAY;EACxBC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAG;EAC9BP,OAAO,EAAE,MAAM;EACfQ,GAAG,EAAE,KAAK;EACVC,MAAM,EAAE,QAAQ;EAChBC,IAAI,EAAE;AACV,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAG;EACpBX,OAAO,EAAE,IAAI;EACbY,QAAQ,EAAE,IAAI;EAEdC,OAAO,EAAE,IAAI;EACbC,MAAM,EAAE,IAAI;EACZC,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE,IAAI;EACbC,OAAO,EAAE,IAAI;EACbC,OAAO,EAAE,IAAI;EACbC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE;AACb,CAAC;AAED,OAAO,MAAMC,sBAAsB,GAAIC,SAAS,IAAK;EACjD,QAAQA,SAAS;IACb,KAAKf,kBAAkB,CAACG,IAAI;MACxB,OAAO,KAAK;IAChB,KAAKH,kBAAkB,CAACC,GAAG;MACvB,OAAO,QAAQ;IACnB,KAAKD,kBAAkB,CAACE,MAAM;MAC1B,OAAO,KAAK;IAChB;MACI,OAAO,KAAK;EACpB;AACJ,CAAC;AAED,MAAMc,oBAAoB,GAAG;EACzBC,WAAW,EAAE,aAAa;EAC1BC,SAAS,EAAE,YAAY;EACvBC,YAAY,EAAE,cAAc;EAC5BC,UAAU,EAAE,aAAa;EACzBC,UAAU,EAAE,aAAa;EACzBC,WAAW,EAAE,YAAY;EACzBC,WAAW,EAAE,cAAc;EAC3BC,YAAY,EAAE;AAClB,CAAC;AAED,OAAO,MAAMC,aAAa,GAAGA,CAACC,GAAG,EAAEC,KAAK,KAAK;EACzC,MAAMC,QAAQ,GAAAC,MAAA,CAAAC,MAAA,KAAOH,KAAK,CAAC;EAE3B,IAAID,GAAG,IAAI,CAAEK,WAAW,CAACC,KAAK,EAAE;IAC5B,IAAIJ,QAAQ,CAACK,cAAc,CAAC,eAAe,CAAC,EAAE;MAC1CL,QAAQ,CAAC,eAAe,CAAC,GAAGA,QAAQ,CAAC,eAAe,CAAC,KAAK,KAAK,GAAG,aAAa,GAAG,KAAK;IAC3F,CAAC,MAAM;MACHA,QAAQ,CAAC,eAAe,CAAC,GAAG,aAAa;IAC7C;EACJ;EAEA,OAAOA,QAAQ;AACnB,CAAC;AAED,OAAO,MAAMM,SAAS,GAAGA,CAACR,GAAG,EAAEC,KAAK,KAAK;EACrC,MAAMC,QAAQ,GAAAC,MAAA,CAAAC,MAAA,KAAOH,KAAK,CAAC;EAE3B,IAAID,GAAG,IAAI,CAAEK,WAAW,CAACC,KAAK,EAAE;IAC5BH,MAAM,CAACM,IAAI,CAACR,KAAK,CAAC,CAACS,GAAG,CAAEC,GAAG,IAAK;MAC5B,IAAIrB,oBAAoB,CAACiB,cAAc,CAACI,GAAG,CAAC,EAAE;QAC1CT,QAAQ,CAACZ,oBAAoB,CAACqB,GAAG,CAAC,CAAC,GAAGT,QAAQ,CAACS,GAAG,CAAC;QACnD,OAAOT,QAAQ,CAACS,GAAG,CAAC;MACxB,CAAC,MAAM;QACHT,QAAQ,CAACS,GAAG,CAAC,GAAGT,QAAQ,CAACS,GAAG,CAAC;MACjC;IACJ,CAAC,CAAC;EACN;EAEA,OAAOT,QAAQ;AACnB,CAAC;AAED,OAAO,MAAMU,eAAe,GAAGA,CAACD,GAAG,EAAEE,QAAQ,GAAGnC,QAAQ,CAACX,OAAO,EAAE+C,iBAAiB,GAAG,CAAC,CAAC,KAAK;EACzF,IAAI;IACA,MAAMC,IAAI,GAAGZ,MAAA,CAAAC,MAAA,KAAIlD,YAAY,CAAC2D,QAAQ,CAAC,EAAKC,iBAAiB,EAAEH,GAAG,CAAC;IAEnE,IAAI,OAAOI,IAAI,KAAK,WAAW,EAC3B,MAAMC,KAAK,CAAC,CAAC;IAEjB,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOE,CAAC,EAAE;IACR,OAAOd,MAAA,CAAAC,MAAA,KAAIlD,YAAY,CAACwB,QAAQ,CAACC,QAAQ,CAAC,EAAKmC,iBAAiB,EAAEH,GAAG,CAAC;EAC1E;AACJ,CAAC;AAED,OAAO,MAAMO,YAAY,GAAG,CAAC/D,MAAM,CAACgE,IAAI,CAAC;AAEzC,OAAO,MAAMC,gBAAgB,GAAG,CAACjE,MAAM,CAACkE,IAAI,CAAC;AAE7C,OAAO,MAAMC,UAAU,GAAIC,GAAG,IAAK;EAC/B,IAAIC,GAAG,GAAG,CAAC;EAEX,IAAID,GAAG,CAACE,MAAM,KAAK,CAAC,EAChB,OAAOD,GAAG;EAEd,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,GAAG,CAACE,MAAM,EAAEC,CAAC,EAAE,EAC/BF,GAAG,IAAGD,GAAG,CAACI,UAAU,CAACD,CAAC,CAAC;EAE3B,OAAOF,GAAG;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}