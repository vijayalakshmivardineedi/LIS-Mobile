{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\node_modules\\\\react-native-gifted-chat\\\\lib\\\\MessageText.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ParsedText from 'react-native-parsed-text';\nimport { StylePropType } from './utils';\nimport { useChatContext } from './GiftedChatContext';\nimport { error } from './logging';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WWW_URL_PATTERN = /^www\\./i;\nconst {\n  textStyle\n} = StyleSheet.create({\n  textStyle: {\n    fontSize: 16,\n    lineHeight: 20,\n    marginTop: 5,\n    marginBottom: 5,\n    marginLeft: 10,\n    marginRight: 10\n  }\n});\nconst styles = {\n  left: StyleSheet.create({\n    container: {},\n    text: Object.assign({\n      color: 'black'\n    }, textStyle),\n    link: {\n      color: 'black',\n      textDecorationLine: 'underline'\n    }\n  }),\n  right: StyleSheet.create({\n    container: {},\n    text: Object.assign({\n      color: 'white'\n    }, textStyle),\n    link: {\n      color: 'white',\n      textDecorationLine: 'underline'\n    }\n  })\n};\nconst DEFAULT_OPTION_TITLES = ['Call', 'Text', 'Cancel'];\nexport function MessageText({\n  currentMessage = {},\n  optionTitles = DEFAULT_OPTION_TITLES,\n  position = 'left',\n  containerStyle,\n  textStyle,\n  linkStyle: linkStyleProp,\n  customTextStyle,\n  parsePatterns,\n  textProps\n}) {\n  const {\n    actionSheet\n  } = useChatContext();\n  const onUrlPress = url => {\n    if (WWW_URL_PATTERN.test(url)) onUrlPress(`https://${url}`);else Linking.openURL(url).catch(e => {\n      error(e, 'No handler for URL:', url);\n    });\n  };\n  const onPhonePress = phone => {\n    const options = optionTitles && optionTitles.length > 0 ? optionTitles.slice(0, 3) : DEFAULT_OPTION_TITLES;\n    const cancelButtonIndex = options.length - 1;\n    actionSheet().showActionSheetWithOptions({\n      options,\n      cancelButtonIndex\n    }, buttonIndex => {\n      switch (buttonIndex) {\n        case 0:\n          Linking.openURL(`tel:${phone}`).catch(e => {\n            error(e, 'No handler for telephone');\n          });\n          break;\n        case 1:\n          Linking.openURL(`sms:${phone}`).catch(e => {\n            error(e, 'No handler for text');\n          });\n          break;\n      }\n    });\n  };\n  const onEmailPress = email => Linking.openURL(`mailto:${email}`).catch(e => error(e, 'No handler for mailto'));\n  const linkStyle = [styles[position].link, linkStyleProp?.[position]];\n  return _jsxDEV(View, {\n    style: [styles[position].container, containerStyle && containerStyle[position]],\n    children: _jsxDEV(ParsedText, {\n      style: [styles[position].text, textStyle && textStyle[position], customTextStyle],\n      parse: [...(parsePatterns ? parsePatterns(linkStyle) : []), {\n        type: 'url',\n        style: linkStyle,\n        onPress: onUrlPress\n      }, {\n        type: 'phone',\n        style: linkStyle,\n        onPress: onPhonePress\n      }, {\n        type: 'email',\n        style: linkStyle,\n        onPress: onEmailPress\n      }],\n      childrenProps: Object.assign({}, textProps),\n      children: currentMessage.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 13\n  }, this);\n}\nMessageText.propTypes = {\n  position: PropTypes.oneOf(['left', 'right']),\n  optionTitles: PropTypes.arrayOf(PropTypes.string),\n  currentMessage: PropTypes.object,\n  containerStyle: PropTypes.shape({\n    left: StylePropType,\n    right: StylePropType\n  }),\n  textStyle: PropTypes.shape({\n    left: StylePropType,\n    right: StylePropType\n  }),\n  linkStyle: PropTypes.shape({\n    left: StylePropType,\n    right: StylePropType\n  }),\n  parsePatterns: PropTypes.func,\n  textProps: PropTypes.object,\n  customTextStyle: StylePropType\n};","map":{"version":3,"names":["PropTypes","React","Linking","StyleSheet","View","ParsedText","StylePropType","useChatContext","error","jsxDEV","_jsxDEV","WWW_URL_PATTERN","textStyle","create","fontSize","lineHeight","marginTop","marginBottom","marginLeft","marginRight","styles","left","container","text","Object","assign","color","link","textDecorationLine","right","DEFAULT_OPTION_TITLES","MessageText","currentMessage","optionTitles","position","containerStyle","linkStyle","linkStyleProp","customTextStyle","parsePatterns","textProps","actionSheet","onUrlPress","url","test","openURL","catch","e","onPhonePress","phone","options","length","slice","cancelButtonIndex","showActionSheetWithOptions","buttonIndex","onEmailPress","email","style","children","parse","type","onPress","childrenProps","fileName","_jsxFileName","lineNumber","columnNumber","propTypes","oneOf","arrayOf","string","object","shape","func"],"sources":["C:\\Users\\user\\OneDrive\\Documents\\rn\\l\\node_modules\\react-native-gifted-chat\\src\\MessageText.tsx"],"sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport {\n  Linking,\n  StyleSheet,\n  View,\n  TextProps,\n  StyleProp,\n  ViewStyle,\n  TextStyle,\n} from 'react-native'\n\nimport ParsedText from 'react-native-parsed-text'\nimport { LeftRightStyle, IMessage } from './Models'\nimport { StylePropType } from './utils'\nimport { useChatContext } from './GiftedChatContext'\nimport { error } from './logging'\n\nconst WWW_URL_PATTERN = /^www\\./i\n\nconst { textStyle } = StyleSheet.create({\n  textStyle: {\n    fontSize: 16,\n    lineHeight: 20,\n    marginTop: 5,\n    marginBottom: 5,\n    marginLeft: 10,\n    marginRight: 10,\n  },\n})\n\nconst styles = {\n  left: StyleSheet.create({\n    container: {},\n    text: {\n      color: 'black',\n      ...textStyle,\n    },\n    link: {\n      color: 'black',\n      textDecorationLine: 'underline',\n    },\n  }),\n  right: StyleSheet.create({\n    container: {},\n    text: {\n      color: 'white',\n      ...textStyle,\n    },\n    link: {\n      color: 'white',\n      textDecorationLine: 'underline',\n    },\n  }),\n}\n\nconst DEFAULT_OPTION_TITLES = ['Call', 'Text', 'Cancel']\n\nexport interface MessageTextProps<TMessage extends IMessage> {\n  position?: 'left' | 'right'\n  optionTitles?: string[]\n  currentMessage: TMessage\n  containerStyle?: LeftRightStyle<ViewStyle>\n  textStyle?: LeftRightStyle<TextStyle>\n  linkStyle?: LeftRightStyle<TextStyle>\n  textProps?: TextProps\n  customTextStyle?: StyleProp<TextStyle>\n  parsePatterns?: (linkStyle: TextStyle) => []\n}\n\nexport function MessageText<TMessage extends IMessage = IMessage> ({\n  currentMessage = {} as TMessage,\n  optionTitles = DEFAULT_OPTION_TITLES,\n  position = 'left',\n  containerStyle,\n  textStyle,\n  linkStyle: linkStyleProp,\n  customTextStyle,\n  parsePatterns,\n  textProps,\n}: MessageTextProps<TMessage>) {\n  const { actionSheet } = useChatContext()\n\n  // TODO: React.memo\n  // const shouldComponentUpdate = (nextProps: MessageTextProps<TMessage>) => {\n  //   return (\n  //     !!currentMessage &&\n  //     !!nextProps.currentMessage &&\n  //     currentMessage.text !== nextProps.currentMessage.text\n  //   )\n  // }\n\n  const onUrlPress = (url: string) => {\n    // When someone sends a message that includes a website address beginning with \"www.\" (omitting the scheme),\n    // react-native-parsed-text recognizes it as a valid url, but Linking fails to open due to the missing scheme.\n    if (WWW_URL_PATTERN.test(url))\n      onUrlPress(`https://${url}`)\n    else\n      Linking.openURL(url).catch(e => {\n        error(e, 'No handler for URL:', url)\n      })\n  }\n\n  const onPhonePress = (phone: string) => {\n    const options =\n      optionTitles && optionTitles.length > 0\n        ? optionTitles.slice(0, 3)\n        : DEFAULT_OPTION_TITLES\n    const cancelButtonIndex = options.length - 1\n    actionSheet().showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n      },\n      (buttonIndex?: number) => {\n        switch (buttonIndex) {\n          case 0:\n            Linking.openURL(`tel:${phone}`).catch(e => {\n              error(e, 'No handler for telephone')\n            })\n            break\n          case 1:\n            Linking.openURL(`sms:${phone}`).catch(e => {\n              error(e, 'No handler for text')\n            })\n            break\n        }\n      }\n    )\n  }\n\n  const onEmailPress = (email: string) =>\n    Linking.openURL(`mailto:${email}`).catch(e =>\n      error(e, 'No handler for mailto')\n    )\n\n  const linkStyle = [\n    styles[position].link,\n    linkStyleProp?.[position],\n  ]\n  return (\n    <View\n      style={[\n        styles[position].container,\n        containerStyle && containerStyle[position],\n      ]}\n    >\n      <ParsedText\n        style={[\n          styles[position].text,\n          textStyle && textStyle[position],\n          customTextStyle,\n        ]}\n        parse={[\n          ...(parsePatterns ? parsePatterns(linkStyle as TextStyle) : []),\n          { type: 'url', style: linkStyle, onPress: onUrlPress },\n          { type: 'phone', style: linkStyle, onPress: onPhonePress },\n          { type: 'email', style: linkStyle, onPress: onEmailPress },\n        ]}\n        childrenProps={{ ...textProps }}\n      >\n        {currentMessage!.text}\n      </ParsedText>\n    </View>\n  )\n}\n\nMessageText.propTypes = {\n  position: PropTypes.oneOf(['left', 'right']),\n  optionTitles: PropTypes.arrayOf(PropTypes.string),\n  currentMessage: PropTypes.object,\n  containerStyle: PropTypes.shape({\n    left: StylePropType,\n    right: StylePropType,\n  }),\n  textStyle: PropTypes.shape({\n    left: StylePropType,\n    right: StylePropType,\n  }),\n  linkStyle: PropTypes.shape({\n    left: StylePropType,\n    right: StylePropType,\n  }),\n  parsePatterns: PropTypes.func,\n  textProps: PropTypes.object,\n  customTextStyle: StylePropType,\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}