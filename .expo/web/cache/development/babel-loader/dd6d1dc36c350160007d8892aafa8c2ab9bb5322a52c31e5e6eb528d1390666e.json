{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst initialState = {\n  bills: [],\n  status: 'idle',\n  error: null\n};\nexport const fetchBills = createAsyncThunk('bills/fetchBills', async ({\n  societyId,\n  blockno,\n  flatno\n}) => {\n  const response = await axios.get(`http://192.168.29.226:2000/api/getPaymentsOfEach/${societyId}/${blockno}/${flatno}`);\n  return response.data;\n});\nconst billsSlice = createSlice({\n  name: 'bills',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchBills.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchBills.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.bills = action.payload;\n    }).addCase(fetchBills.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport default billsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","bills","status","error","fetchBills","societyId","blockno","flatno","response","get","data","billsSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/src/panel/User/Redux/Slice/ProfileSlice/myBillsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\n// Define the initial state\r\nconst initialState = {\r\n    bills: [],\r\n    status: 'idle', // idle | loading | succeeded | failed\r\n    error: null,\r\n};\r\n\r\n// Async thunk for fetching bills using Axios\r\nexport const fetchBills = createAsyncThunk(\r\n    'bills/fetchBills',\r\n    async ({ societyId, blockno, flatno }) => {\r\n        const response = await axios.get(`http://192.168.29.226:2000/api/getPaymentsOfEach/${societyId}/${blockno}/${flatno}`); // Replace with your API endpoint\r\n        return response.data;\r\n    }\r\n);\r\n\r\nconst billsSlice = createSlice({\r\n    name: 'bills',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchBills.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(fetchBills.fulfilled, (state, action) => {\r\n                state.status = 'succeeded';\r\n                state.bills = action.payload;\r\n            })\r\n            .addCase(fetchBills.rejected, (state, action) => {\r\n                state.status = 'failed';\r\n                state.error = action.error.message;\r\n            });\r\n    },\r\n});\r\n\r\nexport default billsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE,MAAM;EACdC,KAAK,EAAE;AACX,CAAC;AAGD,OAAO,MAAMC,UAAU,GAAGN,gBAAgB,CACtC,kBAAkB,EAClB,OAAO;EAAEO,SAAS;EAAEC,OAAO;EAAEC;AAAO,CAAC,KAAK;EACtC,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,oDAAoDJ,SAAS,IAAIC,OAAO,IAAIC,MAAM,EAAE,CAAC;EACtH,OAAOC,QAAQ,CAACE,IAAI;AACxB,CACJ,CAAC;AAED,MAAMC,UAAU,GAAGd,WAAW,CAAC;EAC3Be,IAAI,EAAE,OAAO;EACbZ,YAAY;EACZa,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACZ,UAAU,CAACa,OAAO,EAAGC,KAAK,IAAK;MACpCA,KAAK,CAAChB,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDc,OAAO,CAACZ,UAAU,CAACe,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC9CF,KAAK,CAAChB,MAAM,GAAG,WAAW;MAC1BgB,KAAK,CAACjB,KAAK,GAAGmB,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC,CACDL,OAAO,CAACZ,UAAU,CAACkB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC7CF,KAAK,CAAChB,MAAM,GAAG,QAAQ;MACvBgB,KAAK,CAACf,KAAK,GAAGiB,MAAM,CAACjB,KAAK,CAACoB,OAAO;IACtC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeZ,UAAU,CAACa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}