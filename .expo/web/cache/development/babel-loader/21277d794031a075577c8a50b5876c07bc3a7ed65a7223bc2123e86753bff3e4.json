{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const signupUser = createAsyncThunk(\"auth/signupUser\", async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await fetch(\"http://192.168.29.226:2000/api/user/createUserProfile\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      return rejectWithValue(errorData.error);\n    }\n    const data = await response.json();\n    console.log(\"Signup user data:\", data);\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const emailVerificationAsync = createAsyncThunk(\"auth/emailVerification\", async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await fetch(\"http://192.168.29.226:2000/api/user/sendVerificationEmail\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      return rejectWithValue(errorData.error);\n    }\n    const data = await response.json();\n    console.log(\"Email verification data:\", data);\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: null,\n    loading: false,\n    signupError: null,\n    verificationError: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(signupUser.pending, state => {\n      state.loading = true;\n      state.signupError = null;\n    }).addCase(signupUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload;\n      console.log(\"Signup user success:\", state.user);\n    }).addCase(signupUser.rejected, (state, action) => {\n      state.loading = false;\n      state.signupError = action.payload;\n      console.error(\"Signup user error:\", action.payload);\n    }).addCase(emailVerificationAsync.pending, state => {\n      state.loading = true;\n      state.verificationError = null;\n    }).addCase(emailVerificationAsync.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload;\n      state.verificationError = \"\";\n      console.log(\"Email verification success:\", state.user);\n    }).addCase(emailVerificationAsync.rejected, (state, action) => {\n      state.loading = false;\n      state.verificationError = action.payload;\n      console.error(\"Email verification error:\", action.payload);\n    });\n  }\n});\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","signupUser","userData","rejectWithValue","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","error","data","console","log","message","emailVerificationAsync","authSlice","name","initialState","user","loading","signupError","verificationError","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/src/panel/User/Redux/Slice/AuthSlice/SignupSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n// Async thunk for user signup\r\nexport const signupUser = createAsyncThunk(\r\n  \"auth/signupUser\",\r\n  async (userData, { rejectWithValue }) => {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://192.168.29.226:2000/api/user/createUserProfile\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(userData),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        return rejectWithValue(errorData.error);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(\"Signup user data:\", data);\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\n// Async thunk for email verification\r\nexport const emailVerificationAsync = createAsyncThunk(\r\n  \"auth/emailVerification\",\r\n  async (userData, { rejectWithValue }) => {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://192.168.29.226:2000/api/user/sendVerificationEmail\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(userData),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        return rejectWithValue(errorData.error);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(\"Email verification data:\", data);\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\n// Combined slice for user signup and email verification\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: {\r\n    user: null,\r\n    loading: false,\r\n    signupError: null,\r\n    verificationError: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Reducers for signupUser async thunk\r\n      .addCase(signupUser.pending, (state) => {\r\n        state.loading = true;\r\n        state.signupError = null;\r\n      })\r\n      .addCase(signupUser.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.user = action.payload;\r\n        console.log(\"Signup user success:\", state.user);\r\n      })\r\n      .addCase(signupUser.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.signupError = action.payload;\r\n        console.error(\"Signup user error:\", action.payload);\r\n      })\r\n      // Reducers for emailVerificationAsync async thunk\r\n      .addCase(emailVerificationAsync.pending, (state) => {\r\n        state.loading = true;\r\n        state.verificationError = null;\r\n      })\r\n      .addCase(emailVerificationAsync.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.user = action.payload;\r\n        state.verificationError = \"\";\r\n        console.log(\"Email verification success:\", state.user);\r\n      })\r\n      .addCase(emailVerificationAsync.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.verificationError = action.payload;\r\n        console.error(\"Email verification error:\", action.payload);\r\n      });\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}