{"ast":null,"code":"'use strict';\n\nimport NativeReanimatedModule from './NativeReanimated';\nimport { isJest, shouldBeUseWeb } from './PlatformChecker';\nimport { makeShareableCloneOnUIRecursive, makeShareableCloneRecursive } from './shareables';\nimport { isWorkletFunction } from './commonTypes';\nconst IS_JEST = isJest();\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\nlet _runOnUIQueue = [];\nconst _worklet_12099126053083_init_data = {\n  code: \"function setupMicrotasks_threadsJs1(){let microtasksQueue=[];let isExecutingMicrotasksQueue=false;global.queueMicrotask=function(callback){microtasksQueue.push(callback);};global.__callMicrotasks=function(){if(isExecutingMicrotasksQueue){return;}try{isExecutingMicrotasksQueue=true;for(let index=0;index<microtasksQueue.length;index+=1){microtasksQueue[index]();}microtasksQueue=[];global._maybeFlushUIUpdatesQueue();}finally{isExecutingMicrotasksQueue=false;}};}\",\n  location: \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\threads.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"setupMicrotasks_threadsJs1\\\",\\\"microtasksQueue\\\",\\\"isExecutingMicrotasksQueue\\\",\\\"global\\\",\\\"queueMicrotask\\\",\\\"callback\\\",\\\"push\\\",\\\"__callMicrotasks\\\",\\\"index\\\",\\\"length\\\",\\\"_maybeFlushUIUpdatesQueue\\\"],\\\"sources\\\":[\\\"C:/Users/user/OneDrive/Documents/rn/l/node_modules/react-native-reanimated/lib/module/threads.js\\\"],\\\"mappings\\\":\\\"AAaO,SAAAA,0BAA2BA,CAAA,EAGhC,GAAI,CAAAC,eAAe,CAAG,EAAE,CACxB,GAAI,CAAAC,0BAA0B,CAAG,KAAK,CACtCC,MAAM,CAACC,cAAc,CAAG,SAAAC,QAAQ,CAAI,CAClCJ,eAAe,CAACK,IAAI,CAACD,QAAQ,CAAC,CAChC,CAAC,CACDF,MAAM,CAACI,gBAAgB,CAAG,UAAM,CAC9B,GAAIL,0BAA0B,CAAE,CAC9B,OACF,CACA,GAAI,CACFA,0BAA0B,CAAG,IAAI,CACjC,IAAK,GAAI,CAAAM,KAAK,CAAG,CAAC,CAAEA,KAAK,CAAGP,eAAe,CAACQ,MAAM,CAAED,KAAK,EAAI,CAAC,CAAE,CAE9DP,eAAe,CAACO,KAAK,CAAC,CAAC,CAAC,CAC1B,CACAP,eAAe,CAAG,EAAE,CACpBE,MAAM,CAACO,yBAAyB,CAAC,CAAC,CACpC,CAAC,OAAS,CACRR,0BAA0B,CAAG,KAAK,CACpC,CACF,CAAC,CACH\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.15.1\"\n};\nexport const setupMicrotasks = function () {\n  const _e = [new global.Error(), 1, -27];\n  const setupMicrotasks = function () {\n    let microtasksQueue = [];\n    let isExecutingMicrotasksQueue = false;\n    global.queueMicrotask = callback => {\n      microtasksQueue.push(callback);\n    };\n    global.__callMicrotasks = () => {\n      if (isExecutingMicrotasksQueue) {\n        return;\n      }\n      try {\n        isExecutingMicrotasksQueue = true;\n        for (let index = 0; index < microtasksQueue.length; index += 1) {\n          microtasksQueue[index]();\n        }\n        microtasksQueue = [];\n        global._maybeFlushUIUpdatesQueue();\n      } finally {\n        isExecutingMicrotasksQueue = false;\n      }\n    };\n  };\n  setupMicrotasks.__closure = {};\n  setupMicrotasks.__workletHash = 12099126053083;\n  setupMicrotasks.__initData = _worklet_12099126053083_init_data;\n  setupMicrotasks.__stackDetails = _e;\n  return setupMicrotasks;\n}();\nconst _worklet_6162042684295_init_data = {\n  code: \"function callMicrotasksOnUIThread_threadsJs2(){global.__callMicrotasks();}\",\n  location: \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\threads.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"callMicrotasksOnUIThread_threadsJs2\\\",\\\"global\\\",\\\"__callMicrotasks\\\"],\\\"sources\\\":[\\\"C:/Users/user/OneDrive/Documents/rn/l/node_modules/react-native-reanimated/lib/module/threads.js\\\"],\\\"mappings\\\":\\\"AAsCA,SAAAA,mCAAoCA,CAAA,EAGlCC,MAAM,CAACC,gBAAgB,CAAC,CAAC,CAC3B\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.15.1\"\n};\nconst callMicrotasksOnUIThread = function () {\n  const _e = [new global.Error(), 1, -27];\n  const callMicrotasksOnUIThread = function () {\n    global.__callMicrotasks();\n  };\n  callMicrotasksOnUIThread.__closure = {};\n  callMicrotasksOnUIThread.__workletHash = 6162042684295;\n  callMicrotasksOnUIThread.__initData = _worklet_6162042684295_init_data;\n  callMicrotasksOnUIThread.__stackDetails = _e;\n  return callMicrotasksOnUIThread;\n}();\nexport const callMicrotasks = SHOULD_BE_USE_WEB ? () => {} : callMicrotasksOnUIThread;\nconst _worklet_288424691519_init_data = {\n  code: \"function runOnUI_threadsJs3(worklet){const{__DEV__,SHOULD_BE_USE_WEB,isWorkletFunction,IS_JEST,NativeReanimatedModule,makeShareableCloneRecursive,callMicrotasks}=this.__closure;if(__DEV__&&!SHOULD_BE_USE_WEB&&_WORKLET){throw new Error('[Reanimated] `runOnUI` cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.');}if(__DEV__&&!SHOULD_BE_USE_WEB&&!isWorkletFunction(worklet)){throw new Error('[Reanimated] `runOnUI` can only be used on worklets.');}return function(...args){if(IS_JEST){NativeReanimatedModule.scheduleOnUI(makeShareableCloneRecursive(function(){'worklet';worklet(...args);}));return;}if(__DEV__){makeShareableCloneRecursive(worklet);makeShareableCloneRecursive(args);}_runOnUIQueue.push([worklet,args]);if(_runOnUIQueue.length===1){queueMicrotask(function(){const queue=_runOnUIQueue;_runOnUIQueue=[];NativeReanimatedModule.scheduleOnUI(makeShareableCloneRecursive(function(){'worklet';queue.forEach(function([worklet,args]){worklet(...args);});callMicrotasks();}));});}};}\",\n  location: \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\threads.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"runOnUI_threadsJs3\\\",\\\"worklet\\\",\\\"__DEV__\\\",\\\"SHOULD_BE_USE_WEB\\\",\\\"isWorkletFunction\\\",\\\"IS_JEST\\\",\\\"NativeReanimatedModule\\\",\\\"makeShareableCloneRecursive\\\",\\\"callMicrotasks\\\",\\\"__closure\\\",\\\"_WORKLET\\\",\\\"Error\\\",\\\"args\\\",\\\"scheduleOnUI\\\",\\\"_runOnUIQueue\\\",\\\"push\\\",\\\"length\\\",\\\"queueMicrotask\\\",\\\"queue\\\",\\\"forEach\\\"],\\\"sources\\\":[\\\"C:/Users/user/OneDrive/Documents/rn/l/node_modules/react-native-reanimated/lib/module/threads.js\\\"],\\\"mappings\\\":\\\"AA6DO,SAAAA,kBAA0BA,CAAAC,OAAA,QAAAC,OAAA,CAAAC,iBAAA,CAAAC,iBAAA,CAAAC,OAAA,CAAAC,sBAAA,CAAAC,2BAAA,CAAAC,cAAA,OAAAC,SAAA,CAG/B,GAAIP,OAAO,EAAI,CAACC,iBAAiB,EAAIO,QAAQ,CAAE,CAC7C,KAAM,IAAI,CAAAC,KAAK,CAAC,+JAA+J,CAAC,CAClL,CACA,GAAIT,OAAO,EAAI,CAACC,iBAAiB,EAAI,CAACC,iBAAiB,CAACH,OAAO,CAAC,CAAE,CAChE,KAAM,IAAI,CAAAU,KAAK,CAAC,sDAAsD,CAAC,CACzE,CACA,MAAO,UAAC,GAAGC,IAAI,CAAK,CAClB,GAAIP,OAAO,CAAE,CAUXC,sBAAsB,CAACO,YAAY,CAACN,2BAA2B,CAAC,UAAM,CACpE,SAAS,CAETN,OAAO,CAAC,GAAGW,IAAI,CAAC,CAClB,CAAC,CAAC,CAAC,CACH,OACF,CACA,GAAIV,OAAO,CAAE,CAMXK,2BAA2B,CAACN,OAAO,CAAC,CACpCM,2BAA2B,CAACK,IAAI,CAAC,CACnC,CACAE,aAAa,CAACC,IAAI,CAAC,CAACd,OAAO,CAAEW,IAAI,CAAC,CAAC,CACnC,GAAIE,aAAa,CAACE,MAAM,GAAK,CAAC,CAAE,CAC9BC,cAAc,CAAC,UAAM,CACnB,KAAM,CAAAC,KAAK,CAAGJ,aAAa,CAC3BA,aAAa,CAAG,EAAE,CAClBR,sBAAsB,CAACO,YAAY,CAACN,2BAA2B,CAAC,UAAM,CACpE,SAAS,CAGTW,KAAK,CAACC,OAAO,CAAC,SAAC,CAAClB,OAAO,CAAEW,IAAI,CAAC,CAAK,CACjCX,OAAO,CAAC,GAAGW,IAAI,CAAC,CAClB,CAAC,CAAC,CACFJ,cAAc,CAAC,CAAC,CAClB,CAAC,CAAC,CAAC,CACL,CAAC,CAAC,CACJ,CACF,CAAC,CACH\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.15.1\"\n};\nconst _worklet_9086703493462_init_data = {\n  code: \"function threadsJs4(){const{worklet,args}=this.__closure;worklet(...args);}\",\n  location: \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\threads.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"threadsJs4\\\",\\\"worklet\\\",\\\"args\\\",\\\"__closure\\\"],\\\"sources\\\":[\\\"C:/Users/user/OneDrive/Documents/rn/l/node_modules/react-native-reanimated/lib/module/threads.js\\\"],\\\"mappings\\\":\\\"AAiFsE,SAAAA,UAAMA,CAAA,QAAAC,OAAA,CAAAC,IAAA,OAAAC,SAAA,CAGpEF,OAAO,CAAC,GAAGC,IAAI,CAAC,CAClB\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.15.1\"\n};\nconst _worklet_5843954769346_init_data = {\n  code: \"function threadsJs5(){const{queue,callMicrotasks}=this.__closure;queue.forEach(function([worklet,args]){worklet(...args);});callMicrotasks();}\",\n  location: \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\threads.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"threadsJs5\\\",\\\"queue\\\",\\\"callMicrotasks\\\",\\\"__closure\\\",\\\"forEach\\\",\\\"worklet\\\",\\\"args\\\"],\\\"sources\\\":[\\\"C:/Users/user/OneDrive/Documents/rn/l/node_modules/react-native-reanimated/lib/module/threads.js\\\"],\\\"mappings\\\":\\\"AAsGwE,SAAAA,UAAMA,CAAA,QAAAC,KAAA,CAAAC,cAAA,OAAAC,SAAA,CAIpEF,KAAK,CAACG,OAAO,CAAC,SAAC,CAACC,OAAO,CAAEC,IAAI,CAAC,CAAK,CACjCD,OAAO,CAAC,GAAGC,IAAI,CAAC,CAClB,CAAC,CAAC,CACFJ,cAAc,CAAC,CAAC,CAClB\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.15.1\"\n};\nexport const runOnUI = function () {\n  const _e = [new global.Error(), -8, -27];\n  const runOnUI = function (worklet) {\n    if (__DEV__ && !SHOULD_BE_USE_WEB && _WORKLET) {\n      throw new Error('[Reanimated] `runOnUI` cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.');\n    }\n    if (__DEV__ && !SHOULD_BE_USE_WEB && !isWorkletFunction(worklet)) {\n      throw new Error('[Reanimated] `runOnUI` can only be used on worklets.');\n    }\n    return (...args) => {\n      if (IS_JEST) {\n        NativeReanimatedModule.scheduleOnUI(makeShareableCloneRecursive(function () {\n          const _e = [new global.Error(), -3, -27];\n          const threadsJs4 = function () {\n            worklet(...args);\n          };\n          threadsJs4.__closure = {\n            worklet,\n            args\n          };\n          threadsJs4.__workletHash = 9086703493462;\n          threadsJs4.__initData = _worklet_9086703493462_init_data;\n          threadsJs4.__stackDetails = _e;\n          return threadsJs4;\n        }()));\n        return;\n      }\n      if (__DEV__) {\n        makeShareableCloneRecursive(worklet);\n        makeShareableCloneRecursive(args);\n      }\n      _runOnUIQueue.push([worklet, args]);\n      if (_runOnUIQueue.length === 1) {\n        queueMicrotask(() => {\n          const queue = _runOnUIQueue;\n          _runOnUIQueue = [];\n          NativeReanimatedModule.scheduleOnUI(makeShareableCloneRecursive(function () {\n            const _e = [new global.Error(), -3, -27];\n            const threadsJs5 = function () {\n              queue.forEach(([worklet, args]) => {\n                worklet(...args);\n              });\n              callMicrotasks();\n            };\n            threadsJs5.__closure = {\n              queue,\n              callMicrotasks\n            };\n            threadsJs5.__workletHash = 5843954769346;\n            threadsJs5.__initData = _worklet_5843954769346_init_data;\n            threadsJs5.__stackDetails = _e;\n            return threadsJs5;\n          }()));\n        });\n      }\n    };\n  };\n  runOnUI.__closure = {\n    __DEV__,\n    SHOULD_BE_USE_WEB,\n    isWorkletFunction,\n    IS_JEST,\n    NativeReanimatedModule,\n    makeShareableCloneRecursive,\n    callMicrotasks\n  };\n  runOnUI.__workletHash = 288424691519;\n  runOnUI.__initData = _worklet_288424691519_init_data;\n  runOnUI.__stackDetails = _e;\n  return runOnUI;\n}();\nconst _worklet_10638804238608_init_data = {\n  code: \"function threadsJs6(){const{worklet,args,makeShareableCloneOnUIRecursive}=this.__closure;const result=worklet(...args);return makeShareableCloneOnUIRecursive(result);}\",\n  location: \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\threads.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"threadsJs6\\\",\\\"worklet\\\",\\\"args\\\",\\\"makeShareableCloneOnUIRecursive\\\",\\\"__closure\\\",\\\"result\\\"],\\\"sources\\\":[\\\"C:/Users/user/OneDrive/Documents/rn/l/node_modules/react-native-reanimated/lib/module/threads.js\\\"],\\\"mappings\\\":\\\"AAwHqF,SAAAA,UAAMA,CAAA,QAAAC,OAAA,CAAAC,IAAA,CAAAC,+BAAA,OAAAC,SAAA,CAGrF,KAAM,CAAAC,MAAM,CAAGJ,OAAO,CAAC,GAAGC,IAAI,CAAC,CAC/B,MAAO,CAAAC,+BAA+B,CAACE,MAAM,CAAC,CAChD\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.15.1\"\n};\nexport function executeOnUIRuntimeSync(worklet) {\n  return (...args) => {\n    return NativeReanimatedModule.executeOnUIRuntimeSync(makeShareableCloneRecursive(function () {\n      const _e = [new global.Error(), -4, -27];\n      const threadsJs6 = function () {\n        const result = worklet(...args);\n        return makeShareableCloneOnUIRecursive(result);\n      };\n      threadsJs6.__closure = {\n        worklet,\n        args,\n        makeShareableCloneOnUIRecursive\n      };\n      threadsJs6.__workletHash = 10638804238608;\n      threadsJs6.__initData = _worklet_10638804238608_init_data;\n      threadsJs6.__stackDetails = _e;\n      return threadsJs6;\n    }()));\n  };\n}\nconst _worklet_14131306690172_init_data = {\n  code: \"function runOnUIImmediately_threadsJs7(worklet){const{__DEV__,SHOULD_BE_USE_WEB,isWorkletFunction,NativeReanimatedModule,makeShareableCloneRecursive}=this.__closure;if(__DEV__&&!SHOULD_BE_USE_WEB&&_WORKLET){throw new Error('[Reanimated] `runOnUIImmediately` cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.');}if(__DEV__&&!SHOULD_BE_USE_WEB&&!isWorkletFunction(worklet)){throw new Error('[Reanimated] `runOnUIImmediately` can only be used on worklets.');}return function(...args){NativeReanimatedModule.scheduleOnUI(makeShareableCloneRecursive(function(){'worklet';worklet(...args);}));};}\",\n  location: \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\threads.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"runOnUIImmediately_threadsJs7\\\",\\\"worklet\\\",\\\"__DEV__\\\",\\\"SHOULD_BE_USE_WEB\\\",\\\"isWorkletFunction\\\",\\\"NativeReanimatedModule\\\",\\\"makeShareableCloneRecursive\\\",\\\"__closure\\\",\\\"_WORKLET\\\",\\\"Error\\\",\\\"args\\\",\\\"scheduleOnUI\\\"],\\\"sources\\\":[\\\"C:/Users/user/OneDrive/Documents/rn/l/node_modules/react-native-reanimated/lib/module/threads.js\\\"],\\\"mappings\\\":\\\"AAsIO,SAAAA,6BAAqCA,CAAAC,OAAA,QAAAC,OAAA,CAAAC,iBAAA,CAAAC,iBAAA,CAAAC,sBAAA,CAAAC,2BAAA,OAAAC,SAAA,CAG1C,GAAIL,OAAO,EAAI,CAACC,iBAAiB,EAAIK,QAAQ,CAAE,CAC7C,KAAM,IAAI,CAAAC,KAAK,CAAC,0KAA0K,CAAC,CAC7L,CACA,GAAIP,OAAO,EAAI,CAACC,iBAAiB,EAAI,CAACC,iBAAiB,CAACH,OAAO,CAAC,CAAE,CAChE,KAAM,IAAI,CAAAQ,KAAK,CAAC,iEAAiE,CAAC,CACpF,CACA,MAAO,UAAC,GAAGC,IAAI,CAAK,CAClBL,sBAAsB,CAACM,YAAY,CAACL,2BAA2B,CAAC,UAAM,CACpE,SAAS,CAETL,OAAO,CAAC,GAAGS,IAAI,CAAC,CAClB,CAAC,CAAC,CAAC,CACL,CAAC,CACH\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.15.1\"\n};\nconst _worklet_1655652225370_init_data = {\n  code: \"function threadsJs8(){const{worklet,args}=this.__closure;worklet(...args);}\",\n  location: \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\threads.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"threadsJs8\\\",\\\"worklet\\\",\\\"args\\\",\\\"__closure\\\"],\\\"sources\\\":[\\\"C:/Users/user/OneDrive/Documents/rn/l/node_modules/react-native-reanimated/lib/module/threads.js\\\"],\\\"mappings\\\":\\\"AAgJoE,SAAAA,UAAMA,CAAA,QAAAC,OAAA,CAAAC,IAAA,OAAAC,SAAA,CAGpEF,OAAO,CAAC,GAAGC,IAAI,CAAC,CAClB\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.15.1\"\n};\nexport const runOnUIImmediately = function () {\n  const _e = [new global.Error(), -6, -27];\n  const runOnUIImmediately = function (worklet) {\n    if (__DEV__ && !SHOULD_BE_USE_WEB && _WORKLET) {\n      throw new Error('[Reanimated] `runOnUIImmediately` cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.');\n    }\n    if (__DEV__ && !SHOULD_BE_USE_WEB && !isWorkletFunction(worklet)) {\n      throw new Error('[Reanimated] `runOnUIImmediately` can only be used on worklets.');\n    }\n    return (...args) => {\n      NativeReanimatedModule.scheduleOnUI(makeShareableCloneRecursive(function () {\n        const _e = [new global.Error(), -3, -27];\n        const threadsJs8 = function () {\n          worklet(...args);\n        };\n        threadsJs8.__closure = {\n          worklet,\n          args\n        };\n        threadsJs8.__workletHash = 1655652225370;\n        threadsJs8.__initData = _worklet_1655652225370_init_data;\n        threadsJs8.__stackDetails = _e;\n        return threadsJs8;\n      }()));\n    };\n  };\n  runOnUIImmediately.__closure = {\n    __DEV__,\n    SHOULD_BE_USE_WEB,\n    isWorkletFunction,\n    NativeReanimatedModule,\n    makeShareableCloneRecursive\n  };\n  runOnUIImmediately.__workletHash = 14131306690172;\n  runOnUIImmediately.__initData = _worklet_14131306690172_init_data;\n  runOnUIImmediately.__stackDetails = _e;\n  return runOnUIImmediately;\n}();\nfunction runWorkletOnJS(worklet, ...args) {\n  worklet(...args);\n}\nconst _worklet_3090385757078_init_data = {\n  code: \"function runOnJS_threadsJs9(fun){const runOnJS_threadsJs9=this._recur;const{SHOULD_BE_USE_WEB,isWorkletFunction,runWorkletOnJS,makeShareableCloneOnUIRecursive}=this.__closure;if(SHOULD_BE_USE_WEB||!_WORKLET){return function(...args){return queueMicrotask(args.length?function(){return fun(...args);}:fun);};}if(isWorkletFunction(fun)){return function(...args){return runOnJS_threadsJs9(runWorkletOnJS)(fun,...args);};}if(fun.__remoteFunction){fun=fun.__remoteFunction;}return function(...args){global._scheduleOnJS(fun,args.length>0?makeShareableCloneOnUIRecursive(args):undefined);};}\",\n  location: \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\threads.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"runOnJS_threadsJs9\\\",\\\"fun\\\",\\\"_recur\\\",\\\"SHOULD_BE_USE_WEB\\\",\\\"isWorkletFunction\\\",\\\"runWorkletOnJS\\\",\\\"makeShareableCloneOnUIRecursive\\\",\\\"__closure\\\",\\\"_WORKLET\\\",\\\"args\\\",\\\"queueMicrotask\\\",\\\"length\\\",\\\"__remoteFunction\\\",\\\"global\\\",\\\"_scheduleOnJS\\\",\\\"undefined\\\"],\\\"sources\\\":[\\\"C:/Users/user/OneDrive/Documents/rn/l/node_modules/react-native-reanimated/lib/module/threads.js\\\"],\\\"mappings\\\":\\\"AAoKO,SAAAA,kBAAsBA,CAAAC,GAAA,QAAAD,kBAAA,MAAAE,MAAA,OAAAC,iBAAA,CAAAC,iBAAA,CAAAC,cAAA,CAAAC,+BAAA,OAAAC,SAAA,CAG3B,GAAIJ,iBAAiB,EAAI,CAACK,QAAQ,CAAE,CAElC,MAAO,UAAC,GAAGC,IAAI,QAAK,CAAAC,cAAc,CAACD,IAAI,CAACE,MAAM,CAAG,iBAAM,CAAAV,GAAG,CAAC,GAAGQ,IAAI,CAAC,GAAGR,GAAG,CAAC,GAC5E,CACA,GAAIG,iBAAiB,CAACH,GAAG,CAAC,CAAE,CAI1B,MAAO,UAAC,GAAGQ,IAAI,QAAK,CAAAT,kBAAQ,CAAAK,cAAwB,EAAAJ,GAAK,IAAAQ,IAAA,IAC3D,CACA,GAAIR,GAAG,CAACW,gBAAgB,CAAE,CAKxBX,GAAG,CAAGA,GAAG,CAACW,gBAAgB,CAC5B,CACA,MAAO,UAAC,GAAGH,IAAI,CAAK,CAClBI,MAAM,CAACC,aAAa,CAACb,GAAG,CAAEQ,IAAI,CAACE,MAAM,CAAG,CAAC,CAEzCL,+BAA+B,CAACG,IAAI,CAAC,CAAGM,SAAS,CAAC,CACpD,CAAC,CACH\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.15.1\"\n};\nexport const runOnJS = function () {\n  const _e = [new global.Error(), -5, -27];\n  const runOnJS = function (fun) {\n    if (SHOULD_BE_USE_WEB || !_WORKLET) {\n      return (...args) => queueMicrotask(args.length ? () => fun(...args) : fun);\n    }\n    if (isWorkletFunction(fun)) {\n      return (...args) => runOnJS(runWorkletOnJS)(fun, ...args);\n    }\n    if (fun.__remoteFunction) {\n      fun = fun.__remoteFunction;\n    }\n    return (...args) => {\n      global._scheduleOnJS(fun, args.length > 0 ? makeShareableCloneOnUIRecursive(args) : undefined);\n    };\n  };\n  runOnJS.__closure = {\n    SHOULD_BE_USE_WEB,\n    isWorkletFunction,\n    runWorkletOnJS,\n    makeShareableCloneOnUIRecursive\n  };\n  runOnJS.__workletHash = 3090385757078;\n  runOnJS.__initData = _worklet_3090385757078_init_data;\n  runOnJS.__stackDetails = _e;\n  return runOnJS;\n}();","map":{"version":3,"names":["NativeReanimatedModule","isJest","shouldBeUseWeb","makeShareableCloneOnUIRecursive","makeShareableCloneRecursive","isWorkletFunction","IS_JEST","SHOULD_BE_USE_WEB","_runOnUIQueue","_worklet_12099126053083_init_data","code","location","sourceMap","version","setupMicrotasks","_e","global","Error","microtasksQueue","isExecutingMicrotasksQueue","queueMicrotask","callback","push","__callMicrotasks","index","length","_maybeFlushUIUpdatesQueue","__closure","__workletHash","__initData","__stackDetails","_worklet_6162042684295_init_data","callMicrotasksOnUIThread","callMicrotasks","_worklet_288424691519_init_data","_worklet_9086703493462_init_data","_worklet_5843954769346_init_data","runOnUI","worklet","__DEV__","_WORKLET","args","scheduleOnUI","threadsJs4","queue","threadsJs5","forEach","_worklet_10638804238608_init_data","executeOnUIRuntimeSync","threadsJs6","result","_worklet_14131306690172_init_data","_worklet_1655652225370_init_data","runOnUIImmediately","threadsJs8","runWorkletOnJS","_worklet_3090385757078_init_data","runOnJS","fun","__remoteFunction","_scheduleOnJS","undefined"],"sources":["C:\\Users\\user\\OneDrive\\Documents\\rn\\l\\node_modules\\react-native-reanimated\\lib\\module\\threads.ts"],"sourcesContent":["'use strict';\nimport NativeReanimatedModule from './NativeReanimated';\nimport { isJest, shouldBeUseWeb } from './PlatformChecker';\nimport type { WorkletFunction } from './commonTypes';\nimport {\n  makeShareableCloneOnUIRecursive,\n  makeShareableCloneRecursive,\n} from './shareables';\nimport { isWorkletFunction } from './commonTypes';\n\nconst IS_JEST = isJest();\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\n/**\n * An array of [worklet, args] pairs.\n * */\nlet _runOnUIQueue: Array<[WorkletFunction<unknown[], unknown>, unknown[]]> = [];\n\nexport function setupMicrotasks() {\n  'worklet';\n\n  let microtasksQueue: Array<() => void> = [];\n  let isExecutingMicrotasksQueue = false;\n  global.queueMicrotask = (callback: () => void) => {\n    microtasksQueue.push(callback);\n  };\n\n  global.__callMicrotasks = () => {\n    if (isExecutingMicrotasksQueue) {\n      return;\n    }\n    try {\n      isExecutingMicrotasksQueue = true;\n      for (let index = 0; index < microtasksQueue.length; index += 1) {\n        // we use classic 'for' loop because the size of the currentTasks array may change while executing some of the callbacks due to queueMicrotask calls\n        microtasksQueue[index]();\n      }\n      microtasksQueue = [];\n      global._maybeFlushUIUpdatesQueue();\n    } finally {\n      isExecutingMicrotasksQueue = false;\n    }\n  };\n}\n\nfunction callMicrotasksOnUIThread() {\n  'worklet';\n  global.__callMicrotasks();\n}\n\nexport const callMicrotasks = SHOULD_BE_USE_WEB\n  ? () => {\n      // on web flushing is a noop as immediates are handled by the browser\n    }\n  : callMicrotasksOnUIThread;\n\n/**\n * Lets you asynchronously run [workletized](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#to-workletize) functions on the [UI thread](https://docs.swmansion.com/react-native-reanimated/docs/threading/runOnUI).\n *\n * This method does not schedule the work immediately but instead waits for other worklets\n * to be scheduled within the same JS loop. It uses queueMicrotask to schedule all the worklets\n * at once making sure they will run within the same frame boundaries on the UI thread.\n *\n * @param fun - A reference to a function you want to execute on the [UI thread](https://docs.swmansion.com/react-native-reanimated/docs/threading/runOnUI) from the [JavaScript thread](https://docs.swmansion.com/react-native-reanimated/docs/threading/runOnUI).\n * @returns A function that accepts arguments for the function passed as the first argument.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/threading/runOnUI\n */\n// @ts-expect-error This overload is correct since it's what user sees in his code\n// before it's transformed by Reanimated Babel plugin.\nexport function runOnUI<Args extends unknown[], ReturnValue>(\n  worklet: (...args: Args) => ReturnValue\n): (...args: Args) => void;\n\nexport function runOnUI<Args extends unknown[], ReturnValue>(\n  worklet: WorkletFunction<Args, ReturnValue>\n): (...args: Args) => void {\n  'worklet';\n  if (__DEV__ && !SHOULD_BE_USE_WEB && _WORKLET) {\n    throw new Error(\n      '[Reanimated] `runOnUI` cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.'\n    );\n  }\n  if (__DEV__ && !SHOULD_BE_USE_WEB && !isWorkletFunction(worklet)) {\n    throw new Error('[Reanimated] `runOnUI` can only be used on worklets.');\n  }\n  return (...args) => {\n    if (IS_JEST) {\n      // Mocking time in Jest is tricky as both requestAnimationFrame and queueMicrotask\n      // callbacks run on the same queue and can be interleaved. There is no way\n      // to flush particular queue in Jest and the only control over mocked timers\n      // is by using jest.advanceTimersByTime() method which advances all types\n      // of timers including immediate and animation callbacks. Ideally we'd like\n      // to have some way here to schedule work along with React updates, but\n      // that's not possible, and hence in Jest environment instead of using scheduling\n      // mechanism we just schedule the work ommiting the queue. This is ok for the\n      // uses that we currently have but may not be ok for future tests that we write.\n      NativeReanimatedModule.scheduleOnUI(\n        makeShareableCloneRecursive(() => {\n          'worklet';\n          worklet(...args);\n        })\n      );\n      return;\n    }\n    if (__DEV__) {\n      // in DEV mode we call shareable conversion here because in case the object\n      // can't be converted, we will get a meaningful stack-trace as opposed to the\n      // situation when conversion is only done via microtask queue. This does not\n      // make the app particularily less efficient as converted objects are cached\n      // and for a given worklet the conversion only happens once.\n      makeShareableCloneRecursive(worklet);\n      makeShareableCloneRecursive(args);\n    }\n    _runOnUIQueue.push([worklet as WorkletFunction, args]);\n    if (_runOnUIQueue.length === 1) {\n      queueMicrotask(() => {\n        const queue = _runOnUIQueue;\n        _runOnUIQueue = [];\n        NativeReanimatedModule.scheduleOnUI(\n          makeShareableCloneRecursive(() => {\n            'worklet';\n            // eslint-disable-next-line @typescript-eslint/no-shadow\n            queue.forEach(([worklet, args]) => {\n              worklet(...args);\n            });\n            callMicrotasks();\n          })\n        );\n      });\n    }\n  };\n}\n\n// @ts-expect-error Check `executeOnUIRuntimeSync` overload above.\nexport function executeOnUIRuntimeSync<Args extends unknown[], ReturnValue>(\n  worklet: (...args: Args) => ReturnValue\n): (...args: Args) => ReturnValue;\n\nexport function executeOnUIRuntimeSync<Args extends unknown[], ReturnValue>(\n  worklet: WorkletFunction<Args, ReturnValue>\n): (...args: Args) => ReturnValue {\n  return (...args) => {\n    return NativeReanimatedModule.executeOnUIRuntimeSync(\n      makeShareableCloneRecursive(() => {\n        'worklet';\n        const result = worklet(...args);\n        return makeShareableCloneOnUIRecursive(result);\n      })\n    );\n  };\n}\n\n// @ts-expect-error Check `runOnUI` overload above.\nexport function runOnUIImmediately<Args extends unknown[], ReturnValue>(\n  worklet: (...args: Args) => ReturnValue\n): WorkletFunction<Args, ReturnValue>;\n/**\n * Schedule a worklet to execute on the UI runtime skipping batching mechanism.\n */\nexport function runOnUIImmediately<Args extends unknown[], ReturnValue>(\n  worklet: WorkletFunction<Args, ReturnValue>\n): (...args: Args) => void {\n  'worklet';\n  if (__DEV__ && !SHOULD_BE_USE_WEB && _WORKLET) {\n    throw new Error(\n      '[Reanimated] `runOnUIImmediately` cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.'\n    );\n  }\n  if (__DEV__ && !SHOULD_BE_USE_WEB && !isWorkletFunction(worklet)) {\n    throw new Error(\n      '[Reanimated] `runOnUIImmediately` can only be used on worklets.'\n    );\n  }\n  return (...args) => {\n    NativeReanimatedModule.scheduleOnUI(\n      makeShareableCloneRecursive(() => {\n        'worklet';\n        worklet(...args);\n      })\n    );\n  };\n}\n\ntype ReleaseRemoteFunction<Args extends unknown[], ReturnValue> = {\n  (...args: Args): ReturnValue;\n};\n\ntype DevRemoteFunction<Args extends unknown[], ReturnValue> = {\n  __remoteFunction: (...args: Args) => ReturnValue;\n};\n\ntype RemoteFunction<Args extends unknown[], ReturnValue> =\n  | ReleaseRemoteFunction<Args, ReturnValue>\n  | DevRemoteFunction<Args, ReturnValue>;\n\nfunction runWorkletOnJS<Args extends unknown[], ReturnValue>(\n  worklet: WorkletFunction<Args, ReturnValue>,\n  ...args: Args\n): void {\n  // remote function that calls a worklet synchronously on the JS runtime\n  worklet(...args);\n}\n\n/**\n * Lets you asynchronously run non-[workletized](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#to-workletize) functions that couldn't otherwise run on the [UI thread](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#ui-thread).\n * This applies to most external libraries as they don't have their functions marked with \"worklet\"; directive.\n *\n * @param fun - A reference to a function you want to execute on the JavaScript thread from the UI thread.\n * @returns A function that accepts arguments for the function passed as the first argument.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/threading/runOnJS\n */\nexport function runOnJS<Args extends unknown[], ReturnValue>(\n  fun:\n    | ((...args: Args) => ReturnValue)\n    | RemoteFunction<Args, ReturnValue>\n    | WorkletFunction<Args, ReturnValue>\n): (...args: Args) => void {\n  'worklet';\n  type FunDevRemote = Extract<typeof fun, DevRemoteFunction<Args, ReturnValue>>;\n  if (SHOULD_BE_USE_WEB || !_WORKLET) {\n    // if we are already on the JS thread, we just schedule the worklet on the JS queue\n    return (...args) =>\n      queueMicrotask(\n        args.length\n          ? () => (fun as (...args: Args) => ReturnValue)(...args)\n          : (fun as () => ReturnValue)\n      );\n  }\n  if (isWorkletFunction<Args, ReturnValue>(fun)) {\n    // If `fun` is a worklet, we schedule a call of a remote function `runWorkletOnJS`\n    // and pass the worklet as a first argument followed by original arguments.\n\n    return (...args) =>\n      runOnJS(runWorkletOnJS<Args, ReturnValue>)(\n        fun as WorkletFunction<Args, ReturnValue>,\n        ...args\n      );\n  }\n  if ((fun as FunDevRemote).__remoteFunction) {\n    // In development mode the function provided as `fun` throws an error message\n    // such that when someone accidentally calls it directly on the UI runtime, they\n    // see that they should use `runOnJS` instead. To facilitate that we put the\n    // reference to the original remote function in the `__remoteFunction` property.\n    fun = (fun as FunDevRemote).__remoteFunction;\n  }\n  return (...args) => {\n    global._scheduleOnJS(\n      fun as\n        | ((...args: Args) => ReturnValue)\n        | WorkletFunction<Args, ReturnValue>,\n      args.length > 0\n        ? // TODO TYPESCRIPT this cast is terrible but will be fixed\n          (makeShareableCloneOnUIRecursive(args) as unknown as unknown[])\n        : undefined\n    );\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}