{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axiosInstance from '../../../../Security/helpers/axios';\nconst initialState = {\n  society: null,\n  status: 'idle',\n  error: null\n};\nexport const fetchSocietyById = createAsyncThunk('society/fetchSocietyById', async societyId => {\n  const response = await axiosInstance.get(`/societyDetails/${societyId}`);\n  console.log(response.data, \"society details\");\n  return response.data.society;\n});\nconst societySlice = createSlice({\n  name: 'society',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchSocietyById.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchSocietyById.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.society = action.payload;\n    }).addCase(fetchSocietyById.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport default societySlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axiosInstance","initialState","society","status","error","fetchSocietyById","societyId","response","get","console","log","data","societySlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/src/panel/User/Redux/Slice/Security_Panel/SocietyByIdSlice.js"],"sourcesContent":["\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axiosInstance from '../../../../Security/helpers/axios';\n\nconst initialState = {\n    society: null,\n    status: 'idle',\n    error: null\n};\n\nexport const fetchSocietyById = createAsyncThunk(\n    'society/fetchSocietyById',\n    async (societyId) => {\n        const response = await axiosInstance.get(`/societyDetails/${societyId}`);\n        console.log(response.data,\"society details\")\n        return response.data.society;\n\n    }\n);\nconst societySlice = createSlice({\n    name: 'society',\n    initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchSocietyById.pending, (state) => {\n                state.status = 'loading';\n            })\n            .addCase(fetchSocietyById.fulfilled, (state, action) => {\n                state.status = 'succeeded';\n                state.society = action.payload;\n            })\n            .addCase(fetchSocietyById.rejected, (state, action) => {\n                state.status = 'failed';\n                state.error = action.error.message;\n            });\n    }\n});\n\nexport default societySlice.reducer;\n"],"mappings":"AACA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,aAAa,MAAM,oCAAoC;AAE9D,MAAMC,YAAY,GAAG;EACjBC,OAAO,EAAE,IAAI;EACbC,MAAM,EAAE,MAAM;EACdC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGN,gBAAgB,CAC5C,0BAA0B,EAC1B,MAAOO,SAAS,IAAK;EACjB,MAAMC,QAAQ,GAAG,MAAMP,aAAa,CAACQ,GAAG,CAAC,mBAAmBF,SAAS,EAAE,CAAC;EACxEG,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,EAAC,iBAAiB,CAAC;EAC5C,OAAOJ,QAAQ,CAACI,IAAI,CAACT,OAAO;AAEhC,CACJ,CAAC;AACD,MAAMU,YAAY,GAAGd,WAAW,CAAC;EAC7Be,IAAI,EAAE,SAAS;EACfZ,YAAY;EACZa,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACZ,gBAAgB,CAACa,OAAO,EAAGC,KAAK,IAAK;MAC1CA,KAAK,CAAChB,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDc,OAAO,CAACZ,gBAAgB,CAACe,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACpDF,KAAK,CAAChB,MAAM,GAAG,WAAW;MAC1BgB,KAAK,CAACjB,OAAO,GAAGmB,MAAM,CAACC,OAAO;IAClC,CAAC,CAAC,CACDL,OAAO,CAACZ,gBAAgB,CAACkB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACnDF,KAAK,CAAChB,MAAM,GAAG,QAAQ;MACvBgB,KAAK,CAACf,KAAK,GAAGiB,MAAM,CAACjB,KAAK,CAACoB,OAAO;IACtC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeZ,YAAY,CAACa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}