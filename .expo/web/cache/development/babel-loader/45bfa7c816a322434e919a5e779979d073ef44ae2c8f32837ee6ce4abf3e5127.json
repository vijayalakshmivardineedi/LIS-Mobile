{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axiosInstance from '../../../../Security/helpers/axios';\nexport const fetchCommityMembers = createAsyncThunk(\"quickContacts/fetchCommityMembers\", async ({\n  societyId\n}, {\n  rejectWithValue\n}) => {\n  try {\n    response = await axiosInstance.get(`/getCommityMembersBySocietyId/${societyId}`);\n    return response.data.commityMember;\n  } catch (error) {\n    return rejectWithValue(error.response ? error.response.data : error.message);\n  }\n});\nconst quickContactsSlice = createSlice({\n  name: \"quickContacts\",\n  initialState: {\n    quickContacts: [],\n    status: \"idle\",\n    error: null,\n    successMessage: null\n  },\n  reducers: {\n    resetState: state => {\n      state.loading = false;\n      state.error = null;\n      state.success = false;\n      state.successMessage = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchCommityMembers.pending, state => {\n      state.status = \"loading\";\n    }).addCase(fetchCommityMembers.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.quickContacts = action.payload;\n      state.successMessage = action.payload.message;\n    }).addCase(fetchCommityMembers.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.payload.message;\n    });\n  }\n});\nexport const {\n  resetState\n} = quickContactsSlice.actions;\nexport default quickContactsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axiosInstance","fetchCommityMembers","societyId","rejectWithValue","response","get","data","commityMember","error","message","quickContactsSlice","name","initialState","quickContacts","status","successMessage","reducers","resetState","state","loading","success","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/src/panel/User/Redux/Slice/Security_Panel/QuickContactsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from '../../../../Security/helpers/axios';\r\n\r\n//router.get('/getCommityMembersBySocietyId/:societyId', getCommityMembersBySocietyId);\r\n\r\nexport const fetchCommityMembers = createAsyncThunk(\r\n    \"quickContacts/fetchCommityMembers\",\r\n    async ({societyId}, { rejectWithValue }) => {\r\n        try {\r\n            response = await axiosInstance.get(`/getCommityMembersBySocietyId/${societyId}`\r\n        );\r\n        return response.data.commityMember;\r\n        } catch (error) {\r\n            return rejectWithValue(error.response ? error.response.data : error.message);\r\n        }\r\n    }\r\n);\r\n\r\n\r\nconst quickContactsSlice = createSlice({\r\n    name: \"quickContacts\",\r\n    initialState: {\r\n        quickContacts: [],\r\n        status: \"idle\",\r\n        error: null,\r\n        successMessage: null,\r\n\r\n    },\r\n    reducers: {\r\n        resetState: (state) => {\r\n            state.loading = false;\r\n            state.error = null;\r\n            state.success = false;\r\n            state.successMessage = null;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchCommityMembers.pending, (state) => {\r\n                state.status = \"loading\";\r\n            })\r\n            .addCase(fetchCommityMembers.fulfilled, (state, action) => {\r\n                state.status = \"succeeded\";\r\n                state.quickContacts = action.payload;\r\n                state.successMessage = action.payload.message;\r\n            })\r\n            .addCase(fetchCommityMembers.rejected, (state, action) => {\r\n                state.status = \"failed\";\r\n                state.error = action.payload.message;\r\n            });\r\n    },\r\n});\r\n\r\nexport const { resetState } = quickContactsSlice.actions;\r\nexport default quickContactsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,aAAa,MAAM,oCAAoC;AAI9D,OAAO,MAAMC,mBAAmB,GAAGF,gBAAgB,CAC/C,mCAAmC,EACnC,OAAO;EAACG;AAAS,CAAC,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACxC,IAAI;IACAC,QAAQ,GAAG,MAAMJ,aAAa,CAACK,GAAG,CAAC,iCAAiCH,SAAS,EACjF,CAAC;IACD,OAAOE,QAAQ,CAACE,IAAI,CAACC,aAAa;EAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,OAAOL,eAAe,CAACK,KAAK,CAACJ,QAAQ,GAAGI,KAAK,CAACJ,QAAQ,CAACE,IAAI,GAAGE,KAAK,CAACC,OAAO,CAAC;EAChF;AACJ,CACJ,CAAC;AAGD,MAAMC,kBAAkB,GAAGZ,WAAW,CAAC;EACnCa,IAAI,EAAE,eAAe;EACrBC,YAAY,EAAE;IACVC,aAAa,EAAE,EAAE;IACjBC,MAAM,EAAE,MAAM;IACdN,KAAK,EAAE,IAAI;IACXO,cAAc,EAAE;EAEpB,CAAC;EACDC,QAAQ,EAAE;IACNC,UAAU,EAAGC,KAAK,IAAK;MACnBA,KAAK,CAACC,OAAO,GAAG,KAAK;MACrBD,KAAK,CAACV,KAAK,GAAG,IAAI;MAClBU,KAAK,CAACE,OAAO,GAAG,KAAK;MACrBF,KAAK,CAACH,cAAc,GAAG,IAAI;IAC/B;EACJ,CAAC;EACDM,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACtB,mBAAmB,CAACuB,OAAO,EAAGN,KAAK,IAAK;MAC7CA,KAAK,CAACJ,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDS,OAAO,CAACtB,mBAAmB,CAACwB,SAAS,EAAE,CAACP,KAAK,EAAEQ,MAAM,KAAK;MACvDR,KAAK,CAACJ,MAAM,GAAG,WAAW;MAC1BI,KAAK,CAACL,aAAa,GAAGa,MAAM,CAACC,OAAO;MACpCT,KAAK,CAACH,cAAc,GAAGW,MAAM,CAACC,OAAO,CAAClB,OAAO;IACjD,CAAC,CAAC,CACDc,OAAO,CAACtB,mBAAmB,CAAC2B,QAAQ,EAAE,CAACV,KAAK,EAAEQ,MAAM,KAAK;MACtDR,KAAK,CAACJ,MAAM,GAAG,QAAQ;MACvBI,KAAK,CAACV,KAAK,GAAGkB,MAAM,CAACC,OAAO,CAAClB,OAAO;IACxC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEQ;AAAW,CAAC,GAAGP,kBAAkB,CAACmB,OAAO;AACxD,eAAenB,kBAAkB,CAACoB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}