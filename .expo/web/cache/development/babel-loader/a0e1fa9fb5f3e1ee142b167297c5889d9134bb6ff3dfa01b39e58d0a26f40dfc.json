{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\node_modules\\\\react-native-calendars\\\\src\\\\calendar-list\\\\item.js\";\nimport React, { useRef, useMemo, useCallback } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { toMarkingFormat } from '../interface';\nimport { extractCalendarProps } from '../componentUpdater';\nimport styleConstructor from './style';\nimport Calendar from '../calendar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarListItem = React.memo(props => {\n  const {\n    item,\n    theme,\n    scrollToMonth,\n    horizontal,\n    calendarHeight,\n    calendarWidth,\n    style: propsStyle,\n    headerStyle,\n    onPressArrowLeft,\n    onPressArrowRight,\n    visible\n  } = props;\n  const style = useRef(styleConstructor(theme));\n  const calendarProps = extractCalendarProps(props);\n  const dateString = toMarkingFormat(item);\n  const calendarStyle = useMemo(() => {\n    return [{\n      width: calendarWidth,\n      minHeight: calendarHeight\n    }, style.current.calendar, propsStyle];\n  }, [calendarWidth, calendarHeight, propsStyle]);\n  const textStyle = useMemo(() => {\n    return [calendarStyle, style.current.placeholderText];\n  }, [calendarStyle]);\n  const _onPressArrowLeft = useCallback((method, month) => {\n    const monthClone = month?.clone();\n    if (monthClone) {\n      if (onPressArrowLeft) {\n        onPressArrowLeft(method, monthClone);\n      } else if (scrollToMonth) {\n        const currentMonth = monthClone.getMonth();\n        monthClone.addMonths(-1);\n        while (monthClone.getMonth() === currentMonth) {\n          monthClone.setDate(monthClone.getDate() - 1);\n        }\n        scrollToMonth(monthClone);\n      }\n    }\n  }, [onPressArrowLeft, scrollToMonth]);\n  const _onPressArrowRight = useCallback((method, month) => {\n    const monthClone = month?.clone();\n    if (monthClone) {\n      if (onPressArrowRight) {\n        onPressArrowRight(method, monthClone);\n      } else if (scrollToMonth) {\n        monthClone.addMonths(1);\n        scrollToMonth(monthClone);\n      }\n    }\n  }, [onPressArrowRight, scrollToMonth]);\n  if (!visible) {\n    return _jsxDEV(Text, {\n      style: textStyle,\n      children: dateString\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this);\n  }\n  return _jsxDEV(Calendar, Object.assign({\n    hideArrows: true,\n    hideExtraDays: true\n  }, calendarProps, {\n    current: dateString,\n    style: calendarStyle,\n    headerStyle: horizontal ? headerStyle : undefined,\n    disableMonthChange: true,\n    onPressArrowLeft: horizontal ? _onPressArrowLeft : onPressArrowLeft,\n    onPressArrowRight: horizontal ? _onPressArrowRight : onPressArrowRight\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 13\n  }, this);\n});\nexport default CalendarListItem;\nCalendarListItem.displayName = 'CalendarListItem';","map":{"version":3,"names":["React","useRef","useMemo","useCallback","Text","toMarkingFormat","extractCalendarProps","styleConstructor","Calendar","jsxDEV","_jsxDEV","CalendarListItem","memo","props","item","theme","scrollToMonth","horizontal","calendarHeight","calendarWidth","style","propsStyle","headerStyle","onPressArrowLeft","onPressArrowRight","visible","calendarProps","dateString","calendarStyle","width","minHeight","current","calendar","textStyle","placeholderText","_onPressArrowLeft","method","month","monthClone","clone","currentMonth","getMonth","addMonths","setDate","getDate","_onPressArrowRight","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","assign","hideArrows","hideExtraDays","undefined","disableMonthChange","displayName"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/node_modules/react-native-calendars/src/calendar-list/item.js"],"sourcesContent":["import React, { useRef, useMemo, useCallback } from 'react';\nimport { Text } from 'react-native';\nimport { toMarkingFormat } from '../interface';\nimport { extractCalendarProps } from '../componentUpdater';\nimport styleConstructor from './style';\nimport Calendar from '../calendar';\nconst CalendarListItem = React.memo((props) => {\n    const { item, theme, scrollToMonth, horizontal, calendarHeight, calendarWidth, style: propsStyle, headerStyle, onPressArrowLeft, onPressArrowRight, visible } = props;\n    const style = useRef(styleConstructor(theme));\n    const calendarProps = extractCalendarProps(props);\n    const dateString = toMarkingFormat(item);\n    const calendarStyle = useMemo(() => {\n        return [\n            {\n                width: calendarWidth,\n                minHeight: calendarHeight\n            },\n            style.current.calendar,\n            propsStyle\n        ];\n    }, [calendarWidth, calendarHeight, propsStyle]);\n    const textStyle = useMemo(() => {\n        return [calendarStyle, style.current.placeholderText];\n    }, [calendarStyle]);\n    const _onPressArrowLeft = useCallback((method, month) => {\n        const monthClone = month?.clone();\n        if (monthClone) {\n            if (onPressArrowLeft) {\n                onPressArrowLeft(method, monthClone);\n            }\n            else if (scrollToMonth) {\n                const currentMonth = monthClone.getMonth();\n                monthClone.addMonths(-1);\n                // Make sure we actually get the previous month, not just 30 days before currentMonth.\n                while (monthClone.getMonth() === currentMonth) {\n                    monthClone.setDate(monthClone.getDate() - 1);\n                }\n                scrollToMonth(monthClone);\n            }\n        }\n    }, [onPressArrowLeft, scrollToMonth]);\n    const _onPressArrowRight = useCallback((method, month) => {\n        const monthClone = month?.clone();\n        if (monthClone) {\n            if (onPressArrowRight) {\n                onPressArrowRight(method, monthClone);\n            }\n            else if (scrollToMonth) {\n                monthClone.addMonths(1);\n                scrollToMonth(monthClone);\n            }\n        }\n    }, [onPressArrowRight, scrollToMonth]);\n    if (!visible) {\n        return (<Text style={textStyle}>{dateString}</Text>);\n    }\n    return (<Calendar hideArrows={true} hideExtraDays={true} {...calendarProps} current={dateString} style={calendarStyle} headerStyle={horizontal ? headerStyle : undefined} disableMonthChange onPressArrowLeft={horizontal ? _onPressArrowLeft : onPressArrowLeft} onPressArrowRight={horizontal ? _onPressArrowRight : onPressArrowRight}/>);\n});\nexport default CalendarListItem;\nCalendarListItem.displayName = 'CalendarListItem';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}