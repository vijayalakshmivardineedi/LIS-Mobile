{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\node_modules\\\\react-native-calendars\\\\src\\\\calendar\\\\day\\\\index.js\";\nimport omit from 'lodash/omit';\nimport isEqual from 'lodash/isEqual';\nimport some from 'lodash/some';\nimport XDate from 'xdate';\nimport React, { useMemo } from 'react';\nimport { formatNumbers, isToday } from '../../dateutils';\nimport { getDefaultLocale } from '../../services';\nimport { xdateToData } from '../../interface';\nimport BasicDay from './basic';\nimport PeriodDay from './period';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction areEqual(prevProps, nextProps) {\n  const prevPropsWithoutMarkDates = omit(prevProps, 'marking');\n  const nextPropsWithoutMarkDates = omit(nextProps, 'marking');\n  const didPropsChange = some(prevPropsWithoutMarkDates, function (value, key) {\n    return value !== nextPropsWithoutMarkDates[key];\n  });\n  const isMarkingEqual = isEqual(prevProps.marking, nextProps.marking);\n  return !didPropsChange && isMarkingEqual;\n}\nconst Day = React.memo(props => {\n  const {\n    date,\n    marking,\n    dayComponent,\n    markingType\n  } = props;\n  const _date = date ? new XDate(date) : undefined;\n  const _isToday = isToday(_date);\n  const markingAccessibilityLabel = useMemo(() => {\n    let label = '';\n    if (marking) {\n      if (marking.accessibilityLabel) {\n        return marking.accessibilityLabel;\n      }\n      if (marking.selected) {\n        label += 'selected ';\n        if (!marking.marked) {\n          label += 'You have no entries for this day ';\n        }\n      }\n      if (marking.marked) {\n        label += 'You have entries for this day ';\n      }\n      if (marking.startingDay) {\n        label += 'period start ';\n      }\n      if (marking.endingDay) {\n        label += 'period end ';\n      }\n      if (marking.disabled || marking.disableTouchEvent) {\n        label += 'disabled ';\n      }\n    }\n    return label;\n  }, [marking]);\n  const getAccessibilityLabel = useMemo(() => {\n    const today = getDefaultLocale().today || 'today';\n    const formatAccessibilityLabel = getDefaultLocale().formatAccessibilityLabel || 'dddd d MMMM yyyy';\n    return `${_isToday ? today : ''} ${_date?.toString(formatAccessibilityLabel)} ${markingAccessibilityLabel}`;\n  }, [_date, marking, _isToday]);\n  const Component = dayComponent || (markingType === 'period' ? PeriodDay : BasicDay);\n  const dayComponentProps = dayComponent ? {\n    date: xdateToData(date || new XDate())\n  } : undefined;\n  return _jsxDEV(Component, Object.assign({}, props, {\n    accessibilityLabel: getAccessibilityLabel\n  }, dayComponentProps, {\n    children: formatNumbers(_date?.getDate())\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}, areEqual);\nexport default Day;\nDay.displayName = 'Day';","map":{"version":3,"names":["omit","isEqual","some","XDate","React","useMemo","formatNumbers","isToday","getDefaultLocale","xdateToData","BasicDay","PeriodDay","jsxDEV","_jsxDEV","areEqual","prevProps","nextProps","prevPropsWithoutMarkDates","nextPropsWithoutMarkDates","didPropsChange","value","key","isMarkingEqual","marking","Day","memo","props","date","dayComponent","markingType","_date","undefined","_isToday","markingAccessibilityLabel","label","accessibilityLabel","selected","marked","startingDay","endingDay","disabled","disableTouchEvent","getAccessibilityLabel","today","formatAccessibilityLabel","toString","Component","dayComponentProps","Object","assign","children","getDate","fileName","_jsxFileName","lineNumber","columnNumber","displayName"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/node_modules/react-native-calendars/src/calendar/day/index.js"],"sourcesContent":["import omit from 'lodash/omit';\nimport isEqual from 'lodash/isEqual';\nimport some from 'lodash/some';\nimport XDate from 'xdate';\nimport React, { useMemo } from 'react';\nimport { formatNumbers, isToday } from '../../dateutils';\nimport { getDefaultLocale } from '../../services';\nimport { xdateToData } from '../../interface';\nimport BasicDay from './basic';\nimport PeriodDay from './period';\nfunction areEqual(prevProps, nextProps) {\n    const prevPropsWithoutMarkDates = omit(prevProps, 'marking');\n    const nextPropsWithoutMarkDates = omit(nextProps, 'marking');\n    const didPropsChange = some(prevPropsWithoutMarkDates, function (value, key) {\n        return value !== nextPropsWithoutMarkDates[key];\n    });\n    const isMarkingEqual = isEqual(prevProps.marking, nextProps.marking);\n    return !didPropsChange && isMarkingEqual;\n}\nconst Day = React.memo((props) => {\n    const { date, marking, dayComponent, markingType } = props;\n    const _date = date ? new XDate(date) : undefined;\n    const _isToday = isToday(_date);\n    const markingAccessibilityLabel = useMemo(() => {\n        let label = '';\n        if (marking) {\n            if (marking.accessibilityLabel) {\n                return marking.accessibilityLabel;\n            }\n            if (marking.selected) {\n                label += 'selected ';\n                if (!marking.marked) {\n                    label += 'You have no entries for this day ';\n                }\n            }\n            if (marking.marked) {\n                label += 'You have entries for this day ';\n            }\n            if (marking.startingDay) {\n                label += 'period start ';\n            }\n            if (marking.endingDay) {\n                label += 'period end ';\n            }\n            if (marking.disabled || marking.disableTouchEvent) {\n                label += 'disabled ';\n            }\n        }\n        return label;\n    }, [marking]);\n    const getAccessibilityLabel = useMemo(() => {\n        const today = getDefaultLocale().today || 'today';\n        const formatAccessibilityLabel = getDefaultLocale().formatAccessibilityLabel || 'dddd d MMMM yyyy';\n        return `${_isToday ? today : ''} ${_date?.toString(formatAccessibilityLabel)} ${markingAccessibilityLabel}`;\n    }, [_date, marking, _isToday]);\n    const Component = dayComponent || (markingType === 'period' ? PeriodDay : BasicDay);\n    const dayComponentProps = dayComponent ? { date: xdateToData(date || new XDate()) } : undefined;\n    return (\n    //@ts-expect-error\n    <Component {...props} accessibilityLabel={getAccessibilityLabel} {...dayComponentProps}>\n      {formatNumbers(_date?.getDate())}\n    </Component>);\n}, areEqual);\nexport default Day;\nDay.displayName = 'Day';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}