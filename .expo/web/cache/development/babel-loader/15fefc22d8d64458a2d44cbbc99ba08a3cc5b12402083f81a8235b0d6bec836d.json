{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nconst _excluded = [\"emoji\", \"colSize\"],\n  _excluded2 = [\"theme\", \"columns\", \"placeholder\", \"showHistory\", \"showSearchBar\", \"showSectionTitles\", \"showTabs\"];\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\node_modules\\\\react-native-emoji-selector\\\\index.js\";\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport emoji from \"emoji-datasource\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Categories = {\n  all: {\n    symbol: null,\n    name: \"All\"\n  },\n  history: {\n    symbol: \"🕘\",\n    name: \"Recently used\"\n  },\n  emotion: {\n    symbol: \"😀\",\n    name: \"Smileys & Emotion\"\n  },\n  people: {\n    symbol: \"🧑\",\n    name: \"People & Body\"\n  },\n  nature: {\n    symbol: \"🦄\",\n    name: \"Animals & Nature\"\n  },\n  food: {\n    symbol: \"🍔\",\n    name: \"Food & Drink\"\n  },\n  activities: {\n    symbol: \"⚾️\",\n    name: \"Activities\"\n  },\n  places: {\n    symbol: \"✈️\",\n    name: \"Travel & Places\"\n  },\n  objects: {\n    symbol: \"💡\",\n    name: \"Objects\"\n  },\n  symbols: {\n    symbol: \"🔣\",\n    name: \"Symbols\"\n  },\n  flags: {\n    symbol: \"🏳️‍🌈\",\n    name: \"Flags\"\n  }\n};\nconst charFromUtf16 = utf16 => String.fromCodePoint(...utf16.split(\"-\").map(u => \"0x\" + u));\nexport const charFromEmojiObject = obj => charFromUtf16(obj.unified);\nconst filteredEmojis = emoji.filter(e => !e[\"obsoleted_by\"]);\nconst emojiByCategory = category => filteredEmojis.filter(e => e.category === category);\nconst sortEmoji = list => list.sort((a, b) => a.sort_order - b.sort_order);\nconst categoryKeys = Object.keys(Categories);\nconst TabBar = ({\n  theme,\n  activeCategory,\n  onPress,\n  width\n}) => {\n  const tabSize = width / categoryKeys.length;\n  return categoryKeys.map(c => {\n    const category = Categories[c];\n    if (c !== \"all\") return _jsxDEV(TouchableOpacity, {\n      onPress: () => onPress(category),\n      style: {\n        flex: 1,\n        height: tabSize,\n        borderColor: category === activeCategory ? theme : \"#EEEEEE\",\n        borderBottomWidth: 2,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: _jsxDEV(Text, {\n        style: {\n          textAlign: \"center\",\n          paddingBottom: 8,\n          fontSize: tabSize - 24\n        },\n        children: category.symbol\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)\n    }, category.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this);\n  });\n};\nconst EmojiCell = _ref => {\n  let {\n      emoji,\n      colSize\n    } = _ref,\n    other = _objectWithoutPropertiesLoose(_ref, _excluded);\n  return _jsxDEV(TouchableOpacity, Object.assign({\n    activeOpacity: 0.5,\n    style: {\n      width: colSize,\n      height: colSize,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }\n  }, other, {\n    children: _jsxDEV(Text, {\n      style: {\n        color: \"#FFFFFF\",\n        fontSize: colSize - 12\n      },\n      children: charFromEmojiObject(emoji)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 3\n  }, this);\n};\nconst storage_key = \"@react-native-emoji-selector:HISTORY\";\nexport default class EmojiSelector extends Component {\n  state = {\n    searchQuery: \"\",\n    category: Categories.people,\n    isReady: false,\n    history: [],\n    emojiList: null,\n    colSize: 0,\n    width: 0\n  };\n  handleTabSelect = category => {\n    if (this.state.isReady) {\n      if (this.scrollview) this.scrollview.scrollToOffset({\n        x: 0,\n        y: 0,\n        animated: false\n      });\n      this.setState({\n        searchQuery: \"\",\n        category\n      });\n    }\n  };\n  handleEmojiSelect = emoji => {\n    if (this.props.showHistory) {\n      this.addToHistoryAsync(emoji);\n    }\n    this.props.onEmojiSelected(charFromEmojiObject(emoji));\n  };\n  handleSearch = searchQuery => {\n    this.setState({\n      searchQuery\n    });\n  };\n  addToHistoryAsync = async emoji => {\n    let history = await AsyncStorage.getItem(storage_key);\n    let value = [];\n    if (!history) {\n      let record = Object.assign({}, emoji, {\n        count: 1\n      });\n      value.push(record);\n    } else {\n      let json = JSON.parse(history);\n      if (json.filter(r => r.unified === emoji.unified).length > 0) {\n        value = json;\n      } else {\n        let record = Object.assign({}, emoji, {\n          count: 1\n        });\n        value = [record, ...json];\n      }\n    }\n    AsyncStorage.setItem(storage_key, JSON.stringify(value));\n    this.setState({\n      history: value\n    });\n  };\n  loadHistoryAsync = async () => {\n    let result = await AsyncStorage.getItem(storage_key);\n    if (result) {\n      let history = JSON.parse(result);\n      this.setState({\n        history\n      });\n    }\n  };\n  renderEmojiCell = ({\n    item\n  }) => _jsxDEV(EmojiCell, {\n    emoji: item.emoji,\n    onPress: () => this.handleEmojiSelect(item.emoji),\n    colSize: this.state.colSize\n  }, item.key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n  returnSectionData() {\n    const {\n      history,\n      emojiList,\n      searchQuery,\n      category\n    } = this.state;\n    let emojiData = function () {\n      if (category === Categories.all && searchQuery === \"\") {\n        let largeList = [];\n        categoryKeys.forEach(c => {\n          const name = Categories[c].name;\n          const list = name === Categories.history.name ? history : emojiList[name];\n          if (c !== \"all\" && c !== \"history\") largeList = largeList.concat(list);\n        });\n        return largeList.map(emoji => ({\n          key: emoji.unified,\n          emoji\n        }));\n      } else {\n        let list;\n        const hasSearchQuery = searchQuery !== \"\";\n        const name = category.name;\n        if (hasSearchQuery) {\n          const filtered = emoji.filter(e => {\n            let display = false;\n            e.short_names.forEach(name => {\n              if (name.includes(searchQuery.toLowerCase())) display = true;\n            });\n            return display;\n          });\n          list = sortEmoji(filtered);\n        } else if (name === Categories.history.name) {\n          list = history;\n        } else {\n          list = emojiList[name];\n        }\n        return list.map(emoji => ({\n          key: emoji.unified,\n          emoji\n        }));\n      }\n    }();\n    return this.props.shouldInclude ? emojiData.filter(e => this.props.shouldInclude(e.emoji)) : emojiData;\n  }\n  prerenderEmojis(callback) {\n    let emojiList = {};\n    categoryKeys.forEach(c => {\n      let name = Categories[c].name;\n      emojiList[name] = sortEmoji(emojiByCategory(name));\n    });\n    this.setState({\n      emojiList,\n      colSize: Math.floor(this.state.width / this.props.columns)\n    }, callback);\n  }\n  handleLayout = ({\n    nativeEvent: {\n      layout\n    }\n  }) => {\n    this.setState({\n      width: layout.width\n    }, () => {\n      this.prerenderEmojis(() => {\n        this.setState({\n          isReady: true\n        });\n      });\n    });\n  };\n  componentDidMount() {\n    const {\n      category,\n      showHistory\n    } = this.props;\n    this.setState({\n      category\n    });\n    if (showHistory) {\n      this.loadHistoryAsync();\n    }\n  }\n  render() {\n    const _this$props = this.props,\n      {\n        theme,\n        columns,\n        placeholder,\n        showSearchBar,\n        showSectionTitles,\n        showTabs\n      } = _this$props,\n      other = _objectWithoutPropertiesLoose(_this$props, _excluded2);\n    const {\n      category,\n      colSize,\n      isReady,\n      searchQuery\n    } = this.state;\n    const Searchbar = _jsxDEV(View, {\n      style: styles.searchbar_container,\n      children: _jsxDEV(TextInput, {\n        style: styles.search,\n        placeholder: placeholder,\n        clearButtonMode: \"always\",\n        returnKeyType: \"done\",\n        autoCorrect: false,\n        underlineColorAndroid: theme,\n        value: searchQuery,\n        onChangeText: this.handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this);\n    const title = searchQuery !== \"\" ? \"Search Results\" : category.name;\n    return _jsxDEV(View, Object.assign({\n      style: styles.frame\n    }, other, {\n      onLayout: this.handleLayout,\n      children: [_jsxDEV(View, {\n        style: styles.tabBar,\n        children: showTabs && _jsxDEV(TabBar, {\n          activeCategory: category,\n          onPress: this.handleTabSelect,\n          theme: theme,\n          width: this.state.width\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          flex: 1\n        },\n        children: [showSearchBar && Searchbar, isReady ? _jsxDEV(View, {\n          style: {\n            flex: 1\n          },\n          children: _jsxDEV(View, {\n            style: styles.container,\n            children: [showSectionTitles && _jsxDEV(Text, {\n              style: styles.sectionHeader,\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 19\n            }, this), _jsxDEV(FlatList, {\n              style: styles.scrollview,\n              contentContainerStyle: {\n                paddingBottom: colSize\n              },\n              data: this.returnSectionData(),\n              renderItem: this.renderEmojiCell,\n              horizontal: false,\n              numColumns: columns,\n              keyboardShouldPersistTaps: \"always\",\n              ref: scrollview => this.scrollview = scrollview,\n              removeClippedSubviews: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this) : _jsxDEV(View, Object.assign({\n          style: styles.loader\n        }, other, {\n          children: _jsxDEV(ActivityIndicator, {\n            size: \"large\",\n            color: Platform.OS === \"android\" ? theme : \"#000000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this)\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this);\n  }\n}\nEmojiSelector.defaultProps = {\n  theme: \"#007AFF\",\n  category: Categories.all,\n  showTabs: true,\n  showSearchBar: true,\n  showHistory: false,\n  showSectionTitles: true,\n  columns: 6,\n  placeholder: \"Search...\"\n};\nconst styles = StyleSheet.create({\n  frame: {\n    flex: 1,\n    width: \"100%\"\n  },\n  loader: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  tabBar: {\n    flexDirection: \"row\"\n  },\n  scrollview: {\n    flex: 1\n  },\n  searchbar_container: {\n    width: \"100%\",\n    zIndex: 1,\n    backgroundColor: \"rgba(255,255,255,0.75)\"\n  },\n  search: Object.assign({}, Platform.select({\n    ios: {\n      height: 36,\n      paddingLeft: 8,\n      borderRadius: 10,\n      backgroundColor: \"#E5E8E9\"\n    }\n  }), {\n    margin: 8\n  }),\n  container: {\n    flex: 1,\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n    alignItems: \"flex-start\"\n  },\n  sectionHeader: {\n    margin: 8,\n    fontSize: 17,\n    width: \"100%\",\n    color: \"#8F8F8F\"\n  }\n});","map":{"version":3,"names":["React","Component","View","Text","StyleSheet","TouchableOpacity","TextInput","Platform","ActivityIndicator","AsyncStorage","FlatList","emoji","jsxDEV","_jsxDEV","Categories","all","symbol","name","history","emotion","people","nature","food","activities","places","objects","symbols","flags","charFromUtf16","utf16","String","fromCodePoint","split","map","u","charFromEmojiObject","obj","unified","filteredEmojis","filter","e","emojiByCategory","category","sortEmoji","list","sort","a","b","sort_order","categoryKeys","Object","keys","TabBar","theme","activeCategory","onPress","width","tabSize","length","c","style","flex","height","borderColor","borderBottomWidth","alignItems","justifyContent","children","textAlign","paddingBottom","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","EmojiCell","_ref","colSize","other","_objectWithoutPropertiesLoose","_excluded","assign","activeOpacity","color","storage_key","EmojiSelector","state","searchQuery","isReady","emojiList","handleTabSelect","scrollview","scrollToOffset","x","y","animated","setState","handleEmojiSelect","props","showHistory","addToHistoryAsync","onEmojiSelected","handleSearch","getItem","value","record","count","push","json","JSON","parse","r","setItem","stringify","loadHistoryAsync","result","renderEmojiCell","item","key","returnSectionData","emojiData","largeList","forEach","concat","hasSearchQuery","filtered","display","short_names","includes","toLowerCase","shouldInclude","prerenderEmojis","callback","Math","floor","columns","handleLayout","nativeEvent","layout","componentDidMount","render","_this$props","placeholder","showSearchBar","showSectionTitles","showTabs","_excluded2","Searchbar","styles","searchbar_container","search","clearButtonMode","returnKeyType","autoCorrect","underlineColorAndroid","onChangeText","title","frame","onLayout","tabBar","container","sectionHeader","contentContainerStyle","data","renderItem","horizontal","numColumns","keyboardShouldPersistTaps","ref","removeClippedSubviews","loader","size","OS","defaultProps","create","flexDirection","zIndex","backgroundColor","select","ios","paddingLeft","borderRadius","margin","flexWrap"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/node_modules/react-native-emoji-selector/index.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  TextInput,\n  Platform,\n  ActivityIndicator,\n  AsyncStorage,\n  FlatList\n} from \"react-native\";\nimport emoji from \"emoji-datasource\";\n\nexport const Categories = {\n  all: {\n    symbol: null,\n    name: \"All\"\n  },\n  history: {\n    symbol: \"🕘\",\n    name: \"Recently used\"\n  },\n  emotion: {\n    symbol: \"😀\",\n    name: \"Smileys & Emotion\"\n  },\n  people: {\n    symbol: \"🧑\",\n    name: \"People & Body\"\n  },\n  nature: {\n    symbol: \"🦄\",\n    name: \"Animals & Nature\"\n  },\n  food: {\n    symbol: \"🍔\",\n    name: \"Food & Drink\"\n  },\n  activities: {\n    symbol: \"⚾️\",\n    name: \"Activities\"\n  },\n  places: {\n    symbol: \"✈️\",\n    name: \"Travel & Places\"\n  },\n  objects: {\n    symbol: \"💡\",\n    name: \"Objects\"\n  },\n  symbols: {\n    symbol: \"🔣\",\n    name: \"Symbols\"\n  },\n  flags: {\n    symbol: \"🏳️‍🌈\",\n    name: \"Flags\"\n  }\n};\n\nconst charFromUtf16 = utf16 =>\n  String.fromCodePoint(...utf16.split(\"-\").map(u => \"0x\" + u));\nexport const charFromEmojiObject = obj => charFromUtf16(obj.unified);\nconst filteredEmojis = emoji.filter(e => !e[\"obsoleted_by\"]);\nconst emojiByCategory = category =>\n  filteredEmojis.filter(e => e.category === category);\nconst sortEmoji = list => list.sort((a, b) => a.sort_order - b.sort_order);\nconst categoryKeys = Object.keys(Categories);\n\nconst TabBar = ({ theme, activeCategory, onPress, width }) => {\n  const tabSize = width / categoryKeys.length;\n\n  return categoryKeys.map(c => {\n    const category = Categories[c];\n    if (c !== \"all\")\n      return (\n        <TouchableOpacity\n          key={category.name}\n          onPress={() => onPress(category)}\n          style={{\n            flex: 1,\n            height: tabSize,\n            borderColor: category === activeCategory ? theme : \"#EEEEEE\",\n            borderBottomWidth: 2,\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          }}\n        >\n          <Text\n            style={{\n              textAlign: \"center\",\n              paddingBottom: 8,\n              fontSize: tabSize - 24\n            }}\n          >\n            {category.symbol}\n          </Text>\n        </TouchableOpacity>\n      );\n  });\n};\n\nconst EmojiCell = ({ emoji, colSize, ...other }) => (\n  <TouchableOpacity\n    activeOpacity={0.5}\n    style={{\n      width: colSize,\n      height: colSize,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }}\n    {...other}\n  >\n    <Text style={{ color: \"#FFFFFF\", fontSize: colSize - 12 }}>\n      {charFromEmojiObject(emoji)}\n    </Text>\n  </TouchableOpacity>\n);\n\nconst storage_key = \"@react-native-emoji-selector:HISTORY\";\nexport default class EmojiSelector extends Component {\n  state = {\n    searchQuery: \"\",\n    category: Categories.people,\n    isReady: false,\n    history: [],\n    emojiList: null,\n    colSize: 0,\n    width: 0\n  };\n\n  //\n  //  HANDLER METHODS\n  //\n  handleTabSelect = category => {\n    if (this.state.isReady) {\n      if (this.scrollview)\n        this.scrollview.scrollToOffset({ x: 0, y: 0, animated: false });\n      this.setState({\n        searchQuery: \"\",\n        category\n      });\n    }\n  };\n\n  handleEmojiSelect = emoji => {\n    if (this.props.showHistory) {\n      this.addToHistoryAsync(emoji);\n    }\n    this.props.onEmojiSelected(charFromEmojiObject(emoji));\n  };\n\n  handleSearch = searchQuery => {\n    this.setState({ searchQuery });\n  };\n\n  addToHistoryAsync = async emoji => {\n    let history = await AsyncStorage.getItem(storage_key);\n\n    let value = [];\n    if (!history) {\n      // no history\n      let record = Object.assign({}, emoji, { count: 1 });\n      value.push(record);\n    } else {\n      let json = JSON.parse(history);\n      if (json.filter(r => r.unified === emoji.unified).length > 0) {\n        value = json;\n      } else {\n        let record = Object.assign({}, emoji, { count: 1 });\n        value = [record, ...json];\n      }\n    }\n\n    AsyncStorage.setItem(storage_key, JSON.stringify(value));\n    this.setState({\n      history: value\n    });\n  };\n\n  loadHistoryAsync = async () => {\n    let result = await AsyncStorage.getItem(storage_key);\n    if (result) {\n      let history = JSON.parse(result);\n      this.setState({ history });\n    }\n  };\n\n  //\n  //  RENDER METHODS\n  //\n  renderEmojiCell = ({ item }) => (\n    <EmojiCell\n      key={item.key}\n      emoji={item.emoji}\n      onPress={() => this.handleEmojiSelect(item.emoji)}\n      colSize={this.state.colSize}\n    />\n  );\n\n  returnSectionData() {\n    const { history, emojiList, searchQuery, category } = this.state;\n    let emojiData = (function() {\n        if (category === Categories.all && searchQuery === \"\") {\n        //TODO: OPTIMIZE THIS\n        let largeList = [];\n        categoryKeys.forEach(c => {\n          const name = Categories[c].name;\n          const list =\n            name === Categories.history.name ? history : emojiList[name];\n          if (c !== \"all\" && c !== \"history\") largeList = largeList.concat(list);\n        });\n\n        return largeList.map(emoji => ({ key: emoji.unified, emoji }));\n      } else {\n        let list;\n        const hasSearchQuery = searchQuery !== \"\";\n        const name = category.name;\n        if (hasSearchQuery) {\n          const filtered = emoji.filter(e => {\n            let display = false;\n            e.short_names.forEach(name => {\n              if (name.includes(searchQuery.toLowerCase())) display = true;\n            });\n            return display;\n          });\n          list = sortEmoji(filtered);\n        } else if (name === Categories.history.name) {\n          list = history;\n        } else {\n          list = emojiList[name];\n        }\n        return list.map(emoji => ({ key: emoji.unified, emoji }));\n      }\n    })()\n    return this.props.shouldInclude ? emojiData.filter(e => this.props.shouldInclude(e.emoji)) : emojiData\n  }\n\n  prerenderEmojis(callback) {\n    let emojiList = {};\n    categoryKeys.forEach(c => {\n      let name = Categories[c].name;\n      emojiList[name] = sortEmoji(emojiByCategory(name));\n    });\n\n    this.setState(\n      {\n        emojiList,\n        colSize: Math.floor(this.state.width / this.props.columns)\n      },\n      callback\n    );\n  }\n\n  handleLayout = ({ nativeEvent: { layout } }) => {\n    this.setState({ width: layout.width }, () => {\n      this.prerenderEmojis(() => {\n        this.setState({ isReady: true });\n      });\n    });\n  };\n\n  //\n  //  LIFECYCLE METHODS\n  //\n  componentDidMount() {\n    const { category, showHistory } = this.props;\n    this.setState({ category });\n\n    if (showHistory) {\n      this.loadHistoryAsync();\n    }\n  }\n\n  render() {\n    const {\n      theme,\n      columns,\n      placeholder,\n      showHistory,\n      showSearchBar,\n      showSectionTitles,\n      showTabs,\n      ...other\n    } = this.props;\n\n    const { category, colSize, isReady, searchQuery } = this.state;\n\n    const Searchbar = (\n      <View style={styles.searchbar_container}>\n        <TextInput\n          style={styles.search}\n          placeholder={placeholder}\n          clearButtonMode=\"always\"\n          returnKeyType=\"done\"\n          autoCorrect={false}\n          underlineColorAndroid={theme}\n          value={searchQuery}\n          onChangeText={this.handleSearch}\n        />\n      </View>\n    );\n\n    const title = searchQuery !== \"\" ? \"Search Results\" : category.name;\n\n    return (\n      <View style={styles.frame} {...other} onLayout={this.handleLayout}>\n        <View style={styles.tabBar}>\n          {showTabs && (\n            <TabBar\n              activeCategory={category}\n              onPress={this.handleTabSelect}\n              theme={theme}\n              width={this.state.width}\n            />\n          )}\n        </View>\n        <View style={{ flex: 1 }}>\n          {showSearchBar && Searchbar}\n          {isReady ? (\n            <View style={{ flex: 1 }}>\n              <View style={styles.container}>\n                {showSectionTitles && (\n                  <Text style={styles.sectionHeader}>{title}</Text>\n                )}\n                <FlatList\n                  style={styles.scrollview}\n                  contentContainerStyle={{ paddingBottom: colSize }}\n                  data={this.returnSectionData()}\n                  renderItem={this.renderEmojiCell}\n                  horizontal={false}\n                  numColumns={columns}\n                  keyboardShouldPersistTaps={\"always\"}\n                  ref={scrollview => (this.scrollview = scrollview)}\n                  removeClippedSubviews\n                />\n              </View>\n            </View>\n          ) : (\n            <View style={styles.loader} {...other}>\n              <ActivityIndicator\n                size={\"large\"}\n                color={Platform.OS === \"android\" ? theme : \"#000000\"}\n              />\n            </View>\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nEmojiSelector.defaultProps = {\n  theme: \"#007AFF\",\n  category: Categories.all,\n  showTabs: true,\n  showSearchBar: true,\n  showHistory: false,\n  showSectionTitles: true,\n  columns: 6,\n  placeholder: \"Search...\"\n};\n\nconst styles = StyleSheet.create({\n  frame: {\n    flex: 1,\n    width: \"100%\"\n  },\n  loader: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  tabBar: {\n    flexDirection: \"row\"\n  },\n  scrollview: {\n    flex: 1\n  },\n  searchbar_container: {\n    width: \"100%\",\n    zIndex: 1,\n    backgroundColor: \"rgba(255,255,255,0.75)\"\n  },\n  search: {\n    ...Platform.select({\n      ios: {\n        height: 36,\n        paddingLeft: 8,\n        borderRadius: 10,\n        backgroundColor: \"#E5E8E9\"\n      }\n    }),\n    margin: 8\n  },\n  container: {\n    flex: 1,\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n    alignItems: \"flex-start\"\n  },\n  sectionHeader: {\n    margin: 8,\n    fontSize: 17,\n    width: \"100%\",\n    color: \"#8F8F8F\"\n  }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}