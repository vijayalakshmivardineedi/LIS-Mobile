{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axiosInstance from '../../../../Security/helpers/axios';\nexport const fetchVisitors = createAsyncThunk('visitors/fetchVisitors', async societyId => {\n  try {\n    const response = await axiosInstance.get(`/getAllVisitorsBySocietyId/${societyId}`);\n    return response.data.visitors;\n  } catch (error) {\n    throw Error('Failed to fetch visitors: ' + error.message);\n  }\n});\nconst visitorsSlice = createSlice({\n  name: 'visitors',\n  initialState: {\n    visitors: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchVisitors.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchVisitors.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.visitors = action.payload;\n    }).addCase(fetchVisitors.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport default visitorsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axiosInstance","fetchVisitors","societyId","response","get","data","visitors","error","Error","message","visitorsSlice","name","initialState","status","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/src/panel/User/Redux/Slice/Security_Panel/InandOutSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axiosInstance from '../../../../Security/helpers/axios';\n\nexport const fetchVisitors = createAsyncThunk(\n  'visitors/fetchVisitors',\n  async (societyId) => {\n    try {\n      const response = await axiosInstance.get(`/getAllVisitorsBySocietyId/${societyId}`);\n      return response.data.visitors;\n    } catch (error) {\n      throw Error('Failed to fetch visitors: ' + error.message);\n    }\n  }\n);\n\nconst visitorsSlice = createSlice({\n  name: 'visitors',\n  initialState: {\n    visitors: [], // Ensure this is initialized as an empty array or with data structure matching your expected format\n    status: 'idle',\n    error: null,\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchVisitors.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchVisitors.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.visitors = action.payload;\n      })\n      .addCase(fetchVisitors.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport default visitorsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,aAAa,MAAM,oCAAoC;AAE9D,OAAO,MAAMC,aAAa,GAAGF,gBAAgB,CAC3C,wBAAwB,EACxB,MAAOG,SAAS,IAAK;EACnB,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,aAAa,CAACI,GAAG,CAAC,8BAA8BF,SAAS,EAAE,CAAC;IACnF,OAAOC,QAAQ,CAACE,IAAI,CAACC,QAAQ;EAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMC,KAAK,CAAC,4BAA4B,GAAGD,KAAK,CAACE,OAAO,CAAC;EAC3D;AACF,CACF,CAAC;AAED,MAAMC,aAAa,GAAGZ,WAAW,CAAC;EAChCa,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACZN,QAAQ,EAAE,EAAE;IACZO,MAAM,EAAE,MAAM;IACdN,KAAK,EAAE;EACT,CAAC;EACDO,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAChB,aAAa,CAACiB,OAAO,EAAGC,KAAK,IAAK;MACzCA,KAAK,CAACN,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDI,OAAO,CAAChB,aAAa,CAACmB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACnDF,KAAK,CAACN,MAAM,GAAG,WAAW;MAC1BM,KAAK,CAACb,QAAQ,GAAGe,MAAM,CAACC,OAAO;IACjC,CAAC,CAAC,CACDL,OAAO,CAAChB,aAAa,CAACsB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAClDF,KAAK,CAACN,MAAM,GAAG,QAAQ;MACvBM,KAAK,CAACZ,KAAK,GAAGc,MAAM,CAACd,KAAK,CAACE,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeC,aAAa,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}