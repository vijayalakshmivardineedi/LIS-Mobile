{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\src\\\\panel\\\\User\\\\Navigations\\\\Screens\\\\Community\\\\IndividualChatRoom.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Icon from \"react-native-vector-icons/MaterialCommunityIcons\";\nimport EmojiSelector from \"react-native-emoji-selector\";\nimport { useRoute } from \"@react-navigation/native\";\nimport socketServices from \"../../../Socket/SocketServices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IndividualChatRoom = () => {\n  const route = useRoute();\n  const {\n    item\n  } = route.params;\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState(item.messages || []);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const senderId = '6694f1e2fef273737d9196c7';\n  const flatListRef = useRef(null);\n  const scrollToEnd = () => {\n    if (flatListRef.current) {\n      flatListRef.current.scrollToEnd({\n        animated: true\n      });\n    }\n  };\n  useEffect(() => {\n    scrollToEnd();\n  }, []);\n  const chatList = item._id;\n  useEffect(() => {\n    socketServices.emit('join_Individual', chatList);\n    socketServices.emit('getindividualChatHistory', chatList);\n    const handleChatHistory = chatHistory => {\n      setMessages(chatHistory);\n    };\n    const handleChatHistoryError = error => {\n      console.error('Error fetching chat history:', error);\n    };\n    const handleError = error => {\n      console.error('Error:', error.message);\n    };\n    socketServices.on('received_individual_message', message => {\n      console.log(message, 'Received message');\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n    socketServices.on('chatHistory', handleChatHistory);\n    socketServices.on('chatHistoryError', handleChatHistoryError);\n    socketServices.on('error', handleError);\n    return () => {\n      socketServices.removeListener('chatHistory', handleChatHistory);\n      socketServices.removeListener('chatHistoryError', handleChatHistoryError);\n      socketServices.removeListener('received_individual_message');\n      socketServices.removeListener('error', handleError);\n    };\n  }, [chatList]);\n  const handleSend = () => {\n    if (input.trim()) {\n      const newMessage = {\n        conversationId: chatList,\n        senderId,\n        content: input,\n        sender: {\n          _id: senderId,\n          name: 'You'\n        },\n        time: new Date().toISOString()\n      };\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n      socketServices.emit('send_individual_message', newMessage);\n      socketServices.emit('getindividualChatHistory', chatList);\n      setInput('');\n      scrollToEnd();\n    }\n  };\n  const handleAttachFile = async () => {\n    try {\n      console.log(\"File attachment functionality triggered\");\n    } catch (error) {\n      console.error(\"Error handling file attachment:\", error);\n    }\n  };\n  const handleVoiceInput = async () => {\n    try {\n      console.log(\"Voice input functionality triggered\");\n    } catch (error) {\n      console.error(\"Error handling voice input:\", error);\n    }\n  };\n  const toggleEmojiPicker = () => {\n    if (!showEmojiPicker) {\n      Keyboard.dismiss();\n      setTimeout(() => setShowEmojiPicker(true), 100);\n    } else {\n      setShowEmojiPicker(false);\n    }\n  };\n  const handleEmojiSelect = emoji => {\n    setInput(prevInput => prevInput + emoji);\n  };\n  const formatTime = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const renderItem = ({\n    item\n  }) => {\n    const isSenderValid = item.sender && item.sender._id;\n    const isSentByCurrentUser = isSenderValid && item.sender._id === senderId;\n    return _jsxDEV(View, {\n      style: [styles.messageContainer, isSentByCurrentUser ? styles.sentMessage : styles.receivedMessage],\n      children: [_jsxDEV(Text, {\n        style: styles.message,\n        children: item.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.time,\n        children: item.createdAt === undefined ? formatTime(new Date().toISOString()) : formatTime(item.createdAt)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(FlatList, {\n      ref: flatListRef,\n      data: messages,\n      renderItem: renderItem,\n      keyExtractor: (item, index) => index.toString(),\n      style: styles.chatList,\n      onContentSizeChange: scrollToEnd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.inputContainer,\n      children: [_jsxDEV(Icon, {\n        name: \"emoticon-happy-outline\",\n        size: 24,\n        color: \"#7A7A7A\",\n        style: styles.icon,\n        onPress: toggleEmojiPicker\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.textInputContainer,\n        children: [_jsxDEV(TextInput, {\n          style: styles.input,\n          value: input,\n          onChangeText: text => {\n            setInput(text);\n            if (showEmojiPicker) {\n              setShowEmojiPicker(false);\n            }\n          },\n          placeholder: \"Type your message\",\n          placeholderTextColor: \"#7A7A7A\",\n          multiline: true,\n          onFocus: () => setShowEmojiPicker(false),\n          onSubmitEditing: handleSend,\n          returnKeyType: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), _jsxDEV(Icon, {\n          name: \"paperclip\",\n          size: 20,\n          color: \"#7A7A7A\",\n          style: styles.innerIcon,\n          onPress: handleAttachFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), _jsxDEV(Icon, {\n          name: \"microphone-outline\",\n          size: 20,\n          color: \"#7A7A7A\",\n          style: styles.innerIcon,\n          onPress: handleVoiceInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        onPress: handleSend,\n        style: styles.sendButton,\n        children: _jsxDEV(Icon, {\n          name: \"send-circle\",\n          size: 35,\n          color: \"#6E3BD4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), showEmojiPicker && _jsxDEV(EmojiSelector, {\n      onEmojiSelected: handleEmojiSelect,\n      showSearchBar: false,\n      showTabs: false,\n      showHistory: false,\n      showSectionTitles: false,\n      columns: 8\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  chatList: {\n    paddingHorizontal: 15\n  },\n  messageContainer: {\n    borderRadius: 10,\n    padding: 10,\n    marginVertical: 5\n  },\n  sentMessage: {\n    backgroundColor: \"#D1E7DD\",\n    alignSelf: \"flex-end\"\n  },\n  receivedMessage: {\n    backgroundColor: \"#F0F0F0\",\n    alignSelf: \"flex-start\"\n  },\n  sender: {\n    fontWeight: \"bold\",\n    marginBottom: 5\n  },\n  message: {\n    fontSize: 16,\n    marginBottom: 5\n  },\n  time: {\n    fontSize: 12,\n    color: \"#888\",\n    alignSelf: \"flex-end\"\n  },\n  inputContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: 10,\n    borderTopWidth: 1,\n    borderColor: \"#ddd\",\n    backgroundColor: \"#F0F0F0\"\n  },\n  textInputContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    flex: 1,\n    height: 40,\n    borderColor: \"#ddd\",\n    borderWidth: 1,\n    borderRadius: 20,\n    paddingHorizontal: 10,\n    backgroundColor: \"#fff\"\n  },\n  input: {\n    flex: 1\n  },\n  innerIcon: {\n    marginHorizontal: 5\n  },\n  icon: {\n    marginHorizontal: 5\n  },\n  sendButton: {\n    marginLeft: 5\n  }\n});\nexport default IndividualChatRoom;","map":{"version":3,"names":["React","useState","useEffect","useRef","View","Text","TextInput","TouchableOpacity","FlatList","StyleSheet","Keyboard","Icon","EmojiSelector","useRoute","socketServices","jsxDEV","_jsxDEV","IndividualChatRoom","route","item","params","input","setInput","messages","setMessages","showEmojiPicker","setShowEmojiPicker","senderId","flatListRef","scrollToEnd","current","animated","chatList","_id","emit","handleChatHistory","chatHistory","handleChatHistoryError","error","console","handleError","message","on","log","prevMessages","removeListener","handleSend","trim","newMessage","conversationId","content","sender","name","time","Date","toISOString","handleAttachFile","handleVoiceInput","toggleEmojiPicker","dismiss","setTimeout","handleEmojiSelect","emoji","prevInput","formatTime","dateString","date","toLocaleTimeString","hour","minute","renderItem","isSenderValid","isSentByCurrentUser","style","styles","messageContainer","sentMessage","receivedMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","createdAt","undefined","container","ref","data","keyExtractor","index","toString","onContentSizeChange","inputContainer","size","color","icon","onPress","textInputContainer","value","onChangeText","text","placeholder","placeholderTextColor","multiline","onFocus","onSubmitEditing","returnKeyType","innerIcon","sendButton","onEmojiSelected","showSearchBar","showTabs","showHistory","showSectionTitles","columns","create","flex","backgroundColor","paddingHorizontal","borderRadius","padding","marginVertical","alignSelf","fontWeight","marginBottom","fontSize","flexDirection","alignItems","borderTopWidth","borderColor","height","borderWidth","marginHorizontal","marginLeft"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/src/panel/User/Navigations/Screens/Community/IndividualChatRoom.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  FlatList,\r\n  StyleSheet,\r\n  Keyboard,\r\n} from \"react-native\";\r\nimport Icon from \"react-native-vector-icons/MaterialCommunityIcons\";\r\nimport EmojiSelector from \"react-native-emoji-selector\";\r\nimport { useRoute } from \"@react-navigation/native\";\r\nimport socketServices from \"../../../Socket/SocketServices\";\r\nconst IndividualChatRoom = () => {\r\n  const route = useRoute();\r\n  const { item } = route.params;\r\n  const [input, setInput] = useState(\"\");\r\n  const [messages, setMessages] = useState(item.messages || []);\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n  const senderId = '6694f1e2fef273737d9196c7'\r\n  const flatListRef = useRef(null);\r\n  const scrollToEnd = () => {\r\n    if (flatListRef.current) {\r\n      flatListRef.current.scrollToEnd({ animated: true });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    scrollToEnd();\r\n  }, []);\r\n  const chatList = item._id;\r\n  useEffect(() => {\r\n    // Join the group when the component mounts\r\n    socketServices.emit('join_Individual', chatList);\r\n    // Fetch chat history when the component mounts\r\n    socketServices.emit('getindividualChatHistory', chatList);\r\n\r\n    // Listen for new messages\r\n\r\n    // Listen for chat history from the server\r\n    const handleChatHistory = (chatHistory) => {\r\n      setMessages(chatHistory);\r\n    };\r\n    // Handle any errors fetching chat history\r\n    const handleChatHistoryError = (error) => {\r\n      console.error('Error fetching chat history:', error);\r\n    };\r\n    // Handle errors\r\n    const handleError = (error) => {\r\n      console.error('Error:', error.message);\r\n    };\r\n\r\n    // Register event listeners\r\n    socketServices.on('received_individual_message', (message) => {\r\n      console.log(message, 'Received message');\r\n      setMessages(prevMessages => [...prevMessages, message]);\r\n    });\r\n    socketServices.on('chatHistory', handleChatHistory);\r\n    socketServices.on('chatHistoryError', handleChatHistoryError);\r\n\r\n    socketServices.on('error', handleError);\r\n    // Clean up event listeners on unmount\r\n    return () => {\r\n      socketServices.removeListener('chatHistory', handleChatHistory);\r\n      socketServices.removeListener('chatHistoryError', handleChatHistoryError);\r\n      socketServices.removeListener('received_individual_message');\r\n      socketServices.removeListener('error', handleError);\r\n    };\r\n  }, [chatList]);\r\n  const handleSend = () => {\r\n    if (input.trim()) {\r\n      const newMessage = {\r\n        conversationId: chatList,\r\n        senderId,\r\n        content: input,\r\n        sender: { _id: senderId, name: 'You' },\r\n        time: new Date().toISOString(),\r\n      };\r\n      setMessages(prevMessages => [...prevMessages, newMessage]);\r\n      socketServices.emit('send_individual_message', newMessage);\r\n      socketServices.emit('getindividualChatHistory', chatList);\r\n      setInput('');\r\n      scrollToEnd();\r\n    }\r\n  };\r\n  const handleAttachFile = async () => {\r\n    try {\r\n      console.log(\"File attachment functionality triggered\");\r\n    } catch (error) {\r\n      console.error(\"Error handling file attachment:\", error);\r\n    }\r\n  };\r\n  const handleVoiceInput = async () => {\r\n    try {\r\n      console.log(\"Voice input functionality triggered\");\r\n    } catch (error) {\r\n      console.error(\"Error handling voice input:\", error);\r\n    }\r\n  };\r\n  const toggleEmojiPicker = () => {\r\n    if (!showEmojiPicker) {\r\n      Keyboard.dismiss();\r\n      setTimeout(() => setShowEmojiPicker(true), 100);\r\n    } else {\r\n      setShowEmojiPicker(false);\r\n    }\r\n  };\r\n  const handleEmojiSelect = (emoji) => {\r\n    setInput((prevInput) => prevInput + emoji);\r\n  };\r\n  const formatTime = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  };\r\n  const renderItem = ({ item }) => {\r\n    const isSenderValid = item.sender && item.sender._id;\r\n    const isSentByCurrentUser = isSenderValid && item.sender._id === senderId;\r\n    return (\r\n      <View\r\n        style={[\r\n          styles.messageContainer,\r\n          isSentByCurrentUser ? styles.sentMessage : styles.receivedMessage,\r\n        ]}\r\n      >\r\n        <Text style={styles.message}>{item.content}</Text>\r\n        <Text style={styles.time}>{(item.createdAt === undefined ? formatTime(new Date().toISOString()) : formatTime(item.createdAt))}</Text>\r\n      </View>\r\n    );\r\n  };\r\n  return (\r\n    <View style={styles.container}>\r\n      <FlatList\r\n        ref={flatListRef}\r\n        data={messages}\r\n        renderItem={renderItem}\r\n        keyExtractor={(item, index) => index.toString()}\r\n        style={styles.chatList}\r\n        onContentSizeChange={scrollToEnd}\r\n      />\r\n      <View style={styles.inputContainer}>\r\n        <Icon\r\n          name=\"emoticon-happy-outline\"\r\n          size={24}\r\n          color=\"#7A7A7A\"\r\n          style={styles.icon}\r\n          onPress={toggleEmojiPicker}\r\n        />\r\n        <View style={styles.textInputContainer}>\r\n          <TextInput\r\n            style={styles.input}\r\n            value={input}\r\n            onChangeText={(text) => {\r\n              setInput(text);\r\n              if (showEmojiPicker) {\r\n                setShowEmojiPicker(false);\r\n              }\r\n            }}\r\n            placeholder=\"Type your message\"\r\n            placeholderTextColor=\"#7A7A7A\"\r\n            multiline={true}\r\n            onFocus={() => setShowEmojiPicker(false)}\r\n            onSubmitEditing={handleSend}\r\n            returnKeyType=\"send\"\r\n          />\r\n          <Icon\r\n            name=\"paperclip\"\r\n            size={20}\r\n            color=\"#7A7A7A\"\r\n            style={styles.innerIcon}\r\n            onPress={handleAttachFile}\r\n          />\r\n          <Icon\r\n            name=\"microphone-outline\"\r\n            size={20}\r\n            color=\"#7A7A7A\"\r\n            style={styles.innerIcon}\r\n            onPress={handleVoiceInput}\r\n          />\r\n        </View>\r\n        <TouchableOpacity onPress={handleSend} style={styles.sendButton}>\r\n          <Icon name=\"send-circle\" size={35} color=\"#6E3BD4\" />\r\n        </TouchableOpacity>\r\n      </View>\r\n      {showEmojiPicker && (\r\n        <EmojiSelector\r\n          onEmojiSelected={handleEmojiSelect}\r\n          showSearchBar={false}\r\n          showTabs={false}\r\n          showHistory={false}\r\n          showSectionTitles={false}\r\n          columns={8}\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  chatList: {\r\n    paddingHorizontal: 15,\r\n  },\r\n  messageContainer: {\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    marginVertical: 5,\r\n  },\r\n  sentMessage: {\r\n    backgroundColor: \"#D1E7DD\",\r\n    alignSelf: \"flex-end\",\r\n  },\r\n  receivedMessage: {\r\n    backgroundColor: \"#F0F0F0\",\r\n    alignSelf: \"flex-start\",\r\n  },\r\n  sender: {\r\n    fontWeight: \"bold\",\r\n    marginBottom: 5,\r\n  },\r\n  message: {\r\n    fontSize: 16,\r\n    marginBottom: 5,\r\n  },\r\n  time: {\r\n    fontSize: 12,\r\n    color: \"#888\",\r\n    alignSelf: \"flex-end\",\r\n  },\r\n  inputContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    padding: 10,\r\n    borderTopWidth: 1,\r\n    borderColor: \"#ddd\",\r\n    backgroundColor: \"#F0F0F0\",\r\n  },\r\n  textInputContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    flex: 1,\r\n    height: 40,\r\n    borderColor: \"#ddd\",\r\n    borderWidth: 1,\r\n    borderRadius: 20,\r\n    paddingHorizontal: 10,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  input: {\r\n    flex: 1,\r\n  },\r\n  innerIcon: {\r\n    marginHorizontal: 5,\r\n  },\r\n  icon: {\r\n    marginHorizontal: 5,\r\n  },\r\n  sendButton: {\r\n    marginLeft: 5,\r\n  },\r\n});\r\nexport default IndividualChatRoom;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}