{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const registerParticipant = createAsyncThunk('registration/registerParticipant', async ({\n  societyId,\n  participantId,\n  activities,\n  participantName,\n  eventId\n}, {\n  rejectWithValue\n}) => {\n  console.log(\"Starting request\", societyId, participantId, activities, participantName, eventId);\n  try {\n    const response = await axios.post(`http://192.168.29.226:2000/api/events/register/${eventId}`, {\n      societyId,\n      participantId,\n      activities,\n      participantName\n    });\n    console.log(\"Request successful:\", response.data);\n    return response.data;\n  } catch (error) {\n    console.log(\"Request failed:\", error.message);\n    return rejectWithValue(error.response ? error.response.data : error.message);\n  }\n});\nconst registrationSlice = createSlice({\n  name: 'registration',\n  initialState: {\n    loading: false,\n    successMessage: null,\n    error: null\n  },\n  reducers: {\n    clearMessages: state => {\n      state.successMessage = null;\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(registerParticipant.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(registerParticipant.fulfilled, (state, action) => {\n      state.loading = false;\n      state.successMessage = action.payload.message;\n    }).addCase(registerParticipant.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  clearMessages\n} = registrationSlice.actions;\nexport default registrationSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","registerParticipant","societyId","participantId","activities","participantName","eventId","rejectWithValue","console","log","response","post","data","error","message","registrationSlice","name","initialState","loading","successMessage","reducers","clearMessages","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/src/panel/User/Redux/Slice/CommunitySlice/EventRegistrationSlice.js"],"sourcesContent":["// src/features/registration/registrationSlice.js\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\n\r\n// Thunk to handle the registration process\r\nexport const registerParticipant = createAsyncThunk(\r\n  'registration/registerParticipant',\r\n  async ({ societyId, participantId, activities, participantName, eventId }, { rejectWithValue }) => {\r\n    console.log(\"Starting request\",  societyId, participantId, activities, participantName, eventId);  // Log before request starts\r\n    try {\r\n      const response = await axios.post(\r\n        `http://192.168.29.226:2000/api/events/register/${eventId}`,\r\n        { societyId, participantId, activities, participantName }\r\n      );\r\n      console.log(\"Request successful:\", response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.log(\"Request failed:\", error.message);\r\n      return rejectWithValue(error.response ? error.response.data : error.message);\r\n    }\r\n  }\r\n);\r\n\r\n\r\n\r\n\r\nconst registrationSlice = createSlice({\r\n  name: 'registration',\r\n  initialState: {\r\n    loading: false,\r\n    successMessage: null,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    clearMessages: (state) => {\r\n      state.successMessage = null;\r\n      state.error = null;\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(registerParticipant.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(registerParticipant.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.successMessage = action.payload.message;\r\n      })\r\n      .addCase(registerParticipant.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  }\r\n});\r\n\r\nexport const { clearMessages } = registrationSlice.actions;\r\n\r\nexport default registrationSlice.reducer;"],"mappings":"AACA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAIzB,OAAO,MAAMC,mBAAmB,GAAGF,gBAAgB,CACjD,kCAAkC,EAClC,OAAO;EAAEG,SAAS;EAAEC,aAAa;EAAEC,UAAU;EAAEC,eAAe;EAAEC;AAAQ,CAAC,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACjGC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAGP,SAAS,EAAEC,aAAa,EAAEC,UAAU,EAAEC,eAAe,EAAEC,OAAO,CAAC;EAChG,IAAI;IACF,MAAMI,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAC/B,kDAAkDL,OAAO,EAAE,EAC3D;MAAEJ,SAAS;MAAEC,aAAa;MAAEC,UAAU;MAAEC;IAAgB,CAC1D,CAAC;IACDG,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEC,QAAQ,CAACE,IAAI,CAAC;IACjD,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdL,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEI,KAAK,CAACC,OAAO,CAAC;IAC7C,OAAOP,eAAe,CAACM,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACC,OAAO,CAAC;EAC9E;AACF,CACF,CAAC;AAKD,MAAMC,iBAAiB,GAAGjB,WAAW,CAAC;EACpCkB,IAAI,EAAE,cAAc;EACpBC,YAAY,EAAE;IACZC,OAAO,EAAE,KAAK;IACdC,cAAc,EAAE,IAAI;IACpBN,KAAK,EAAE;EACT,CAAC;EACDO,QAAQ,EAAE;IACRC,aAAa,EAAGC,KAAK,IAAK;MACxBA,KAAK,CAACH,cAAc,GAAG,IAAI;MAC3BG,KAAK,CAACT,KAAK,GAAG,IAAI;IACpB;EACF,CAAC;EACDU,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACxB,mBAAmB,CAACyB,OAAO,EAAGJ,KAAK,IAAK;MAC/CA,KAAK,CAACJ,OAAO,GAAG,IAAI;MACpBI,KAAK,CAACT,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDY,OAAO,CAACxB,mBAAmB,CAAC0B,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MACzDN,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACH,cAAc,GAAGS,MAAM,CAACC,OAAO,CAACf,OAAO;IAC/C,CAAC,CAAC,CACDW,OAAO,CAACxB,mBAAmB,CAAC6B,QAAQ,EAAE,CAACR,KAAK,EAAEM,MAAM,KAAK;MACxDN,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACT,KAAK,GAAGe,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAER;AAAc,CAAC,GAAGN,iBAAiB,CAACgB,OAAO;AAE1D,eAAehB,iBAAiB,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}