{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\src\\\\panel\\\\User\\\\Navigations\\\\Screens\\\\Community\\\\SocietyBills.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchSocietyBills } from '../../../Redux/Slice/CommunitySlice/SocietyBillsSlice';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as FileSystem from 'expo-file-system';\nimport * as Sharing from 'expo-sharing';\nimport * as MediaLibrary from 'expo-media-library';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocietyBills = () => {\n  const dispatch = useDispatch();\n  const [fileUri, setFileUri] = useState(null);\n  const [societyId, setSocietyId] = useState('');\n  const {\n    society\n  } = useSelector(state => state.societyBills.societyBills);\n  useEffect(() => {\n    const getUserName = async () => {\n      try {\n        const userString = await AsyncStorage.getItem(\"user\");\n        if (userString !== null) {\n          const user = JSON.parse(userString);\n          setSocietyId(user.societyId);\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch the user from async storage\", error);\n      }\n    };\n    getUserName();\n  }, []);\n  useEffect(() => {\n    if (societyId) {\n      dispatch(fetchSocietyBills(societyId));\n    }\n  }, [dispatch, societyId]);\n  const downloadFile = async relativeUrl => {\n    try {\n      const baseUrl = \"http://192.168.29.226:2000\";\n      const fullUrl = `${baseUrl}${relativeUrl}`;\n      const fileName = relativeUrl.split('/').pop();\n      const fileUri = FileSystem.documentDirectory + fileName;\n      console.log('Attempting to download file from:', fullUrl);\n      const {\n        uri\n      } = await FileSystem.downloadAsync(fullUrl, fileUri);\n      console.log('File downloaded to:', uri);\n      const {\n        status\n      } = await MediaLibrary.requestPermissionsAsync();\n      if (status !== 'granted') {\n        Alert.alert('Permission Required', 'Please grant access to your media library.');\n        return;\n      }\n      const fileInfo = await FileSystem.getInfoAsync(fileUri);\n      if (!fileInfo.exists) {\n        Alert.alert('Error', 'File not found.');\n        return;\n      }\n      if (await Sharing.isAvailableAsync()) {\n        await Sharing.shareAsync(uri);\n      } else {\n        console.log('Sharing is not available on this platform.');\n      }\n    } catch (error) {\n      console.error('File download error:', error.message);\n      Alert.alert('Error', 'Failed to download the file.');\n    }\n  };\n  const renderItem = ({\n    item\n  }) => _jsxDEV(View, {\n    style: styles.billContainer,\n    children: [_jsxDEV(View, {\n      style: {\n        width: \"100%\"\n      },\n      children: _jsxDEV(Image, {\n        source: {\n          uri: `http://192.168.29.226:2000${item.pictures}`\n        },\n        style: {\n          height: 200,\n          width: \"100%\",\n          backgroundColor: \"#ddd\",\n          borderRadius: 10\n        },\n        resizeMode: \"contain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), _jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(Text, {\n        style: {\n          fontSize: 20,\n          fontWeight: '600'\n        },\n        children: item.monthAndYear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), _jsxDEV(View, {\n        style: styles.chip,\n        children: _jsxDEV(Text, {\n          style: styles.chipText,\n          children: item.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), _jsxDEV(Text, {\n      style: {\n        fontSize: 16,\n        fontWeight: '500',\n        color: \"#777\"\n      },\n      children: item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), _jsxDEV(Text, {\n      style: {\n        fontSize: 14,\n        fontWeight: '500',\n        color: \"#777\"\n      },\n      children: new Date(item.date).toLocaleDateString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), _jsxDEV(View, {\n      style: styles.amountContainer,\n      children: [_jsxDEV(Text, {\n        style: {\n          fontSize: 18,\n          fontWeight: '600'\n        },\n        children: [\"\\u20B9\", item.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: styles.downloadButton,\n        onPress: () => downloadFile(item.pictures),\n        children: _jsxDEV(Text, {\n          style: {\n            color: \"#ffffff\",\n            fontWeight: 500\n          },\n          children: \"Share File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: _jsxDEV(FlatList, {\n      data: society?.bills || [],\n      renderItem: renderItem,\n      keyExtractor: item => item._id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    padding: 16\n  },\n  billContainer: {\n    padding: 12,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 8,\n    marginBottom: 10,\n    backgroundColor: '#f9f9f9',\n    position: 'relative'\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8\n  },\n  chip: {\n    backgroundColor: '#4caf50',\n    borderRadius: 12,\n    paddingVertical: 4,\n    paddingHorizontal: 8\n  },\n  chipText: {\n    color: '#fff',\n    fontSize: 12,\n    fontWeight: 'bold'\n  },\n  amountContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: \"center\",\n    marginTop: 5\n  },\n  downloadButton: {\n    padding: 10,\n    borderRadius: 10,\n    backgroundColor: \"#7d0431\"\n  }\n});\nexport default SocietyBills;","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","fetchSocietyBills","AsyncStorage","FlatList","Image","StyleSheet","Text","TouchableOpacity","View","Alert","FileSystem","Sharing","MediaLibrary","jsxDEV","_jsxDEV","SocietyBills","dispatch","fileUri","setFileUri","societyId","setSocietyId","society","state","societyBills","getUserName","userString","getItem","user","JSON","parse","error","console","downloadFile","relativeUrl","baseUrl","fullUrl","fileName","split","pop","documentDirectory","log","uri","downloadAsync","status","requestPermissionsAsync","alert","fileInfo","getInfoAsync","exists","isAvailableAsync","shareAsync","message","renderItem","item","style","styles","billContainer","children","width","source","pictures","height","backgroundColor","borderRadius","resizeMode","_jsxFileName","lineNumber","columnNumber","header","fontSize","fontWeight","monthAndYear","chip","chipText","color","name","Date","date","toLocaleDateString","amountContainer","amount","downloadButton","onPress","container","data","bills","keyExtractor","_id","create","flex","padding","borderWidth","borderColor","marginBottom","position","flexDirection","justifyContent","alignItems","paddingVertical","paddingHorizontal","marginTop"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/src/panel/User/Navigations/Screens/Community/SocietyBills.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchSocietyBills } from '../../../Redux/Slice/CommunitySlice/SocietyBillsSlice';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { FlatList, Image,  StyleSheet, Text, TouchableOpacity, View, Alert } from 'react-native';\r\nimport * as FileSystem from 'expo-file-system'; // Import FileSystem from expo\r\nimport * as Sharing from 'expo-sharing';\r\nimport * as MediaLibrary from 'expo-media-library';\r\nconst SocietyBills = () => {\r\n    const dispatch = useDispatch();\r\n    const [fileUri, setFileUri] = useState(null);\r\n    const [societyId, setSocietyId] = useState('');\r\n    const { society } = useSelector((state) => state.societyBills.societyBills);\r\n\r\n    useEffect(() => {\r\n        const getUserName = async () => {\r\n            try {\r\n                const userString = await AsyncStorage.getItem(\"user\");\r\n                if (userString !== null) {\r\n                    const user = JSON.parse(userString);\r\n                    setSocietyId(user.societyId);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch the user from async storage\", error);\r\n            }\r\n        };\r\n\r\n        getUserName();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (societyId) {\r\n            dispatch(fetchSocietyBills(societyId));\r\n        }\r\n    }, [dispatch, societyId]);\r\n    const downloadFile = async (relativeUrl) => {\r\n        try {\r\n            const baseUrl = \"http://192.168.29.226:2000\";\r\n            const fullUrl = `${baseUrl}${relativeUrl}`;\r\n            const fileName = relativeUrl.split('/').pop();\r\n            const fileUri = FileSystem.documentDirectory + fileName;\r\n\r\n            console.log('Attempting to download file from:', fullUrl);\r\n            const { uri } = await FileSystem.downloadAsync(fullUrl, fileUri);\r\n            console.log('File downloaded to:', uri);\r\n\r\n            // Request media library permissions\r\n            const { status } = await MediaLibrary.requestPermissionsAsync();\r\n            if (status !== 'granted') {\r\n                Alert.alert('Permission Required', 'Please grant access to your media library.');\r\n                return;\r\n            }\r\n\r\n            // Ensure the file exists\r\n            const fileInfo = await FileSystem.getInfoAsync(fileUri);\r\n            if (!fileInfo.exists) {\r\n                Alert.alert('Error', 'File not found.');\r\n                return;\r\n            }\r\n\r\n            // Save the file to the media library\r\n            // const asset = await MediaLibrary.createAssetAsync(uri);\r\n            // if (asset) {\r\n            //     Alert.alert('Success', 'File downloaded and saved to your media library.');\r\n            // } else {\r\n            //     Alert.alert('Error', 'Failed to create asset.');\r\n            // }\r\n\r\n            // Optionally, share the file if needed\r\n            if (await Sharing.isAvailableAsync()) {\r\n                await Sharing.shareAsync(uri);\r\n            } else {\r\n                console.log('Sharing is not available on this platform.');\r\n            }\r\n        } catch (error) {\r\n            console.error('File download error:', error.message);\r\n            Alert.alert('Error', 'Failed to download the file.');\r\n        }\r\n    };\r\n\r\n    // const downloadFile = async (relativeUrl) => {\r\n    //     try {\r\n    //         const baseUrl = \"http://192.168.29.226:2000\";\r\n    //         const fullUrl = `${baseUrl}${relativeUrl}`;\r\n    //         const fileUri = FileSystem.documentDirectory + relativeUrl.split('/').pop();\r\n\r\n    //         console.log('Attempting to download file from:', fullUrl);\r\n\r\n    //         const { uri } = await FileSystem.downloadAsync(fullUrl, fileUri);\r\n    //         console.log('File downloaded to:', uri);\r\n    //         setFileUri(fullUrl);\r\n    //         // Share the file\r\n    //         // if (await Sharing.isAvailableAsync()) {\r\n    //         //     await Sharing.shareAsync(uri);\r\n    //         // } else {\r\n    //         //     console.log('Sharing is not available on this platform.');\r\n    //         // }\r\n\r\n    //     } catch (error) {\r\n    //         console.error('File download error:', error.message);\r\n    //     }\r\n    // };\r\n\r\n    const renderItem = ({ item }) => (\r\n        <View style={styles.billContainer}>\r\n            <View style={{ width: \"100%\" }}>\r\n                <Image\r\n                    source={{ uri: `http://192.168.29.226:2000${item.pictures}` }}\r\n                    style={{ height: 200, width: \"100%\" ,backgroundColor:\"#ddd\",borderRadius:10}}\r\n                    resizeMode=\"contain\"\r\n                />\r\n            </View>\r\n            <View style={styles.header}>\r\n                <Text style={{ fontSize: 20, fontWeight: '600' }}>{item.monthAndYear}</Text>\r\n                <View style={styles.chip}>\r\n                    <Text style={styles.chipText}>{item.status}</Text>\r\n                </View>\r\n            </View>\r\n            <Text style={{ fontSize: 16, fontWeight: '500', color: \"#777\" }}>{item.name}</Text>\r\n            <Text style={{ fontSize: 14, fontWeight: '500', color: \"#777\" }}>{new Date(item.date).toLocaleDateString()}</Text>\r\n            <View style={styles.amountContainer}>\r\n                <Text style={{ fontSize: 18, fontWeight: '600' }}>₹{item.amount}</Text>\r\n                <TouchableOpacity\r\n                    style={styles.downloadButton}\r\n                    onPress={() => downloadFile(item.pictures)}\r\n                >\r\n                    <Text style={{ color: \"#ffffff\", fontWeight: 500 }}>Share File</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n        </View>\r\n    );\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <FlatList\r\n                data={society?.bills || []}\r\n                renderItem={renderItem}\r\n                keyExtractor={item => item._id}\r\n            />\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"#fff\",\r\n        padding: 16,\r\n    },\r\n    billContainer: {\r\n        padding: 12,\r\n        borderWidth: 1,\r\n        borderColor: '#ccc',\r\n        borderRadius: 8,\r\n        marginBottom: 10,\r\n        backgroundColor: '#f9f9f9',\r\n        position: 'relative',\r\n    },\r\n    header: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        marginBottom: 8,\r\n    },\r\n    chip: {\r\n        backgroundColor: '#4caf50', // Green color for paid bills\r\n        borderRadius: 12,\r\n        paddingVertical: 4,\r\n        paddingHorizontal: 8,\r\n    },\r\n    chipText: {\r\n        color: '#fff',\r\n        fontSize: 12,\r\n        fontWeight: 'bold',\r\n    },\r\n    amountContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: \"center\",\r\n        marginTop: 5,\r\n    },\r\n    downloadButton: {\r\n        padding: 10,\r\n        borderRadius: 10,\r\n        backgroundColor: \"#7d0431\",\r\n    }\r\n});\r\n\r\nexport default SocietyBills;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}