{"ast":null,"code":"import XDate from 'xdate';\nimport constants from '../../commons/constants';\nimport { generateDay } from '../../dateutils';\nexport function calcTimeByPosition(yPosition, hourBlockHeight) {\n  let time = yPosition / hourBlockHeight;\n  time = Math.floor(time * 2) / 2;\n  const hour = Math.floor(time);\n  const minutes = (time - Math.floor(time)) * 60;\n  return {\n    hour,\n    minutes\n  };\n}\nexport function calcDateByPosition(xPosition, timelineLeftInset, numberOfDays = 1, firstDate = new XDate()) {\n  const timelineWidth = constants.screenWidth - timelineLeftInset;\n  const dayWidth = timelineWidth / numberOfDays;\n  const positionIndex = Math.floor((xPosition - timelineLeftInset) / dayWidth);\n  return generateDay(firstDate, positionIndex);\n}\nexport function buildTimeString(hour = 0, minutes = 0, date = '') {\n  return `${date} ${hour.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:00`.trimStart();\n}\nexport function calcTimeOffset(hourBlockHeight, hour, minutes) {\n  const now = new Date();\n  const h = hour ?? now.getHours();\n  const m = minutes ?? now.getMinutes();\n  return (h + m / 60) * hourBlockHeight;\n}","map":{"version":3,"names":["XDate","constants","generateDay","calcTimeByPosition","yPosition","hourBlockHeight","time","Math","floor","hour","minutes","calcDateByPosition","xPosition","timelineLeftInset","numberOfDays","firstDate","timelineWidth","screenWidth","dayWidth","positionIndex","buildTimeString","date","toString","padStart","trimStart","calcTimeOffset","now","Date","h","getHours","m","getMinutes"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/node_modules/react-native-calendars/src/timeline/helpers/presenter.js"],"sourcesContent":["import XDate from 'xdate';\nimport constants from '../../commons/constants';\nimport { generateDay } from '../../dateutils';\nexport function calcTimeByPosition(yPosition, hourBlockHeight) {\n    let time = yPosition / hourBlockHeight;\n    time = Math.floor(time * 2) / 2;\n    const hour = Math.floor(time);\n    const minutes = (time - Math.floor(time)) * 60;\n    return { hour, minutes };\n}\nexport function calcDateByPosition(xPosition, timelineLeftInset, numberOfDays = 1, firstDate = new XDate()) {\n    const timelineWidth = constants.screenWidth - timelineLeftInset;\n    const dayWidth = timelineWidth / numberOfDays;\n    const positionIndex = Math.floor((xPosition - timelineLeftInset) / dayWidth);\n    return generateDay(firstDate, positionIndex);\n}\nexport function buildTimeString(hour = 0, minutes = 0, date = '') {\n    return `${date} ${hour.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:00`.trimStart();\n}\nexport function calcTimeOffset(hourBlockHeight, hour, minutes) {\n    const now = new Date();\n    const h = hour ?? now.getHours();\n    const m = minutes ?? now.getMinutes();\n    return (h + m / 60) * hourBlockHeight;\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,OAAO,SAASC,kBAAkBA,CAACC,SAAS,EAAEC,eAAe,EAAE;EAC3D,IAAIC,IAAI,GAAGF,SAAS,GAAGC,eAAe;EACtCC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACF,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC;EAC/B,MAAMG,IAAI,GAAGF,IAAI,CAACC,KAAK,CAACF,IAAI,CAAC;EAC7B,MAAMI,OAAO,GAAG,CAACJ,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACF,IAAI,CAAC,IAAI,EAAE;EAC9C,OAAO;IAAEG,IAAI;IAAEC;EAAQ,CAAC;AAC5B;AACA,OAAO,SAASC,kBAAkBA,CAACC,SAAS,EAAEC,iBAAiB,EAAEC,YAAY,GAAG,CAAC,EAAEC,SAAS,GAAG,IAAIf,KAAK,CAAC,CAAC,EAAE;EACxG,MAAMgB,aAAa,GAAGf,SAAS,CAACgB,WAAW,GAAGJ,iBAAiB;EAC/D,MAAMK,QAAQ,GAAGF,aAAa,GAAGF,YAAY;EAC7C,MAAMK,aAAa,GAAGZ,IAAI,CAACC,KAAK,CAAC,CAACI,SAAS,GAAGC,iBAAiB,IAAIK,QAAQ,CAAC;EAC5E,OAAOhB,WAAW,CAACa,SAAS,EAAEI,aAAa,CAAC;AAChD;AACA,OAAO,SAASC,eAAeA,CAACX,IAAI,GAAG,CAAC,EAAEC,OAAO,GAAG,CAAC,EAAEW,IAAI,GAAG,EAAE,EAAE;EAC9D,OAAO,GAAGA,IAAI,IAAIZ,IAAI,CAACa,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIb,OAAO,CAACY,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,CAACC,SAAS,CAAC,CAAC;AAC9G;AACA,OAAO,SAASC,cAAcA,CAACpB,eAAe,EAAEI,IAAI,EAAEC,OAAO,EAAE;EAC3D,MAAMgB,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;EACtB,MAAMC,CAAC,GAAGnB,IAAI,IAAIiB,GAAG,CAACG,QAAQ,CAAC,CAAC;EAChC,MAAMC,CAAC,GAAGpB,OAAO,IAAIgB,GAAG,CAACK,UAAU,CAAC,CAAC;EACrC,OAAO,CAACH,CAAC,GAAGE,CAAC,GAAG,EAAE,IAAIzB,eAAe;AACzC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}