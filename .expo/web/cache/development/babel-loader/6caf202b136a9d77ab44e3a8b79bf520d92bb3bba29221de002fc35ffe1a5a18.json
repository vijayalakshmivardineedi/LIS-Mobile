{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\src\\\\panel\\\\User\\\\Navigations\\\\Authentication\\\\ResetPassword.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { TextInput } from \"react-native-paper\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updatePassword, clearStatus } from \"../../Redux/Slice/AuthSlice/Forgot/resetPasswordSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = ({\n  navigation,\n  route\n}) => {\n  const dispatch = useDispatch();\n  const {\n    loading,\n    error,\n    success\n  } = useSelector(state => state.resetPassword);\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [confirmPasswordError, setConfirmPasswordError] = useState(\"\");\n  const {\n    email\n  } = route.params;\n  const handleResetPassword = async () => {\n    dispatch(clearStatus());\n    if (password.length < 6) {\n      setPasswordError(\"Password must be at least 6 characters long\");\n      return;\n    } else {\n      setPasswordError(\"\");\n    }\n    if (confirmPassword !== password) {\n      setConfirmPasswordError(\"Passwords do not match\");\n      return;\n    } else {\n      setConfirmPasswordError(\"\");\n    }\n    try {\n      await dispatch(updatePassword({\n        email,\n        newPassword: password\n      }));\n      navigation.navigate(\"Login\");\n    } catch (err) {}\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(ScrollView, {\n      children: [_jsxDEV(View, {\n        style: styles.row,\n        children: _jsxDEV(View, {\n          style: styles.phoneRow,\n          children: _jsxDEV(Text, {\n            style: styles.phoneText,\n            children: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        mode: \"outlined\",\n        label: \"New Password\",\n        secureTextEntry: true,\n        value: password,\n        onChangeText: setPassword,\n        style: styles.input,\n        outlineColor: \"#CCC\",\n        theme: {\n          colors: {\n            primary: \"#27272A\"\n          }\n        },\n        error: passwordError !== \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), passwordError !== \"\" && _jsxDEV(Text, {\n        style: styles.errorText,\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), _jsxDEV(TextInput, {\n        mode: \"outlined\",\n        label: \"Confirm Password\",\n        secureTextEntry: true,\n        value: confirmPassword,\n        onChangeText: setConfirmPassword,\n        style: styles.input,\n        outlineColor: \"#CCC\",\n        theme: {\n          colors: {\n            primary: \"#27272A\"\n          }\n        },\n        error: confirmPasswordError !== \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), confirmPasswordError !== \"\" && _jsxDEV(Text, {\n        style: styles.errorText,\n        children: confirmPasswordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), _jsxDEV(TouchableOpacity, {\n      style: [styles.button, loading && styles.disabledButton],\n      onPress: handleResetPassword,\n      disabled: loading,\n      children: _jsxDEV(Text, {\n        style: {\n          color: \"white\",\n          fontSize: 24,\n          fontWeight: \"700\"\n        },\n        children: loading ? \"Saving...\" : \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), error && _jsxDEV(Text, {\n      style: styles.errorText,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this), success && _jsxDEV(Text, {\n      style: styles.successText,\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: \"#fff\",\n    justifyContent: \"space-between\"\n  },\n  button: {\n    width: \"100%\",\n    backgroundColor: \"black\",\n    padding: 12,\n    alignItems: \"center\",\n    borderRadius: 10,\n    marginTop: 20\n  },\n  disabledButton: {\n    backgroundColor: \"#666\"\n  },\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginTop: 20\n  },\n  phoneRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  phoneText: {\n    fontSize: 16,\n    fontStyle: \"italic\"\n  },\n  input: {\n    marginTop: 20\n  },\n  errorText: {\n    color: \"red\",\n    marginTop: 5\n  },\n  successText: {\n    color: \"green\",\n    marginTop: 5\n  }\n});\nexport default ResetPassword;","map":{"version":3,"names":["React","useState","View","TouchableOpacity","StyleSheet","Text","ScrollView","TextInput","useDispatch","useSelector","updatePassword","clearStatus","jsxDEV","_jsxDEV","ResetPassword","navigation","route","dispatch","loading","error","success","state","resetPassword","password","setPassword","confirmPassword","setConfirmPassword","passwordError","setPasswordError","confirmPasswordError","setConfirmPasswordError","email","params","handleResetPassword","length","newPassword","navigate","err","style","styles","container","children","row","phoneRow","phoneText","fileName","_jsxFileName","lineNumber","columnNumber","mode","label","secureTextEntry","value","onChangeText","input","outlineColor","theme","colors","primary","errorText","button","disabledButton","onPress","disabled","color","fontSize","fontWeight","successText","create","flex","padding","backgroundColor","justifyContent","width","alignItems","borderRadius","marginTop","flexDirection","fontStyle"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/src/panel/User/Navigations/Authentication/ResetPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, TouchableOpacity, StyleSheet, Text, ScrollView } from \"react-native\";\r\nimport { TextInput } from \"react-native-paper\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updatePassword, clearStatus } from \"../../Redux/Slice/AuthSlice/Forgot/resetPasswordSlice\";\r\n\r\nconst ResetPassword = ({ navigation, route }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading, error, success } = useSelector((state) => state.resetPassword);\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n  const [confirmPasswordError, setConfirmPasswordError] = useState(\"\");\r\n  const { email } = route.params;\r\n\r\n  const handleResetPassword = async () => {\r\n    dispatch(clearStatus());\r\n    if (password.length < 6) {\r\n      setPasswordError(\"Password must be at least 6 characters long\");\r\n      return;\r\n    } else {\r\n      setPasswordError(\"\");\r\n    }\r\n    \r\n    if (confirmPassword !== password) {\r\n      setConfirmPasswordError(\"Passwords do not match\");\r\n      return;\r\n    } else {\r\n      setConfirmPasswordError(\"\");\r\n    }\r\n    \r\n    try {\r\n      await dispatch(updatePassword({ email, newPassword: password }));\r\n      navigation.navigate(\"Login\");\r\n    } catch (err) {\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ScrollView>\r\n        <View style={styles.row}>\r\n          <View style={styles.phoneRow}>\r\n            <Text style={styles.phoneText}>{email}</Text>\r\n          </View>\r\n        </View>\r\n        <TextInput\r\n          mode=\"outlined\"\r\n          label=\"New Password\"\r\n          secureTextEntry\r\n          value={password}\r\n          onChangeText={setPassword}\r\n          style={styles.input}\r\n          outlineColor=\"#CCC\"\r\n          theme={{ colors: { primary: \"#27272A\" } }}\r\n          error={passwordError !== \"\"}\r\n        />\r\n        {passwordError !== \"\" && (\r\n          <Text style={styles.errorText}>{passwordError}</Text>\r\n        )}\r\n        <TextInput\r\n          mode=\"outlined\"\r\n          label=\"Confirm Password\"\r\n          secureTextEntry\r\n          value={confirmPassword}\r\n          onChangeText={setConfirmPassword}\r\n          style={styles.input}\r\n          outlineColor=\"#CCC\"\r\n          theme={{ colors: { primary: \"#27272A\" } }}\r\n          error={confirmPasswordError !== \"\"}\r\n        />\r\n        {confirmPasswordError !== \"\" && (\r\n          <Text style={styles.errorText}>{confirmPasswordError}</Text>\r\n        )}\r\n      </ScrollView>\r\n      <TouchableOpacity\r\n        style={[styles.button, loading && styles.disabledButton]}\r\n        onPress={handleResetPassword}\r\n        disabled={loading}\r\n      >\r\n        <Text style={{ color: \"white\", fontSize: 24, fontWeight: \"700\" }}>\r\n          {loading ? \"Saving...\" : \"Save\"}\r\n        </Text>\r\n      </TouchableOpacity>\r\n\r\n      {error && <Text style={styles.errorText}>{error}</Text>}\r\n      {success && <Text style={styles.successText}>{success}</Text>}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    backgroundColor: \"#fff\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    backgroundColor: \"black\",\r\n    padding: 12,\r\n    alignItems: \"center\",\r\n    borderRadius: 10,\r\n    marginTop: 20,\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: \"#666\",\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginTop: 20,\r\n  },\r\n  phoneRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  phoneText: {\r\n    fontSize: 16,\r\n    fontStyle: \"italic\",\r\n  },\r\n  input: {\r\n    marginTop: 20,\r\n  },\r\n  errorText: {\r\n    color: \"red\",\r\n    marginTop: 5,\r\n  },\r\n  successText: {\r\n    color: \"green\",\r\n    marginTop: 5,\r\n  },\r\n});\r\n\r\nexport default ResetPassword;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAExC,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,cAAc,EAAEC,WAAW,QAAQ,uDAAuD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpG,MAAMC,aAAa,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAM,CAAC,KAAK;EAC/C,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEU,OAAO;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGX,WAAW,CAAEY,KAAK,IAAKA,KAAK,CAACC,aAAa,CAAC;EAE/E,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACwB,eAAe,EAAEC,kBAAkB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC0B,aAAa,EAAEC,gBAAgB,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC4B,oBAAoB,EAAEC,uBAAuB,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EACpE,MAAM;IAAE8B;EAAM,CAAC,GAAGf,KAAK,CAACgB,MAAM;EAE9B,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtChB,QAAQ,CAACN,WAAW,CAAC,CAAC,CAAC;IACvB,IAAIY,QAAQ,CAACW,MAAM,GAAG,CAAC,EAAE;MACvBN,gBAAgB,CAAC,6CAA6C,CAAC;MAC/D;IACF,CAAC,MAAM;MACLA,gBAAgB,CAAC,EAAE,CAAC;IACtB;IAEA,IAAIH,eAAe,KAAKF,QAAQ,EAAE;MAChCO,uBAAuB,CAAC,wBAAwB,CAAC;MACjD;IACF,CAAC,MAAM;MACLA,uBAAuB,CAAC,EAAE,CAAC;IAC7B;IAEA,IAAI;MACF,MAAMb,QAAQ,CAACP,cAAc,CAAC;QAAEqB,KAAK;QAAEI,WAAW,EAAEZ;MAAS,CAAC,CAAC,CAAC;MAChER,UAAU,CAACqB,QAAQ,CAAC,OAAO,CAAC;IAC9B,CAAC,CAAC,OAAOC,GAAG,EAAE,CACd;EACF,CAAC;EAED,OACExB,OAAA,CAACX,IAAI;IAACoC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5B5B,OAAA,CAACP,UAAU;MAAAmC,QAAA,GACT5B,OAAA,CAACX,IAAI;QAACoC,KAAK,EAAEC,MAAM,CAACG,GAAI;QAAAD,QAAA,EACtB5B,OAAA,CAACX,IAAI;UAACoC,KAAK,EAAEC,MAAM,CAACI,QAAS;UAAAF,QAAA,EAC3B5B,OAAA,CAACR,IAAI;YAACiC,KAAK,EAAEC,MAAM,CAACK,SAAU;YAAAH,QAAA,EAAEV;UAAK;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EACPnC,OAAA,CAACN,SAAS;QACR0C,IAAI,EAAC,UAAU;QACfC,KAAK,EAAC,cAAc;QACpBC,eAAe;QACfC,KAAK,EAAE7B,QAAS;QAChB8B,YAAY,EAAE7B,WAAY;QAC1Bc,KAAK,EAAEC,MAAM,CAACe,KAAM;QACpBC,YAAY,EAAC,MAAM;QACnBC,KAAK,EAAE;UAAEC,MAAM,EAAE;YAAEC,OAAO,EAAE;UAAU;QAAE,CAAE;QAC1CvC,KAAK,EAAEQ,aAAa,KAAK;MAAG;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,EACDrB,aAAa,KAAK,EAAE,IACnBd,OAAA,CAACR,IAAI;QAACiC,KAAK,EAAEC,MAAM,CAACoB,SAAU;QAAAlB,QAAA,EAAEd;MAAa;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CACrD,EACDnC,OAAA,CAACN,SAAS;QACR0C,IAAI,EAAC,UAAU;QACfC,KAAK,EAAC,kBAAkB;QACxBC,eAAe;QACfC,KAAK,EAAE3B,eAAgB;QACvB4B,YAAY,EAAE3B,kBAAmB;QACjCY,KAAK,EAAEC,MAAM,CAACe,KAAM;QACpBC,YAAY,EAAC,MAAM;QACnBC,KAAK,EAAE;UAAEC,MAAM,EAAE;YAAEC,OAAO,EAAE;UAAU;QAAE,CAAE;QAC1CvC,KAAK,EAAEU,oBAAoB,KAAK;MAAG;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,EACDnB,oBAAoB,KAAK,EAAE,IAC1BhB,OAAA,CAACR,IAAI;QAACiC,KAAK,EAAEC,MAAM,CAACoB,SAAU;QAAAlB,QAAA,EAAEZ;MAAoB;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAC5D;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS,CAAC,EACbnC,OAAA,CAACV,gBAAgB;MACfmC,KAAK,EAAE,CAACC,MAAM,CAACqB,MAAM,EAAE1C,OAAO,IAAIqB,MAAM,CAACsB,cAAc,CAAE;MACzDC,OAAO,EAAE7B,mBAAoB;MAC7B8B,QAAQ,EAAE7C,OAAQ;MAAAuB,QAAA,EAElB5B,OAAA,CAACR,IAAI;QAACiC,KAAK,EAAE;UAAE0B,KAAK,EAAE,OAAO;UAAEC,QAAQ,EAAE,EAAE;UAAEC,UAAU,EAAE;QAAM,CAAE;QAAAzB,QAAA,EAC9DvB,OAAO,GAAG,WAAW,GAAG;MAAM;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS,CAAC,EAElB7B,KAAK,IAAIN,OAAA,CAACR,IAAI;MAACiC,KAAK,EAAEC,MAAM,CAACoB,SAAU;MAAAlB,QAAA,EAAEtB;IAAK;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EACtD5B,OAAO,IAAIP,OAAA,CAACR,IAAI;MAACiC,KAAK,EAAEC,MAAM,CAAC4B,WAAY;MAAA1B,QAAA,EAAErB;IAAO;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEX,CAAC;AAED,MAAMT,MAAM,GAAGnC,UAAU,CAACgE,MAAM,CAAC;EAC/B5B,SAAS,EAAE;IACT6B,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE,EAAE;IACXC,eAAe,EAAE,MAAM;IACvBC,cAAc,EAAE;EAClB,CAAC;EACDZ,MAAM,EAAE;IACNa,KAAK,EAAE,MAAM;IACbF,eAAe,EAAE,OAAO;IACxBD,OAAO,EAAE,EAAE;IACXI,UAAU,EAAE,QAAQ;IACpBC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE;EACb,CAAC;EACDf,cAAc,EAAE;IACdU,eAAe,EAAE;EACnB,CAAC;EACD7B,GAAG,EAAE;IACHmC,aAAa,EAAE,KAAK;IACpBL,cAAc,EAAE,eAAe;IAC/BE,UAAU,EAAE,QAAQ;IACpBE,SAAS,EAAE;EACb,CAAC;EACDjC,QAAQ,EAAE;IACRkC,aAAa,EAAE,KAAK;IACpBH,UAAU,EAAE;EACd,CAAC;EACD9B,SAAS,EAAE;IACTqB,QAAQ,EAAE,EAAE;IACZa,SAAS,EAAE;EACb,CAAC;EACDxB,KAAK,EAAE;IACLsB,SAAS,EAAE;EACb,CAAC;EACDjB,SAAS,EAAE;IACTK,KAAK,EAAE,KAAK;IACZY,SAAS,EAAE;EACb,CAAC;EACDT,WAAW,EAAE;IACXH,KAAK,EAAE,OAAO;IACdY,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAEF,eAAe9D,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}