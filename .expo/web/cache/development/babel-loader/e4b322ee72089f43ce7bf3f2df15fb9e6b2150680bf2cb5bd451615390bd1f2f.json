{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  events: [],\n  status: \"idle\",\n  error: null\n};\nexport const fetchEvents = createAsyncThunk(\"events/fetchEvents\", async societyId => {\n  console.log(societyId);\n  const response = await axios.get(`http://192.168.29.226:2000/api/events/getAllEvents/${societyId}`);\n  console.log(response.data);\n  return response.data;\n});\nconst eventsSlice = createSlice({\n  name: \"events\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchEvents.pending, state => {\n      state.status = \"loading\";\n    }).addCase(fetchEvents.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.events = action.payload;\n    }).addCase(fetchEvents.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.error.message;\n    });\n  }\n});\nexport default eventsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","events","status","error","fetchEvents","societyId","console","log","response","get","data","eventsSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/src/panel/User/Redux/Slice/CommunitySlice/EventSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = {\r\n    events: [],\r\n    status: \"idle\",\r\n    error: null,\r\n};\r\n\r\nexport const fetchEvents = createAsyncThunk(\"events/fetchEvents\", async (societyId) => {\r\n    console.log(societyId)\r\n    const response = await axios.get(\r\n        `http://192.168.29.226:2000/api/events/getAllEvents/${societyId}`\r\n    );\r\n    console.log(response.data)\r\n    return response.data;\r\n});\r\n\r\nconst eventsSlice = createSlice({\r\n    name: \"events\",\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchEvents.pending, (state) => {\r\n                state.status = \"loading\";\r\n            })\r\n            .addCase(fetchEvents.fulfilled, (state, action) => {\r\n                state.status = \"succeeded\";\r\n                state.events = action.payload;\r\n            })\r\n            .addCase(fetchEvents.rejected, (state, action) => {\r\n                state.status = \"failed\";\r\n                state.error = action.error.message;\r\n            });\r\n    },\r\n});\r\n\r\nexport default eventsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAE,EAAE;EACVC,MAAM,EAAE,MAAM;EACdC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGN,gBAAgB,CAAC,oBAAoB,EAAE,MAAOO,SAAS,IAAK;EACnFC,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;EACtB,MAAMG,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAC5B,sDAAsDJ,SAAS,EACnE,CAAC;EACDC,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACE,IAAI,CAAC;EAC1B,OAAOF,QAAQ,CAACE,IAAI;AACxB,CAAC,CAAC;AAEF,MAAMC,WAAW,GAAGd,WAAW,CAAC;EAC5Be,IAAI,EAAE,QAAQ;EACdZ,YAAY;EACZa,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACZ,WAAW,CAACa,OAAO,EAAGC,KAAK,IAAK;MACrCA,KAAK,CAAChB,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDc,OAAO,CAACZ,WAAW,CAACe,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC/CF,KAAK,CAAChB,MAAM,GAAG,WAAW;MAC1BgB,KAAK,CAACjB,MAAM,GAAGmB,MAAM,CAACC,OAAO;IACjC,CAAC,CAAC,CACDL,OAAO,CAACZ,WAAW,CAACkB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC9CF,KAAK,CAAChB,MAAM,GAAG,QAAQ;MACvBgB,KAAK,CAACf,KAAK,GAAGiB,MAAM,CAACjB,KAAK,CAACoB,OAAO;IACtC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeZ,WAAW,CAACa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}