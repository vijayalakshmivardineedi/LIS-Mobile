{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\node_modules\\\\react-native-gifted-chat\\\\lib\\\\QuickReplies.js\";\nimport React, { useState, useMemo, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Color from './Color';\nimport { StylePropType } from './utils';\nimport { warning } from './logging';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    maxWidth: 300\n  },\n  quickReply: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    maxWidth: 200,\n    paddingVertical: 7,\n    paddingHorizontal: 12,\n    minHeight: 50,\n    borderRadius: 13,\n    margin: 3\n  },\n  quickReplyText: {\n    overflow: 'visible'\n  },\n  sendLink: {\n    borderWidth: 0\n  },\n  sendLinkText: {\n    color: Color.defaultBlue,\n    fontWeight: '600',\n    fontSize: 17\n  }\n});\nconst sameReply = currentReply => reply => currentReply.value === reply.value;\nconst diffReply = currentReply => reply => currentReply.value !== reply.value;\nexport function QuickReplies({\n  currentMessage,\n  nextMessage,\n  color = Color.peterRiver,\n  quickReplyStyle,\n  quickReplyTextStyle,\n  quickReplyContainerStyle,\n  onQuickReply,\n  sendText = 'Send',\n  renderQuickReplySend\n}) {\n  const {\n    type\n  } = currentMessage.quickReplies;\n  const [replies, setReplies] = useState([]);\n  const shouldComponentDisplay = useMemo(() => {\n    const hasReplies = !!currentMessage && !!currentMessage.quickReplies;\n    const hasNext = !!nextMessage && !!nextMessage._id;\n    const keepIt = currentMessage.quickReplies.keepIt;\n    if (hasReplies && !hasNext) return true;\n    if (hasReplies && hasNext && keepIt) return true;\n    return false;\n  }, [currentMessage, nextMessage]);\n  const handlePress = useCallback(reply => () => {\n    if (currentMessage) {\n      const {\n        type\n      } = currentMessage.quickReplies;\n      switch (type) {\n        case 'radio':\n          {\n            handleSend([reply])();\n            return;\n          }\n        case 'checkbox':\n          {\n            if (replies.find(sameReply(reply))) setReplies(replies.filter(diffReply(reply)));else setReplies([...replies, reply]);\n            return;\n          }\n        default:\n          {\n            warning(`onQuickReply unknown type: ${type}`);\n          }\n      }\n    }\n  }, [replies, currentMessage]);\n  const handleSend = repliesData => () => {\n    onQuickReply?.(repliesData.map(reply => Object.assign({}, reply, {\n      messageId: currentMessage._id\n    })));\n  };\n  if (!shouldComponentDisplay) return null;\n  return _jsxDEV(View, {\n    style: [styles.container, quickReplyContainerStyle],\n    children: [currentMessage.quickReplies.values.map((reply, index) => {\n      const selected = type === 'checkbox' && replies.find(sameReply(reply));\n      return _jsxDEV(TouchableOpacity, {\n        onPress: handlePress(reply),\n        style: [styles.quickReply, quickReplyStyle, {\n          borderColor: color\n        }, selected && {\n          backgroundColor: color\n        }],\n        children: _jsxDEV(Text, {\n          numberOfLines: 10,\n          ellipsizeMode: \"tail\",\n          style: [styles.quickReplyText, {\n            color: selected ? Color.white : color\n          }, quickReplyTextStyle],\n          children: reply.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this)\n      }, `${reply.value}-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this);\n    }), replies.length > 0 && _jsxDEV(TouchableOpacity, {\n      style: [styles.quickReply, styles.sendLink],\n      onPress: handleSend(replies),\n      children: renderQuickReplySend?.() || _jsxDEV(Text, {\n        style: styles.sendLinkText,\n        children: sendText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 13\n  }, this);\n}\nQuickReplies.propTypes = {\n  currentMessage: PropTypes.object.isRequired,\n  onQuickReply: PropTypes.func,\n  color: PropTypes.string,\n  sendText: PropTypes.string,\n  renderQuickReplySend: PropTypes.func,\n  quickReplyStyle: StylePropType\n};","map":{"version":3,"names":["React","useState","useMemo","useCallback","PropTypes","Text","StyleSheet","View","TouchableOpacity","Color","StylePropType","warning","jsxDEV","_jsxDEV","styles","create","container","flexDirection","flexWrap","maxWidth","quickReply","justifyContent","alignItems","borderWidth","paddingVertical","paddingHorizontal","minHeight","borderRadius","margin","quickReplyText","overflow","sendLink","sendLinkText","color","defaultBlue","fontWeight","fontSize","sameReply","currentReply","reply","value","diffReply","QuickReplies","currentMessage","nextMessage","peterRiver","quickReplyStyle","quickReplyTextStyle","quickReplyContainerStyle","onQuickReply","sendText","renderQuickReplySend","type","quickReplies","replies","setReplies","shouldComponentDisplay","hasReplies","hasNext","_id","keepIt","handlePress","handleSend","find","filter","repliesData","map","Object","assign","messageId","style","children","values","index","selected","onPress","borderColor","backgroundColor","numberOfLines","ellipsizeMode","white","title","fileName","_jsxFileName","lineNumber","columnNumber","length","propTypes","object","isRequired","func","string"],"sources":["C:\\Users\\user\\OneDrive\\Documents\\rn\\l\\node_modules\\react-native-gifted-chat\\src\\QuickReplies.tsx"],"sourcesContent":["import React, { useState, useMemo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  Text,\n  StyleSheet,\n  View,\n  TouchableOpacity,\n  StyleProp,\n  ViewStyle,\n  TextStyle,\n} from 'react-native'\nimport { IMessage, Reply } from './Models'\nimport Color from './Color'\nimport { StylePropType } from './utils'\nimport { warning } from './logging'\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    maxWidth: 300,\n  },\n  quickReply: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    maxWidth: 200,\n    paddingVertical: 7,\n    paddingHorizontal: 12,\n    minHeight: 50,\n    borderRadius: 13,\n    margin: 3,\n  },\n  quickReplyText: {\n    overflow: 'visible',\n  },\n  sendLink: {\n    borderWidth: 0,\n  },\n  sendLinkText: {\n    color: Color.defaultBlue,\n    fontWeight: '600',\n    fontSize: 17,\n  },\n})\n\nexport interface QuickRepliesProps<TMessage extends IMessage = IMessage> {\n  nextMessage?: TMessage\n  currentMessage: TMessage\n  color?: string\n  sendText?: string\n  quickReplyStyle?: StyleProp<ViewStyle>\n  quickReplyTextStyle?: StyleProp<TextStyle>\n  quickReplyContainerStyle?: StyleProp<ViewStyle>\n  onQuickReply?(reply: Reply[]): void\n  renderQuickReplySend?(): React.ReactNode\n}\n\nconst sameReply = (currentReply: Reply) => (reply: Reply) =>\n  currentReply.value === reply.value\n\nconst diffReply = (currentReply: Reply) => (reply: Reply) =>\n  currentReply.value !== reply.value\n\nexport function QuickReplies ({\n  currentMessage,\n  nextMessage,\n  color = Color.peterRiver,\n  quickReplyStyle,\n  quickReplyTextStyle,\n  quickReplyContainerStyle,\n  onQuickReply,\n  sendText = 'Send',\n  renderQuickReplySend,\n}: QuickRepliesProps<IMessage>) {\n  const { type } = currentMessage!.quickReplies!\n  const [replies, setReplies] = useState<Reply[]>([])\n\n  const shouldComponentDisplay = useMemo(() => {\n    const hasReplies = !!currentMessage && !!currentMessage!.quickReplies\n    const hasNext = !!nextMessage && !!nextMessage!._id\n    const keepIt = currentMessage!.quickReplies!.keepIt\n\n    if (hasReplies && !hasNext)\n      return true\n\n    if (hasReplies && hasNext && keepIt)\n      return true\n\n    return false\n  }, [currentMessage, nextMessage])\n\n  const handlePress = useCallback(\n    (reply: Reply) => () => {\n      if (currentMessage) {\n        const { type } = currentMessage.quickReplies!\n        switch (type) {\n          case 'radio': {\n            handleSend([reply])()\n            return\n          }\n          case 'checkbox': {\n            if (replies.find(sameReply(reply)))\n              setReplies(replies.filter(diffReply(reply)))\n            else\n              setReplies([...replies, reply])\n\n            return\n          }\n          default: {\n            warning(`onQuickReply unknown type: ${type}`)\n          }\n        }\n      }\n    },\n    [replies, currentMessage]\n  )\n\n  const handleSend = (repliesData: Reply[]) => () => {\n    onQuickReply?.(\n      repliesData.map((reply: Reply) => ({\n        ...reply,\n        messageId: currentMessage!._id,\n      }))\n    )\n  }\n\n  if (!shouldComponentDisplay)\n    return null\n\n  return (\n    <View style={[styles.container, quickReplyContainerStyle]}>\n      {currentMessage!.quickReplies!.values.map(\n        (reply: Reply, index: number) => {\n          const selected =\n            type === 'checkbox' && replies.find(sameReply(reply))\n\n          return (\n            <TouchableOpacity\n              onPress={handlePress(reply)}\n              style={[\n                styles.quickReply,\n                quickReplyStyle,\n                { borderColor: color },\n                selected && { backgroundColor: color },\n              ]}\n              key={`${reply.value}-${index}`}\n            >\n              <Text\n                numberOfLines={10}\n                ellipsizeMode='tail'\n                style={[\n                  styles.quickReplyText,\n                  { color: selected ? Color.white : color },\n                  quickReplyTextStyle,\n                ]}\n              >\n                {reply.title}\n              </Text>\n            </TouchableOpacity>\n          )\n        }\n      )}\n      {replies.length > 0 && (\n        <TouchableOpacity\n          style={[styles.quickReply, styles.sendLink]}\n          onPress={handleSend(replies)}\n        >\n          {renderQuickReplySend?.() || (\n            <Text style={styles.sendLinkText}>{sendText}</Text>\n          )}\n        </TouchableOpacity>\n      )}\n    </View>\n  )\n}\n\nQuickReplies.propTypes = {\n  currentMessage: PropTypes.object.isRequired,\n  onQuickReply: PropTypes.func,\n  color: PropTypes.string,\n  sendText: PropTypes.string,\n  renderQuickReplySend: PropTypes.func,\n  quickReplyStyle: StylePropType,\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}