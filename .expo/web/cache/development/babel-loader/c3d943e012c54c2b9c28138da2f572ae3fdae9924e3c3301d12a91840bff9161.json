{"ast":null,"code":"import { UnavailabilityError } from 'expo-modules-core';\nexport default {\n  async isAvailableAsync() {\n    if (typeof navigator === 'undefined') {\n      return false;\n    }\n    return !!navigator.share;\n  },\n  async shareAsync(url, options = {}) {\n    if (navigator.share) {\n      await navigator.share(Object.assign({}, options, {\n        url\n      }));\n    } else {\n      throw new UnavailabilityError('navigator', 'share');\n    }\n  }\n};","map":{"version":3,"names":["UnavailabilityError","isAvailableAsync","navigator","share","shareAsync","url","options","Object","assign"],"sources":["C:\\Users\\user\\OneDrive\\Documents\\rn\\l\\node_modules\\expo-sharing\\src\\ExpoSharing.web.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\ntype ShareOptions = { title?: string; text?: string; url?: string };\n\nexport default {\n  async isAvailableAsync(): Promise<boolean> {\n    if (typeof navigator === 'undefined') {\n      return false;\n    }\n\n    return !!navigator.share;\n  },\n  async shareAsync(url: string, options: ShareOptions = {}): Promise<void> {\n    // NOTE: `navigator.share` is only available via HTTPS\n    if (navigator.share) {\n      await navigator.share({ ...options, url });\n    } else {\n      throw new UnavailabilityError('navigator', 'share');\n    }\n  },\n};\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,mBAAmB;AAIvD,eAAe;EACb,MAAMC,gBAAgBA,CAAA;IACpB,IAAI,OAAOC,SAAS,KAAK,WAAW,EAAE;MACpC,OAAO,KAAK;;IAGd,OAAO,CAAC,CAACA,SAAS,CAACC,KAAK;EAC1B,CAAC;EACD,MAAMC,UAAUA,CAACC,GAAW,EAAEC,OAAA,GAAwB,EAAE;IAEtD,IAAIJ,SAAS,CAACC,KAAK,EAAE;MACnB,MAAMD,SAAS,CAACC,KAAK,CAAAI,MAAA,CAAAC,MAAA,KAAMF,OAAO;QAAED;MAAG,EAAE,CAAC;KAC3C,MAAM;MACL,MAAM,IAAIL,mBAAmB,CAAC,WAAW,EAAE,OAAO,CAAC;;EAEvD;CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}