{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\src\\\\panel\\\\Security\\\\Navigations\\\\Residents.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport telephoneImage from \"../../../assets/Security/images/telephone.png\";\nimport { fetchresidents } from '../../User/Redux/Slice/CommunitySlice/residentsSlice';\nimport { ImagebaseURL } from \"../helpers/axios\";\nimport { Avatar } from 'react-native-paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Residents = () => {\n  const dispatch = useDispatch();\n  const {\n    userProfiles,\n    status,\n    error\n  } = useSelector(state => state.userResidents);\n  const [societyId, setSocietyId] = useState(null);\n  useEffect(() => {\n    const getSocietyId = async () => {\n      try {\n        const user = await AsyncStorage.getItem('user');\n        const id = JSON.parse(user).societyId;\n        if (id !== null) {\n          setSocietyId(id);\n        } else {\n          console.error('No societyId found in AsyncStorage');\n        }\n      } catch (error) {\n        console.error('Error fetching societyId from AsyncStorage:', error);\n      }\n    };\n    getSocietyId();\n  }, []);\n  useEffect(() => {\n    if (societyId) {\n      dispatch(fetchresidents(societyId));\n    }\n  }, [dispatch, societyId]);\n  const handlePhonePress = phoneNumber => {\n    const dialNumber = `tel:${phoneNumber}`;\n    Linking.openURL(dialNumber);\n  };\n  if (status === \"loading\") {\n    return _jsxDEV(View, {\n      style: styles.loadingContainer,\n      children: _jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: \"#7d0431\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n  if (status === \"failed\") {\n    return _jsxDEV(Text, {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  }\n  const groupResidentsByBlock = () => {\n    const groupedResidents = {};\n    userProfiles.forEach(resident => {\n      const {\n        buildingName\n      } = resident;\n      if (!groupedResidents[buildingName]) {\n        groupedResidents[buildingName] = [];\n      }\n      groupedResidents[buildingName].push(resident);\n    });\n    return groupedResidents;\n  };\n  const groupedResidents = groupResidentsByBlock();\n  const sortedBlockNames = Object.keys(groupedResidents).sort((a, b) => {\n    return a.localeCompare(b);\n  });\n  return _jsxDEV(ScrollView, {\n    contentContainerStyle: styles.container,\n    children: sortedBlockNames.map(blockName => _jsxDEV(View, {\n      style: styles.blockContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.blockText,\n        children: blockName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), groupedResidents[blockName].map(resident => _jsxDEV(View, {\n        style: styles.avatarContainer,\n        children: [_jsxDEV(Avatar.Image, {\n          source: {\n            uri: `${ImagebaseURL}${resident.profilePicture}`\n          },\n          style: styles.avatarImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this), _jsxDEV(View, {\n          style: styles.avatarInfo,\n          children: [_jsxDEV(Text, {\n            style: styles.nameText,\n            children: resident.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), _jsxDEV(Text, {\n            style: styles.blockNumberText,\n            children: [resident.buildingName, \" \", _jsxDEV(Icon, {\n              name: \"circle\",\n              size: 5,\n              color: \"grey\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this), \" \", resident.flatNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), _jsxDEV(TouchableOpacity, {\n          onPress: () => handlePhonePress(resident.mobileNumber),\n          children: _jsxDEV(Image, {\n            source: telephoneImage,\n            style: styles.phoneIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this)]\n      }, resident._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this))]\n    }, blockName, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    alignItems: \"flex-start\",\n    backgroundColor: \"white\",\n    paddingHorizontal: 10\n  },\n  searchContainer: {\n    width: \"100%\",\n    marginTop: 20,\n    paddingHorizontal: 10\n  },\n  searchIcon: {\n    marginRight: 10\n  },\n  searchInput: {\n    height: 50,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderColor: \"grey\",\n    borderWidth: 1,\n    borderRadius: 15,\n    paddingHorizontal: 10,\n    width: \"100%\"\n  },\n  blockContainer: {\n    width: \"100%\",\n    marginBottom: 20\n  },\n  blockText: {\n    alignSelf: \"flex-start\",\n    color: \"grey\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginTop: 20,\n    marginBottom: 10,\n    textAlign: \"left\"\n  },\n  avatarContainer: {\n    marginTop: 5,\n    backgroundColor: \"#F3E1D5\",\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 10,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"100%\"\n  },\n  avatarImage: {\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    marginVertical: 5,\n    marginRight: 10,\n    backgroundColor: \"#ccc\"\n  },\n  avatarInfo: {\n    flex: 1,\n    marginLeft: 10\n  },\n  nameText: {\n    fontWeight: \"bold\",\n    color: \"black\",\n    marginBottom: 5,\n    fontSize: 18\n  },\n  blockNumberText: {\n    color: \"grey\",\n    fontWeight: \"500\"\n  },\n  phoneIcon: {\n    width: 40,\n    height: 40,\n    marginRight: 10\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});\nexport default Residents;","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","View","StyleSheet","Text","Image","Linking","TouchableOpacity","ScrollView","ActivityIndicator","Icon","AsyncStorage","telephoneImage","fetchresidents","ImagebaseURL","Avatar","jsxDEV","_jsxDEV","Residents","dispatch","userProfiles","status","error","state","userResidents","societyId","setSocietyId","getSocietyId","user","getItem","id","JSON","parse","console","handlePhonePress","phoneNumber","dialNumber","openURL","style","styles","loadingContainer","children","size","color","fileName","_jsxFileName","lineNumber","columnNumber","groupResidentsByBlock","groupedResidents","forEach","resident","buildingName","push","sortedBlockNames","Object","keys","sort","a","b","localeCompare","contentContainerStyle","container","map","blockName","blockContainer","blockText","avatarContainer","source","uri","profilePicture","avatarImage","avatarInfo","nameText","name","blockNumberText","flatNumber","onPress","mobileNumber","phoneIcon","_id","create","flexGrow","alignItems","backgroundColor","paddingHorizontal","searchContainer","width","marginTop","searchIcon","marginRight","searchInput","height","flexDirection","borderColor","borderWidth","borderRadius","marginBottom","alignSelf","fontSize","fontWeight","textAlign","paddingVertical","justifyContent","marginVertical","flex","marginLeft"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/src/panel/Security/Navigations/Residents.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  View,\n  StyleSheet,\n  Text,\n  Image,\n  Linking,\n  TouchableOpacity,\n  ScrollView,ActivityIndicator,\n} from \"react-native\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport telephoneImage from \"../../../assets/Security/images/telephone.png\";\nimport { fetchresidents } from '../../User/Redux/Slice/CommunitySlice/residentsSlice';\nimport { ImagebaseURL } from \"../helpers/axios\";\nimport { Avatar } from 'react-native-paper'\nconst Residents = () => {\n  const dispatch = useDispatch();\n  const { userProfiles, status, error } = useSelector((state) => state.userResidents);\n  const [societyId, setSocietyId] = useState(null);\n  useEffect(() => {\n    const getSocietyId = async () => {\n      try {\n        const user = await AsyncStorage.getItem('user');\n        const id = JSON.parse(user).societyId;\n        if (id !== null) {\n          setSocietyId(id);\n        } else {\n          console.error('No societyId found in AsyncStorage');\n        }\n      } catch (error) {\n        console.error('Error fetching societyId from AsyncStorage:', error);\n      }\n    };\n    getSocietyId();\n  }, []);\n\n  useEffect(() => {\n    if (societyId) {\n      dispatch(fetchresidents(societyId));\n    }\n  }, [dispatch, societyId]);\n\n  const handlePhonePress = (phoneNumber) => {\n    const dialNumber = `tel:${phoneNumber}`;\n    Linking.openURL(dialNumber);\n  };\n\n  if (status === \"loading\") {\n    return (\n      <View style={styles.loadingContainer}>\n          <ActivityIndicator size=\"large\" color=\"#7d0431\" />\n      </View>\n  );\n  }\n\n  if (status === \"failed\") {\n    return <Text>Error: {error}</Text>;\n  }\n\n  const groupResidentsByBlock = () => {\n    const groupedResidents = {};\n    userProfiles.forEach((resident) => {\n      const { buildingName } = resident;\n      if (!groupedResidents[buildingName]) {\n        groupedResidents[buildingName] = [];\n      }\n      groupedResidents[buildingName].push(resident);\n    });\n    return groupedResidents;\n  };\n\n  const groupedResidents = groupResidentsByBlock();\n  const sortedBlockNames = Object.keys(groupedResidents).sort((a, b) => {\n    return a.localeCompare(b);\n  });\n\n  return (\n    <ScrollView contentContainerStyle={styles.container}>\n      {/* <View style={styles.searchContainer}>\n       +-\n      </View> */}\n\n      {/* Render blocks and their corresponding residents */}\n      {sortedBlockNames.map((blockName) => (\n        <View key={blockName} style={styles.blockContainer}>\n          <Text style={styles.blockText}>{blockName}</Text>\n          {groupedResidents[blockName].map((resident) => (\n            <View key={resident._id} style={styles.avatarContainer}>\n              <Avatar.Image\n                source={{ uri: `${ImagebaseURL}${resident.profilePicture}` }}\n                style={styles.avatarImage}\n              />\n              <View style={styles.avatarInfo}>\n                <Text style={styles.nameText}>{resident.name}</Text>\n                <Text style={styles.blockNumberText}>\n                  {resident.buildingName}{\" \"}\n                  <Icon name=\"circle\" size={5} color=\"grey\" />{\" \"}\n                  {resident.flatNumber}\n                </Text>\n              </View>\n              <TouchableOpacity\n                onPress={() => handlePhonePress(resident.mobileNumber)}\n              >\n                <Image source={telephoneImage} style={styles.phoneIcon} />\n              </TouchableOpacity>\n            </View>\n          ))}\n        </View>\n      ))}\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    alignItems: \"flex-start\",\n    backgroundColor: \"white\",\n    paddingHorizontal: 10,\n  },\n  searchContainer: {\n    width: \"100%\",\n    marginTop: 20,\n    paddingHorizontal: 10,\n  },\n  searchIcon: {\n    marginRight: 10,\n  },\n  searchInput: {\n    height: 50,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderColor: \"grey\",\n    borderWidth: 1,\n    borderRadius: 15,\n    paddingHorizontal: 10,\n    width: \"100%\",\n  },\n  blockContainer: {\n    width: \"100%\",\n    marginBottom: 20,\n  },\n  blockText: {\n    alignSelf: \"flex-start\",\n    color: \"grey\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginTop: 20,\n    marginBottom: 10,\n    textAlign: \"left\", // Align block names to the left\n  },\n  avatarContainer: {\n    marginTop: 5,\n    backgroundColor: \"#F3E1D5\",\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 10,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"100%\",\n  },\n  avatarImage: {\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    marginVertical: 5,\n    marginRight: 10,\n    backgroundColor:\"#ccc\"\n  },\n  avatarInfo: {\n    flex: 1,\n    marginLeft: 10,\n  },\n  nameText: {\n    fontWeight: \"bold\",\n    color: \"black\",\n    marginBottom: 5,\n    fontSize: 18,\n  },\n  blockNumberText: {\n    color: \"grey\",\n    fontWeight: \"500\",\n  },\n  phoneIcon: {\n    width: 40,\n    height: 40,\n    marginRight: 10,\n  },  loadingContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n},\n});\n\nexport default Residents;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}