{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\rn\\\\l\\\\node_modules\\\\react-native-calendars\\\\src\\\\calendar-list\\\\new.js\";\nimport XDate from 'xdate';\nimport React, { useCallback, useEffect, useRef, useState, useMemo } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport constants from '../commons/constants';\nimport { toMarkingFormat } from '../interface';\nimport { extractHeaderProps } from '../componentUpdater';\nimport Calendar from '../calendar';\nimport CalendarHeader from '../calendar/header';\nimport InfiniteList from '../infinite-list';\nimport styleConstructor from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NUMBER_OF_PAGES = 50;\nconst CALENDAR_HEIGHT = 360;\nconst CalendarList = props => {\n  const {\n    initialDate,\n    horizontal,\n    scrollRange = NUMBER_OF_PAGES,\n    staticHeader,\n    scrollViewProps,\n    calendarProps,\n    testID\n  } = props;\n  const style = useRef(styleConstructor(calendarProps?.theme));\n  const list = useRef();\n  const [items, setItems] = useState(getDatesArray(initialDate, scrollRange));\n  const [positionIndex, setPositionIndex] = useState(scrollRange);\n  const [currentMonth, setCurrentMonth] = useState(initialDate || items[scrollRange]);\n  const shouldRenderStaticHeader = staticHeader && horizontal;\n  const headerProps = extractHeaderProps(props);\n  const staticHeaderStyle = useMemo(() => {\n    return [style.current.staticHeader, calendarProps?.headerStyle];\n  }, [calendarProps?.headerStyle]);\n  useEffect(() => {\n    scrollToMonth(currentMonth);\n  }, [currentMonth]);\n  const getMonthIndex = useCallback(month => {\n    if (!month) {\n      return -1;\n    }\n    return items.findIndex(item => item.includes(month.toString('yyyy-MM')));\n  }, [items]);\n  const scrollToMonth = useCallback(month => {\n    if (month) {\n      const index = getMonthIndex(new XDate(month));\n      if (index !== -1) {\n        const shouldAnimate = constants.isAndroid && !horizontal ? false : true;\n        list.current?.scrollToOffset?.(index * constants.screenWidth, 0, shouldAnimate);\n      }\n    }\n  }, [getMonthIndex]);\n  const updateMonth = useCallback((count, month) => {\n    if (month) {\n      const next = new XDate(month).addMonths(count, true);\n      const nextNext = new XDate(month).addMonths(count * 2, true);\n      const nextNextIndex = getMonthIndex(nextNext);\n      if (nextNextIndex !== -1) {\n        setCurrentMonth(toMarkingFormat(next));\n      }\n    }\n  }, [getMonthIndex]);\n  const scrollToNextMonth = useCallback((method, month) => {\n    if (calendarProps?.onPressArrowLeft) {\n      calendarProps?.onPressArrowLeft?.(method, month);\n    } else {\n      updateMonth(1, month);\n    }\n  }, [updateMonth]);\n  const scrollToPreviousMonth = useCallback((method, month) => {\n    if (calendarProps?.onPressArrowRight) {\n      calendarProps?.onPressArrowRight?.(method, month);\n    } else {\n      updateMonth(-1, month);\n    }\n  }, [updateMonth]);\n  const onPageChange = useCallback((pageIndex, _, info) => {\n    if (shouldRenderStaticHeader && info.scrolledByUser) {\n      setCurrentMonth(items[pageIndex]);\n    }\n  }, [items]);\n  const renderStaticHeader = () => {\n    if (shouldRenderStaticHeader) {\n      return _jsxDEV(CalendarHeader, Object.assign({}, headerProps, {\n        month: new XDate(currentMonth),\n        onPressArrowRight: scrollToNextMonth,\n        onPressArrowLeft: scrollToPreviousMonth,\n        style: staticHeaderStyle,\n        accessibilityElementsHidden: true,\n        importantForAccessibility: 'no-hide-descendants',\n        testID: 'static-header'\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this);\n    }\n  };\n  const reloadPages = useCallback(pageIndex => {\n    horizontal ? replaceItems(pageIndex) : addItems(pageIndex);\n  }, [items]);\n  const replaceItems = index => {\n    const newItems = getDatesArray(items[index], scrollRange);\n    setItems(newItems);\n  };\n  const addItems = index => {\n    const array = [...items];\n    const startingDate = items[index];\n    const shouldAppend = index > scrollRange;\n    if (startingDate) {\n      if (shouldAppend) {\n        for (let i = 2; i <= scrollRange; i++) {\n          const newDate = getDate(startingDate, i);\n          array.push(newDate);\n        }\n      } else {\n        for (let i = -1; i > -scrollRange; i--) {\n          const newDate = getDate(startingDate, i);\n          array.unshift(newDate);\n        }\n      }\n      setPositionIndex(shouldAppend ? index : scrollRange - 1);\n      setItems(array);\n    }\n  };\n  const listContainerStyle = useMemo(() => {\n    return [style.current.flatListContainer, {\n      flex: horizontal ? undefined : 1\n    }];\n  }, [style, horizontal]);\n  const scrollProps = useMemo(() => {\n    return Object.assign({}, scrollViewProps, {\n      showsHorizontalScrollIndicator: false,\n      showsVerticalScrollIndicator: false\n    });\n  }, [scrollViewProps]);\n  const renderItem = useCallback((_type, item) => {\n    return _jsxDEV(Calendar, Object.assign({}, calendarProps, headerProps, {\n      initialDate: item,\n      disableMonthChange: true,\n      hideArrows: !horizontal,\n      onPressArrowRight: scrollToNextMonth,\n      onPressArrowLeft: scrollToPreviousMonth,\n      hideExtraDays: calendarProps?.hideExtraDays || true,\n      style: [style.current.calendar, calendarProps?.style],\n      headerStyle: horizontal ? calendarProps?.headerStyle : undefined,\n      testID: `${testID}_${item}`\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }, this);\n  }, [calendarProps, scrollToNextMonth, scrollToPreviousMonth]);\n  return _jsxDEV(View, {\n    style: listContainerStyle,\n    children: [_jsxDEV(InfiniteList, {\n      ref: list,\n      data: items,\n      renderItem: renderItem,\n      reloadPages: reloadPages,\n      onReachNearEdgeThreshold: Math.round(NUMBER_OF_PAGES * 0.4),\n      extendedState: calendarProps?.markedDates,\n      isHorizontal: horizontal,\n      style: style.current.container,\n      initialPageIndex: scrollRange,\n      positionIndex: positionIndex,\n      pageHeight: CALENDAR_HEIGHT,\n      pageWidth: constants.screenWidth,\n      onPageChange: onPageChange,\n      scrollViewProps: scrollProps\n    }, \"calendar-list\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), renderStaticHeader()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 13\n  }, this);\n};\nexport default CalendarList;\nfunction getDate(date, index) {\n  const d = new XDate(date);\n  d.addMonths(index, true);\n  d.setDate(1);\n  return toMarkingFormat(d);\n}\nfunction getDatesArray(date, numberOfPages = NUMBER_OF_PAGES) {\n  const d = date || new XDate().toString();\n  const array = [];\n  for (let index = -numberOfPages; index <= numberOfPages; index++) {\n    const newDate = getDate(d, index);\n    array.push(newDate);\n  }\n  return array;\n}","map":{"version":3,"names":["XDate","React","useCallback","useEffect","useRef","useState","useMemo","View","constants","toMarkingFormat","extractHeaderProps","Calendar","CalendarHeader","InfiniteList","styleConstructor","jsxDEV","_jsxDEV","NUMBER_OF_PAGES","CALENDAR_HEIGHT","CalendarList","props","initialDate","horizontal","scrollRange","staticHeader","scrollViewProps","calendarProps","testID","style","theme","list","items","setItems","getDatesArray","positionIndex","setPositionIndex","currentMonth","setCurrentMonth","shouldRenderStaticHeader","headerProps","staticHeaderStyle","current","headerStyle","scrollToMonth","getMonthIndex","month","findIndex","item","includes","toString","index","shouldAnimate","isAndroid","scrollToOffset","screenWidth","updateMonth","count","next","addMonths","nextNext","nextNextIndex","scrollToNextMonth","method","onPressArrowLeft","scrollToPreviousMonth","onPressArrowRight","onPageChange","pageIndex","_","info","scrolledByUser","renderStaticHeader","Object","assign","accessibilityElementsHidden","importantForAccessibility","fileName","_jsxFileName","lineNumber","columnNumber","reloadPages","replaceItems","addItems","newItems","array","startingDate","shouldAppend","i","newDate","getDate","push","unshift","listContainerStyle","flatListContainer","flex","undefined","scrollProps","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","renderItem","_type","disableMonthChange","hideArrows","hideExtraDays","calendar","children","ref","data","onReachNearEdgeThreshold","Math","round","extendedState","markedDates","isHorizontal","container","initialPageIndex","pageHeight","pageWidth","date","d","setDate","numberOfPages"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/node_modules/react-native-calendars/src/calendar-list/new.js"],"sourcesContent":["import XDate from 'xdate';\nimport React, { useCallback, useEffect, useRef, useState, useMemo } from 'react';\nimport { View } from 'react-native';\nimport constants from '../commons/constants';\nimport { toMarkingFormat } from '../interface';\nimport { extractHeaderProps } from '../componentUpdater';\nimport Calendar from '../calendar';\nimport CalendarHeader from '../calendar/header';\nimport InfiniteList from '../infinite-list';\nimport styleConstructor from './style';\nconst NUMBER_OF_PAGES = 50;\nconst CALENDAR_HEIGHT = 360;\nconst CalendarList = (props) => {\n    const { initialDate, horizontal, scrollRange = NUMBER_OF_PAGES, staticHeader, scrollViewProps, calendarProps, testID } = props;\n    const style = useRef(styleConstructor(calendarProps?.theme));\n    const list = useRef();\n    const [items, setItems] = useState(getDatesArray(initialDate, scrollRange));\n    const [positionIndex, setPositionIndex] = useState(scrollRange);\n    /** Static Header */\n    const [currentMonth, setCurrentMonth] = useState(initialDate || items[scrollRange]);\n    const shouldRenderStaticHeader = staticHeader && horizontal;\n    const headerProps = extractHeaderProps(props);\n    const staticHeaderStyle = useMemo(() => {\n        return [style.current.staticHeader, calendarProps?.headerStyle];\n    }, [calendarProps?.headerStyle]);\n    useEffect(() => {\n        scrollToMonth(currentMonth);\n    }, [currentMonth]);\n    const getMonthIndex = useCallback((month) => {\n        if (!month) {\n            return -1;\n        }\n        return items.findIndex(item => item.includes(month.toString('yyyy-MM')));\n    }, [items]);\n    const scrollToMonth = useCallback((month) => {\n        if (month) {\n            const index = getMonthIndex(new XDate(month));\n            if (index !== -1) {\n                const shouldAnimate = constants.isAndroid && !horizontal ? false : true;\n                // @ts-expect-error\n                list.current?.scrollToOffset?.(index * constants.screenWidth, 0, shouldAnimate);\n            }\n        }\n    }, [getMonthIndex]);\n    const updateMonth = useCallback((count, month) => {\n        if (month) {\n            const next = new XDate(month).addMonths(count, true);\n            const nextNext = new XDate(month).addMonths(count * 2, true);\n            const nextNextIndex = getMonthIndex(nextNext);\n            if (nextNextIndex !== -1) {\n                setCurrentMonth(toMarkingFormat(next));\n            }\n        }\n    }, [getMonthIndex]);\n    const scrollToNextMonth = useCallback((method, month) => {\n        if (calendarProps?.onPressArrowLeft) {\n            calendarProps?.onPressArrowLeft?.(method, month);\n        }\n        else {\n            updateMonth(1, month);\n        }\n    }, [updateMonth]);\n    const scrollToPreviousMonth = useCallback((method, month) => {\n        if (calendarProps?.onPressArrowRight) {\n            calendarProps?.onPressArrowRight?.(method, month);\n        }\n        else {\n            updateMonth(-1, month);\n        }\n    }, [updateMonth]);\n    const onPageChange = useCallback((pageIndex, _, info) => {\n        if (shouldRenderStaticHeader && info.scrolledByUser) {\n            setCurrentMonth(items[pageIndex]);\n        }\n    }, [items]);\n    const renderStaticHeader = () => {\n        if (shouldRenderStaticHeader) {\n            return (<CalendarHeader {...headerProps} month={new XDate(currentMonth)} onPressArrowRight={scrollToNextMonth} onPressArrowLeft={scrollToPreviousMonth} style={staticHeaderStyle} accessibilityElementsHidden // iOS\n             importantForAccessibility={'no-hide-descendants'} // Android\n             testID={'static-header'}/>);\n        }\n    };\n    /** Data */\n    const reloadPages = useCallback(pageIndex => {\n        horizontal ? replaceItems(pageIndex) : addItems(pageIndex);\n    }, [items]);\n    const replaceItems = (index) => {\n        const newItems = getDatesArray(items[index], scrollRange);\n        setItems(newItems);\n    };\n    const addItems = (index) => {\n        const array = [...items];\n        const startingDate = items[index];\n        const shouldAppend = index > scrollRange;\n        if (startingDate) {\n            if (shouldAppend) {\n                for (let i = 2; i <= scrollRange; i++) {\n                    const newDate = getDate(startingDate, i);\n                    array.push(newDate);\n                }\n            }\n            else {\n                for (let i = -1; i > -scrollRange; i--) {\n                    const newDate = getDate(startingDate, i);\n                    array.unshift(newDate);\n                }\n            }\n            setPositionIndex(shouldAppend ? index : scrollRange - 1);\n            setItems(array);\n        }\n    };\n    /** List */\n    const listContainerStyle = useMemo(() => {\n        return [style.current.flatListContainer, { flex: horizontal ? undefined : 1 }];\n    }, [style, horizontal]);\n    const scrollProps = useMemo(() => {\n        return {\n            ...scrollViewProps,\n            showsHorizontalScrollIndicator: false,\n            showsVerticalScrollIndicator: false\n        };\n    }, [scrollViewProps]);\n    const renderItem = useCallback((_type, item) => {\n        return (<Calendar {...calendarProps} {...headerProps} initialDate={item} disableMonthChange hideArrows={!horizontal} onPressArrowRight={scrollToNextMonth} onPressArrowLeft={scrollToPreviousMonth} hideExtraDays={calendarProps?.hideExtraDays || true} style={[style.current.calendar, calendarProps?.style]} headerStyle={horizontal ? calendarProps?.headerStyle : undefined} testID={`${testID}_${item}`}/>);\n    }, [calendarProps, scrollToNextMonth, scrollToPreviousMonth]);\n    return (<View style={listContainerStyle}>\n      <InfiniteList key=\"calendar-list\" ref={list} data={items} renderItem={renderItem} reloadPages={reloadPages} onReachNearEdgeThreshold={Math.round(NUMBER_OF_PAGES * 0.4)} extendedState={calendarProps?.markedDates} isHorizontal={horizontal} style={style.current.container} initialPageIndex={scrollRange} positionIndex={positionIndex} pageHeight={CALENDAR_HEIGHT} pageWidth={constants.screenWidth} onPageChange={onPageChange} scrollViewProps={scrollProps}/>\n      {renderStaticHeader()}\n    </View>);\n};\nexport default CalendarList;\nfunction getDate(date, index) {\n    const d = new XDate(date);\n    d.addMonths(index, true);\n    // if (index !== 0) {\n    d.setDate(1);\n    // }\n    return toMarkingFormat(d);\n}\nfunction getDatesArray(date, numberOfPages = NUMBER_OF_PAGES) {\n    const d = date || new XDate().toString();\n    const array = [];\n    for (let index = -numberOfPages; index <= numberOfPages; index++) {\n        const newDate = getDate(d, index);\n        array.push(newDate);\n    }\n    return array;\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,WAAW,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAEjF,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,SAASC,eAAe,QAAQ,cAAc;AAC9C,SAASC,kBAAkB,QAAQ,qBAAqB;AACxD,OAAOC,QAAQ,MAAM,aAAa;AAClC,OAAOC,cAAc,MAAM,oBAAoB;AAC/C,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,gBAAgB,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACvC,MAAMC,eAAe,GAAG,EAAE;AAC1B,MAAMC,eAAe,GAAG,GAAG;AAC3B,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAC5B,MAAM;IAAEC,WAAW;IAAEC,UAAU;IAAEC,WAAW,GAAGN,eAAe;IAAEO,YAAY;IAAEC,eAAe;IAAEC,aAAa;IAAEC;EAAO,CAAC,GAAGP,KAAK;EAC9H,MAAMQ,KAAK,GAAGxB,MAAM,CAACU,gBAAgB,CAACY,aAAa,EAAEG,KAAK,CAAC,CAAC;EAC5D,MAAMC,IAAI,GAAG1B,MAAM,CAAC,CAAC;EACrB,MAAM,CAAC2B,KAAK,EAAEC,QAAQ,CAAC,GAAG3B,QAAQ,CAAC4B,aAAa,CAACZ,WAAW,EAAEE,WAAW,CAAC,CAAC;EAC3E,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAG9B,QAAQ,CAACkB,WAAW,CAAC;EAE/D,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGhC,QAAQ,CAACgB,WAAW,IAAIU,KAAK,CAACR,WAAW,CAAC,CAAC;EACnF,MAAMe,wBAAwB,GAAGd,YAAY,IAAIF,UAAU;EAC3D,MAAMiB,WAAW,GAAG7B,kBAAkB,CAACU,KAAK,CAAC;EAC7C,MAAMoB,iBAAiB,GAAGlC,OAAO,CAAC,MAAM;IACpC,OAAO,CAACsB,KAAK,CAACa,OAAO,CAACjB,YAAY,EAAEE,aAAa,EAAEgB,WAAW,CAAC;EACnE,CAAC,EAAE,CAAChB,aAAa,EAAEgB,WAAW,CAAC,CAAC;EAChCvC,SAAS,CAAC,MAAM;IACZwC,aAAa,CAACP,YAAY,CAAC;EAC/B,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAClB,MAAMQ,aAAa,GAAG1C,WAAW,CAAE2C,KAAK,IAAK;IACzC,IAAI,CAACA,KAAK,EAAE;MACR,OAAO,CAAC,CAAC;IACb;IACA,OAAOd,KAAK,CAACe,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACC,QAAQ,CAACH,KAAK,CAACI,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;EAC5E,CAAC,EAAE,CAAClB,KAAK,CAAC,CAAC;EACX,MAAMY,aAAa,GAAGzC,WAAW,CAAE2C,KAAK,IAAK;IACzC,IAAIA,KAAK,EAAE;MACP,MAAMK,KAAK,GAAGN,aAAa,CAAC,IAAI5C,KAAK,CAAC6C,KAAK,CAAC,CAAC;MAC7C,IAAIK,KAAK,KAAK,CAAC,CAAC,EAAE;QACd,MAAMC,aAAa,GAAG3C,SAAS,CAAC4C,SAAS,IAAI,CAAC9B,UAAU,GAAG,KAAK,GAAG,IAAI;QAEvEQ,IAAI,CAACW,OAAO,EAAEY,cAAc,GAAGH,KAAK,GAAG1C,SAAS,CAAC8C,WAAW,EAAE,CAAC,EAAEH,aAAa,CAAC;MACnF;IACJ;EACJ,CAAC,EAAE,CAACP,aAAa,CAAC,CAAC;EACnB,MAAMW,WAAW,GAAGrD,WAAW,CAAC,CAACsD,KAAK,EAAEX,KAAK,KAAK;IAC9C,IAAIA,KAAK,EAAE;MACP,MAAMY,IAAI,GAAG,IAAIzD,KAAK,CAAC6C,KAAK,CAAC,CAACa,SAAS,CAACF,KAAK,EAAE,IAAI,CAAC;MACpD,MAAMG,QAAQ,GAAG,IAAI3D,KAAK,CAAC6C,KAAK,CAAC,CAACa,SAAS,CAACF,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC;MAC5D,MAAMI,aAAa,GAAGhB,aAAa,CAACe,QAAQ,CAAC;MAC7C,IAAIC,aAAa,KAAK,CAAC,CAAC,EAAE;QACtBvB,eAAe,CAAC5B,eAAe,CAACgD,IAAI,CAAC,CAAC;MAC1C;IACJ;EACJ,CAAC,EAAE,CAACb,aAAa,CAAC,CAAC;EACnB,MAAMiB,iBAAiB,GAAG3D,WAAW,CAAC,CAAC4D,MAAM,EAAEjB,KAAK,KAAK;IACrD,IAAInB,aAAa,EAAEqC,gBAAgB,EAAE;MACjCrC,aAAa,EAAEqC,gBAAgB,GAAGD,MAAM,EAAEjB,KAAK,CAAC;IACpD,CAAC,MACI;MACDU,WAAW,CAAC,CAAC,EAAEV,KAAK,CAAC;IACzB;EACJ,CAAC,EAAE,CAACU,WAAW,CAAC,CAAC;EACjB,MAAMS,qBAAqB,GAAG9D,WAAW,CAAC,CAAC4D,MAAM,EAAEjB,KAAK,KAAK;IACzD,IAAInB,aAAa,EAAEuC,iBAAiB,EAAE;MAClCvC,aAAa,EAAEuC,iBAAiB,GAAGH,MAAM,EAAEjB,KAAK,CAAC;IACrD,CAAC,MACI;MACDU,WAAW,CAAC,CAAC,CAAC,EAAEV,KAAK,CAAC;IAC1B;EACJ,CAAC,EAAE,CAACU,WAAW,CAAC,CAAC;EACjB,MAAMW,YAAY,GAAGhE,WAAW,CAAC,CAACiE,SAAS,EAAEC,CAAC,EAAEC,IAAI,KAAK;IACrD,IAAI/B,wBAAwB,IAAI+B,IAAI,CAACC,cAAc,EAAE;MACjDjC,eAAe,CAACN,KAAK,CAACoC,SAAS,CAAC,CAAC;IACrC;EACJ,CAAC,EAAE,CAACpC,KAAK,CAAC,CAAC;EACX,MAAMwC,kBAAkB,GAAGA,CAAA,KAAM;IAC7B,IAAIjC,wBAAwB,EAAE;MAC1B,OAAQtB,OAAA,CAACJ,cAAc,EAAA4D,MAAA,CAAAC,MAAA,KAAKlC,WAAW;QAAEM,KAAK,EAAE,IAAI7C,KAAK,CAACoC,YAAY,CAAE;QAAC6B,iBAAiB,EAAEJ,iBAAkB;QAACE,gBAAgB,EAAEC,qBAAsB;QAACpC,KAAK,EAAEY,iBAAkB;QAACkC,2BAA2B;QAC5MC,yBAAyB,EAAE,qBAAsB;QACjDhD,MAAM,EAAE;MAAgB;QAAAiD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAC/B;EACJ,CAAC;EAED,MAAMC,WAAW,GAAG9E,WAAW,CAACiE,SAAS,IAAI;IACzC7C,UAAU,GAAG2D,YAAY,CAACd,SAAS,CAAC,GAAGe,QAAQ,CAACf,SAAS,CAAC;EAC9D,CAAC,EAAE,CAACpC,KAAK,CAAC,CAAC;EACX,MAAMkD,YAAY,GAAI/B,KAAK,IAAK;IAC5B,MAAMiC,QAAQ,GAAGlD,aAAa,CAACF,KAAK,CAACmB,KAAK,CAAC,EAAE3B,WAAW,CAAC;IACzDS,QAAQ,CAACmD,QAAQ,CAAC;EACtB,CAAC;EACD,MAAMD,QAAQ,GAAIhC,KAAK,IAAK;IACxB,MAAMkC,KAAK,GAAG,CAAC,GAAGrD,KAAK,CAAC;IACxB,MAAMsD,YAAY,GAAGtD,KAAK,CAACmB,KAAK,CAAC;IACjC,MAAMoC,YAAY,GAAGpC,KAAK,GAAG3B,WAAW;IACxC,IAAI8D,YAAY,EAAE;MACd,IAAIC,YAAY,EAAE;QACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIhE,WAAW,EAAEgE,CAAC,EAAE,EAAE;UACnC,MAAMC,OAAO,GAAGC,OAAO,CAACJ,YAAY,EAAEE,CAAC,CAAC;UACxCH,KAAK,CAACM,IAAI,CAACF,OAAO,CAAC;QACvB;MACJ,CAAC,MACI;QACD,KAAK,IAAID,CAAC,GAAG,CAAC,CAAC,EAAEA,CAAC,GAAG,CAAChE,WAAW,EAAEgE,CAAC,EAAE,EAAE;UACpC,MAAMC,OAAO,GAAGC,OAAO,CAACJ,YAAY,EAAEE,CAAC,CAAC;UACxCH,KAAK,CAACO,OAAO,CAACH,OAAO,CAAC;QAC1B;MACJ;MACArD,gBAAgB,CAACmD,YAAY,GAAGpC,KAAK,GAAG3B,WAAW,GAAG,CAAC,CAAC;MACxDS,QAAQ,CAACoD,KAAK,CAAC;IACnB;EACJ,CAAC;EAED,MAAMQ,kBAAkB,GAAGtF,OAAO,CAAC,MAAM;IACrC,OAAO,CAACsB,KAAK,CAACa,OAAO,CAACoD,iBAAiB,EAAE;MAAEC,IAAI,EAAExE,UAAU,GAAGyE,SAAS,GAAG;IAAE,CAAC,CAAC;EAClF,CAAC,EAAE,CAACnE,KAAK,EAAEN,UAAU,CAAC,CAAC;EACvB,MAAM0E,WAAW,GAAG1F,OAAO,CAAC,MAAM;IAC9B,OAAAkE,MAAA,CAAAC,MAAA,KACOhD,eAAe;MAClBwE,8BAA8B,EAAE,KAAK;MACrCC,4BAA4B,EAAE;IAAK;EAE3C,CAAC,EAAE,CAACzE,eAAe,CAAC,CAAC;EACrB,MAAM0E,UAAU,GAAGjG,WAAW,CAAC,CAACkG,KAAK,EAAErD,IAAI,KAAK;IAC5C,OAAQ/B,OAAA,CAACL,QAAQ,EAAA6D,MAAA,CAAAC,MAAA,KAAK/C,aAAa,EAAMa,WAAW;MAAElB,WAAW,EAAE0B,IAAK;MAACsD,kBAAkB;MAACC,UAAU,EAAE,CAAChF,UAAW;MAAC2C,iBAAiB,EAAEJ,iBAAkB;MAACE,gBAAgB,EAAEC,qBAAsB;MAACuC,aAAa,EAAE7E,aAAa,EAAE6E,aAAa,IAAI,IAAK;MAAC3E,KAAK,EAAE,CAACA,KAAK,CAACa,OAAO,CAAC+D,QAAQ,EAAE9E,aAAa,EAAEE,KAAK,CAAE;MAACc,WAAW,EAAEpB,UAAU,GAAGI,aAAa,EAAEgB,WAAW,GAAGqD,SAAU;MAACpE,MAAM,EAAE,GAAGA,MAAM,IAAIoB,IAAI;IAAG;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EACpZ,CAAC,EAAE,CAACrD,aAAa,EAAEmC,iBAAiB,EAAEG,qBAAqB,CAAC,CAAC;EAC7D,OAAQhD,OAAA,CAACT,IAAI;IAACqB,KAAK,EAAEgE,kBAAmB;IAAAa,QAAA,GACtCzF,OAAA,CAACH,YAAY;MAAqB6F,GAAG,EAAE5E,IAAK;MAAC6E,IAAI,EAAE5E,KAAM;MAACoE,UAAU,EAAEA,UAAW;MAACnB,WAAW,EAAEA,WAAY;MAAC4B,wBAAwB,EAAEC,IAAI,CAACC,KAAK,CAAC7F,eAAe,GAAG,GAAG,CAAE;MAAC8F,aAAa,EAAErF,aAAa,EAAEsF,WAAY;MAACC,YAAY,EAAE3F,UAAW;MAACM,KAAK,EAAEA,KAAK,CAACa,OAAO,CAACyE,SAAU;MAACC,gBAAgB,EAAE5F,WAAY;MAACW,aAAa,EAAEA,aAAc;MAACkF,UAAU,EAAElG,eAAgB;MAACmG,SAAS,EAAE7G,SAAS,CAAC8C,WAAY;MAACY,YAAY,EAAEA,YAAa;MAACzC,eAAe,EAAEuE;IAAY,GAAjb,eAAe;MAAApB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAma,CAAC,EACpcR,kBAAkB,CAAC,CAAC;EAAA;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AACX,CAAC;AACD,eAAe5D,YAAY;AAC3B,SAASsE,OAAOA,CAAC6B,IAAI,EAAEpE,KAAK,EAAE;EAC1B,MAAMqE,CAAC,GAAG,IAAIvH,KAAK,CAACsH,IAAI,CAAC;EACzBC,CAAC,CAAC7D,SAAS,CAACR,KAAK,EAAE,IAAI,CAAC;EAExBqE,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC;EAEZ,OAAO/G,eAAe,CAAC8G,CAAC,CAAC;AAC7B;AACA,SAAStF,aAAaA,CAACqF,IAAI,EAAEG,aAAa,GAAGxG,eAAe,EAAE;EAC1D,MAAMsG,CAAC,GAAGD,IAAI,IAAI,IAAItH,KAAK,CAAC,CAAC,CAACiD,QAAQ,CAAC,CAAC;EACxC,MAAMmC,KAAK,GAAG,EAAE;EAChB,KAAK,IAAIlC,KAAK,GAAG,CAACuE,aAAa,EAAEvE,KAAK,IAAIuE,aAAa,EAAEvE,KAAK,EAAE,EAAE;IAC9D,MAAMsC,OAAO,GAAGC,OAAO,CAAC8B,CAAC,EAAErE,KAAK,CAAC;IACjCkC,KAAK,CAACM,IAAI,CAACF,OAAO,CAAC;EACvB;EACA,OAAOJ,KAAK;AAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}