{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axiosInstance from '../../../../Security/helpers/axios';\nexport const denyEntry = createAsyncThunk(\"deny/denyEntry\", async (payload, {\n  rejectWithValue\n}) => {\n  try {\n    const {\n      societyId,\n      visitorId\n    } = payload;\n    response = await axiosInstance.put(`/denyVisitor`, {\n      societyId,\n      visitorId\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response ? error.response.data : error.message);\n  }\n});\nconst denySlice = createSlice({\n  name: \"deny\",\n  initialState: {\n    deny: [],\n    status: \"idle\",\n    error: null,\n    successMessage: null\n  },\n  reducers: {\n    resetState: state => {\n      state.loading = false;\n      state.error = null;\n      state.success = false;\n      state.successMessage = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(denyEntry.pending, state => {\n      state.status = \"loading\";\n    }).addCase(denyEntry.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.deny = action.payload;\n      state.successMessage = action.payload.message;\n    }).addCase(denyEntry.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.payload.message;\n    });\n  }\n});\nexport const {\n  resetState\n} = denySlice.actions;\nexport default denySlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axiosInstance","denyEntry","payload","rejectWithValue","societyId","visitorId","response","put","data","error","message","denySlice","name","initialState","deny","status","successMessage","reducers","resetState","state","loading","success","extraReducers","builder","addCase","pending","fulfilled","action","rejected","actions","reducer"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/src/panel/User/Redux/Slice/Security_Panel/DenySlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from '../../../../Security/helpers/axios';\r\n\r\nexport const denyEntry = createAsyncThunk(\r\n    \"deny/denyEntry\",\r\n    async (payload, { rejectWithValue }) => {\r\n        try {\r\n            const { societyId, visitorId } = payload;\r\n            response = await axiosInstance.put(`/denyVisitor`, {\r\n                societyId,\r\n                visitorId,\r\n            }\r\n        );\r\n        return response.data;\r\n        } catch (error) {\r\n            return rejectWithValue(error.response ? error.response.data : error.message);\r\n        }\r\n    }\r\n);\r\n\r\n\r\nconst denySlice = createSlice({\r\n    name: \"deny\",\r\n    initialState: {\r\n        deny: [],\r\n        status: \"idle\",\r\n        error: null,\r\n        successMessage: null,\r\n\r\n    },\r\n    reducers: {\r\n        resetState: (state) => {\r\n            state.loading = false;\r\n            state.error = null;\r\n            state.success = false;\r\n            state.successMessage = null;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(denyEntry.pending, (state) => {\r\n                state.status = \"loading\";\r\n            })\r\n            .addCase(denyEntry.fulfilled, (state, action) => {\r\n                state.status = \"succeeded\";\r\n                state.deny = action.payload;\r\n                state.successMessage = action.payload.message;\r\n            })\r\n            .addCase(denyEntry.rejected, (state, action) => {\r\n                state.status = \"failed\";\r\n                state.error = action.payload.message;\r\n            });\r\n    },\r\n});\r\nexport const { resetState } = denySlice.actions;\r\nexport default denySlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,aAAa,MAAM,oCAAoC;AAE9D,OAAO,MAAMC,SAAS,GAAGF,gBAAgB,CACrC,gBAAgB,EAChB,OAAOG,OAAO,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACpC,IAAI;IACA,MAAM;MAAEC,SAAS;MAAEC;IAAU,CAAC,GAAGH,OAAO;IACxCI,QAAQ,GAAG,MAAMN,aAAa,CAACO,GAAG,CAAC,cAAc,EAAE;MAC/CH,SAAS;MACTC;IACJ,CACJ,CAAC;IACD,OAAOC,QAAQ,CAACE,IAAI;EACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,OAAON,eAAe,CAACM,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACC,OAAO,CAAC;EAChF;AACJ,CACJ,CAAC;AAGD,MAAMC,SAAS,GAAGb,WAAW,CAAC;EAC1Bc,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVC,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE,MAAM;IACdN,KAAK,EAAE,IAAI;IACXO,cAAc,EAAE;EAEpB,CAAC;EACDC,QAAQ,EAAE;IACNC,UAAU,EAAGC,KAAK,IAAK;MACnBA,KAAK,CAACC,OAAO,GAAG,KAAK;MACrBD,KAAK,CAACV,KAAK,GAAG,IAAI;MAClBU,KAAK,CAACE,OAAO,GAAG,KAAK;MACrBF,KAAK,CAACH,cAAc,GAAG,IAAI;IAC/B;EACJ,CAAC;EACDM,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACvB,SAAS,CAACwB,OAAO,EAAGN,KAAK,IAAK;MACnCA,KAAK,CAACJ,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDS,OAAO,CAACvB,SAAS,CAACyB,SAAS,EAAE,CAACP,KAAK,EAAEQ,MAAM,KAAK;MAC7CR,KAAK,CAACJ,MAAM,GAAG,WAAW;MAC1BI,KAAK,CAACL,IAAI,GAAGa,MAAM,CAACzB,OAAO;MAC3BiB,KAAK,CAACH,cAAc,GAAGW,MAAM,CAACzB,OAAO,CAACQ,OAAO;IACjD,CAAC,CAAC,CACDc,OAAO,CAACvB,SAAS,CAAC2B,QAAQ,EAAE,CAACT,KAAK,EAAEQ,MAAM,KAAK;MAC5CR,KAAK,CAACJ,MAAM,GAAG,QAAQ;MACvBI,KAAK,CAACV,KAAK,GAAGkB,MAAM,CAACzB,OAAO,CAACQ,OAAO;IACxC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AACF,OAAO,MAAM;EAAEQ;AAAW,CAAC,GAAGP,SAAS,CAACkB,OAAO;AAC/C,eAAelB,SAAS,CAACmB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}