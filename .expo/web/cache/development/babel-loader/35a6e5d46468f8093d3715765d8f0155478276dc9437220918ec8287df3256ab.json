{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const fetchComplaints = createAsyncThunk('complaints/fetchComplaints', async (societyId, thunkAPI) => {\n  try {\n    const response = await axios.get(`http://192.168.29.226:2000/api/getAllComplaints/${societyId}`);\n    return response.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data);\n  }\n});\nexport const createComplaint = createAsyncThunk('complaints/createComplaint', async (complaintData, thunkAPI) => {\n  console.log(complaintData);\n  try {\n    const response = await axios.post('http://192.168.29.226:2000/api/createComplaint', complaintData);\n    return response.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data);\n  }\n});\nexport const updateComplaintResolution = createAsyncThunk('complaints/updateComplaintResolution', async ({\n  societyId,\n  complaintId,\n  resolution\n}, thunkAPI) => {\n  try {\n    const response = await axios.put(`http://192.168.29.226:2000/api/updateComplaint/${societyId}/${complaintId}`, {\n      resolution\n    });\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data);\n  }\n});\nconst complaintsSlice = createSlice({\n  name: 'complaints',\n  initialState: {\n    complaints: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchComplaints.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchComplaints.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.complaints = action.payload;\n    }).addCase(fetchComplaints.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    }).addCase(createComplaint.pending, state => {\n      state.status = 'loading';\n    }).addCase(createComplaint.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.complaints = action.payload;\n    }).addCase(createComplaint.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    }).addCase(updateComplaintResolution.pending, state => {\n      state.status = 'loading';\n    }).addCase(updateComplaintResolution.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.complaints = action.payload;\n    }).addCase(updateComplaintResolution.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    });\n  }\n});\nexport default complaintsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchComplaints","societyId","thunkAPI","response","get","data","error","rejectWithValue","createComplaint","complaintData","console","log","post","updateComplaintResolution","complaintId","resolution","put","complaintsSlice","name","initialState","complaints","status","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["C:/Users/user/OneDrive/Documents/rn/l/src/panel/User/Redux/Slice/GetHelpSlice/ComplaintsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\n// Async thunk for fetching complaints\r\nexport const fetchComplaints = createAsyncThunk(\r\n    'complaints/fetchComplaints',\r\n    async (societyId, thunkAPI) => {\r\n        try {\r\n            const response = await axios.get(`http://192.168.29.226:2000/api/getAllComplaints/${societyId}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            return thunkAPI.rejectWithValue(error.response.data);\r\n        }\r\n    }\r\n);\r\n\r\n// Async thunk for creating a complaint\r\nexport const createComplaint = createAsyncThunk(\r\n    'complaints/createComplaint',\r\n    async (complaintData, thunkAPI) => {\r\n        console.log(complaintData)\r\n        try {\r\n            const response = await axios.post('http://192.168.29.226:2000/api/createComplaint', complaintData);\r\n            return response.data;\r\n        } catch (error) {\r\n            return thunkAPI.rejectWithValue(error.response.data);\r\n        }\r\n    }\r\n);\r\nexport const updateComplaintResolution = createAsyncThunk(\r\n    'complaints/updateComplaintResolution',\r\n    async ({ societyId, complaintId, resolution }, thunkAPI) => {\r\n        try {\r\n            const response = await axios.put(`http://192.168.29.226:2000/api/updateComplaint/${societyId}/${complaintId}`, { resolution });\r\n            console.log(response.data)\r\n            return response.data;\r\n        } catch (error) {\r\n            return thunkAPI.rejectWithValue(error.response.data);\r\n        }\r\n    }\r\n);\r\nconst complaintsSlice = createSlice({\r\n    name: 'complaints',\r\n    initialState: {\r\n        complaints: [],\r\n        status: 'idle',\r\n        error: null,\r\n    },\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        // Handling the fetch complaints actions\r\n        builder\r\n            .addCase(fetchComplaints.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(fetchComplaints.fulfilled, (state, action) => {\r\n                state.status = 'succeeded';\r\n                state.complaints = action.payload;\r\n            })\r\n            .addCase(fetchComplaints.rejected, (state, action) => {\r\n                state.status = 'failed';\r\n                state.error = action.payload;\r\n            })\r\n            // Handling the create complaint actions\r\n            .addCase(createComplaint.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(createComplaint.fulfilled, (state, action) => {\r\n                state.status = 'succeeded';\r\n                state.complaints=action.payload; // Assuming action.payload is the created complaint\r\n            })\r\n            .addCase(createComplaint.rejected, (state, action) => {\r\n                state.status = 'failed';\r\n                state.error = action.payload;\r\n            })\r\n            .addCase(updateComplaintResolution.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(updateComplaintResolution.fulfilled, (state, action) => {\r\n                state.status = 'succeeded';\r\n                state.complaints = action.payload;\r\n\r\n            })\r\n            .addCase(updateComplaintResolution.rejected, (state, action) => {\r\n                state.status = 'failed';\r\n                state.error = action.payload;\r\n            });\r\n    },\r\n});\r\n\r\nexport default complaintsSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}